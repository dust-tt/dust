name: Deploy Prodbox

on:
  workflow_dispatch:

concurrency:
  group: deploy_prodbox
  cancel-in-progress: false

env:
  GCLOUD_PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ssh-key: "${{ secrets.PRODBOX_PRIVATE_DEPLOY_KEY }}"

      - name: Get short sha
        id: short_sha
        run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: "Authenticate with Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GCLOUD_SA_KEY }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin

      - name: Setup kubectl
        run: |
          gcloud container clusters get-credentials dust-kube --region us-central1

      - name: Build the image on Cloud Build
        run: |
          chmod +x ./k8s/cloud-build.sh
          ./k8s/cloud-build.sh --image-name=prodbox --dockerfile-path=./prodbox.Dockerfile --working-dir=./ --gcloud-ignore-file=.gcloudignore-prodbox --dust-client-facing-url=https://dust.tt

      - name: Deploy the image on Kubernetes
        run: |
          chmod +x ./k8s/deploy-image.sh
          ./k8s/deploy-image.sh gcr.io/$GCLOUD_PROJECT_ID/prodbox-image:${{ steps.short_sha.outputs.short_sha }} prodbox-deployment

      - name: Wait for rollout to complete
        run: |
          echo "Waiting for rollout to complete"
          kubectl rollout status deployment/prodbox-deployment --timeout=10m
