name: Lint & Build & Test (core)

on:
  push:
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      core-changed: ${{ steps.changes.outputs.core }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check for relevant changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          base: ${{ github.event.repository.default_branch }}
          filters: |
            core:
              - 'core/**'
              - '.github/workflows/build-and-test-core.yml'

      - name: Workflow Decision Summary
        run: |
          echo "üîç Workflow Decision: ${{ steps.changes.outputs.core == 'true' && 'RUNNING TESTS' || 'SKIPPING TESTS' }}"
          if [ "${{ steps.changes.outputs.core }}" == "true" ]; then
            echo "‚úÖ Core changes detected vs ${{ github.event.repository.default_branch }} - running tests"
          else
            echo "‚è≠Ô∏è No core changes vs ${{ github.event.repository.default_branch }} - skipping tests"
          fi

  test:
    runs-on: ubuntu-latest
    needs: check-changes
    if: needs.check-changes.outputs.core-changed == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install minimal stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: cargo, rustfmt, rust-std, rustc

      - name: Install Redis
        uses: chenjuneking/redis-setup-action@v1
        with:
          version: "7.2.5"
          hostPort: 5434
          containerPort: 6379

      - name: Install Postgres
        uses: dust-tt/postgresql-action@6730e69fe23f4f2989c19edf9e6e0d7ffeb0a05c
        with:
          postgresql docker image: mirror.gcr.io/postgres
          postgresql version: "14.13"
          postgresql db: oauth
          postgresql user: test
          postgresql password: test
          postgresql port: 5433

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: core

      - name: Lint
        working-directory: core
        run: cargo fmt --all -- --check

      - name: Setup Tables
        working-directory: core
        run: cargo run --bin init_db
        env:
          OAUTH_DATABASE_URI: "postgres://test:test@localhost:5433/oauth"

      - name: Test
        working-directory: core
        run: cargo test --all
        env:
          DISABLE_API_KEY_CHECK: "true"
          OAUTH_DATABASE_URI: "postgres://test:test@localhost:5433/oauth"
          REDIS_URI: "redis://localhost:5434"
          OAUTH_ENCRYPTION_KEY: ${{ secrets.TEST_OAUTH_ENCRYPTION_KEY }}
