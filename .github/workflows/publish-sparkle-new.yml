name: Publish Sparkle

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: "Type of version bump (major, minor, patch)"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: read

concurrency:
  group: publish_sparkle
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 20.13.0
          cache: "npm"
          cache-dependency-path: ./sparkle/package-lock.json

      - name: Build and test
        working-directory: sparkle
        run: npm ci && npm run build

  publish:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0
          persist-credentials: true

      - uses: actions/setup-node@v3
        with:
          node-version: 20.13.0
          registry-url: "https://registry.npmjs.org"

      - name: Configure git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Version bump and commit
        run: |
          # Move to sparkle directory for npm version
          cd sparkle
          CURRENT_VERSION=$(npm version ${{ github.event.inputs.version_type }} --no-git-tag-version)
          git add package.json package-lock.json
          
          # Commit with version
          git commit -m "chore(release): bump sparkle version to ${CURRENT_VERSION} [skip ci]"
          echo "Created version ${CURRENT_VERSION}"

      - name: Push changes
        run: |
          git push origin main

      - name: Publish
        working-directory: sparkle
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}