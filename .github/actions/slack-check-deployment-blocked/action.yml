name: 'Slack Check Deployment Blocked'
description: 'Check the Slack #deployments channel title if deployment should be blocked'

inputs:
  component:
    description: 'Component being deployed'
    required: true
  channel:
    description: 'Slack channel'
    required: true
  slack_token:
    description: 'Slack bot token'
    required: true

runs:
  using: "composite"
  steps:
    - name: Get channel info
      id: slack_channel_info
      uses: slackapi/slack-github-action@v2.0.0
      with:
        method: conversations.info
        token: ${{ inputs.slack_token }}
        payload: |
          channel: ${{ inputs.channel }}
        errors: true


    - name: Get channel topic
      if: steps.slack_channel_info.outputs.ok == 'true'
      id: slack_channel_topic
      shell: bash
      run: |
        RESPONSE='${{ steps.slack_channel_info.outputs.response }}'
        if ! TOPIC=$(echo "$RESPONSE" | jq -r '.channel.topic.value'); then
          echo "Failed to extract Slack channel topic" >&2
          exit 0
        fi
        # Escape the topic string for GitHub Actions output
        ESCAPED_TOPIC=$(echo "$TOPIC" | sed 's/[<>]/\\&/g')

        echo "topic=$ESCAPED_TOPIC" >> $GITHUB_OUTPUT

    - name: Parse channel topic for blocked deployments
      if: steps.slack_channel_topic.outputs.topic != ''
      id: parse_channel_topic
      shell: bash
      run: |
        is_blocked() {
            local raw_component="$1"
            local component=$(printf '%s' "$raw_component" | sed 's/[][\.*^$/]/\\&/g')

            local status_string="$2"
            
            if echo "$status_string" | grep -q ":x:[ ]*${component}[ ]" || echo "$status_string" | grep -q ":x:[ ]*${component}|\$" ; then
                return 1
            else
                return 0
            fi
        }
        is_blocked "${{ inputs.component }}" "${{ steps.slack_channel_topic.outputs.topic }}" && echo "${{ inputs.component}} is blocked based on channel topic" && exit 1
    