SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'microsoft_configurations'
CREATE TABLE IF NOT EXISTS "microsoft_configurations" ("id"  SERIAL , "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "connectorId" INTEGER NOT NULL REFERENCES "connectors" ("id") ON DELETE CASCADE ON UPDATE CASCADE, "pdfEnabled" BOOLEAN NOT NULL DEFAULT false, "largeFilesEnabled" BOOLEAN NOT NULL DEFAULT false, PRIMARY KEY ("id"));
SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'microsoft_configurations' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
CREATE UNIQUE INDEX "microsoft_configurations_connector_id" ON "microsoft_configurations" ("connectorId")
SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'microsoft_roots'
CREATE TABLE IF NOT EXISTS "microsoft_roots" ("id"  SERIAL , "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "connectorId" INTEGER NOT NULL REFERENCES "connectors" ("id") ON DELETE CASCADE ON UPDATE CASCADE, "internalId" VARCHAR(255) NOT NULL, "nodeType" VARCHAR(255) NOT NULL, "currentDeltaLink" VARCHAR(1024) NOT NULL, PRIMARY KEY ("id"));
SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'microsoft_roots' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
CREATE UNIQUE INDEX "microsoft_roots_connector_id_internal_id" ON "microsoft_roots" ("connectorId", "internalId")
CREATE INDEX "microsoft_roots_connector_id_node_type" ON "microsoft_roots" ("connectorId", "nodeType")
SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'microsoft_nodes'
CREATE TABLE IF NOT EXISTS "microsoft_nodes" ("id"  SERIAL , "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "lastSeenTs" TIMESTAMP WITH TIME ZONE, "lastUpsertedTs" TIMESTAMP WITH TIME ZONE, "skipReason" VARCHAR(255), "connectorId" INTEGER NOT NULL REFERENCES "connectors" ("id") ON DELETE CASCADE ON UPDATE CASCADE, "internalId" VARCHAR(512) NOT NULL, "nodeType" VARCHAR(255) NOT NULL, "name" TEXT, "mimeType" VARCHAR(255), "parentInternalId" VARCHAR(512), PRIMARY KEY ("id"));
SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'microsoft_nodes' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
CREATE UNIQUE INDEX "microsoft_nodes_internal_id_connector_id" ON "microsoft_nodes" ("internalId", "connectorId")
CREATE INDEX "microsoft_nodes_connector_id_node_type" ON "microsoft_nodes" ("connectorId", "nodeType")
CREATE INDEX CONCURRENTLY "microsoft_nodes_parent_internal_id_connector_id" ON "microsoft_nodes" ("parentInternalId", "connectorId")
