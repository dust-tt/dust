SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'freshservice_configurations';
CREATE TABLE IF NOT EXISTS "freshservice_configurations" ("createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "subdomain" VARCHAR(255) NOT NULL, "retentionPeriodDays" INTEGER NOT NULL DEFAULT 180, "ticketPermission" VARCHAR(255) NOT NULL DEFAULT 'none', "connectorId" BIGINT NOT NULL REFERENCES "connectors" ("id") ON DELETE RESTRICT ON UPDATE CASCADE, "id"  BIGSERIAL , PRIMARY KEY ("id"));
SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'freshservice_configurations' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
CREATE UNIQUE INDEX "freshservice_configurations_connector_id" ON "freshservice_configurations" ("connectorId");
SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'freshservice_timestamp_cursors';
CREATE TABLE IF NOT EXISTS "freshservice_timestamp_cursors" ("createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "timestampCursor" TIMESTAMP WITH TIME ZONE NOT NULL, "connectorId" BIGINT NOT NULL REFERENCES "connectors" ("id") ON DELETE RESTRICT ON UPDATE CASCADE, "id"  BIGSERIAL , PRIMARY KEY ("id"));
SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'freshservice_timestamp_cursors' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
CREATE UNIQUE INDEX "freshservice_timestamp_cursors_connector_id" ON "freshservice_timestamp_cursors" ("connectorId");
SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'freshservice_tickets';
CREATE TABLE IF NOT EXISTS "freshservice_tickets" ("createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "ticketId" VARCHAR(255) NOT NULL, "subject" TEXT NOT NULL, "url" TEXT NOT NULL, "ticketUpdatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "lastUpsertedTs" TIMESTAMP WITH TIME ZONE, "connectorId" BIGINT NOT NULL REFERENCES "connectors" ("id") ON DELETE RESTRICT ON UPDATE CASCADE, "id"  BIGSERIAL , PRIMARY KEY ("id"));
SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'freshservice_tickets' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
CREATE UNIQUE INDEX "freshservice_tickets_connector_ticket_idx" ON "freshservice_tickets" ("connectorId", "ticketId");
CREATE INDEX "freshservice_tickets_connector_id" ON "freshservice_tickets" ("connectorId");
