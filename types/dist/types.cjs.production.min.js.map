{"version":3,"file":"types.cjs.production.min.js","sources":["../src/shared/result.ts","../src/shared/utils/iots_utils.ts","../src/connectors/admin/cli.ts","../src/connectors/api.ts","../src/connectors/slack.ts","../src/connectors/webcrawler.ts","../src/connectors/api_handlers/connector_configuration.ts","../src/connectors/api_handlers/create_connector.ts","../src/connectors/api_handlers/update_connector.ts","../src/connectors/confluence.ts","../src/connectors/content_nodes.ts","../src/connectors/google_drive.ts","../src/connectors/notion.ts","../src/front/assistant/actions/retrieval.ts","../src/front/lib/assistant.ts","../src/front/api_handlers/internal/agent_configuration.ts","../src/shared/utils/general.ts","../src/front/files.ts","../src/front/api_handlers/internal/assistant.ts","../src/front/api_handlers/internal/spaces.ts","../src/front/api_handlers/public/data_sources.ts","../src/front/api_handlers/public/spaces.ts","../src/front/app.ts","../src/front/assistant/actions/browse.ts","../src/front/assistant/actions/index.ts","../src/front/assistant/actions/guards.ts","../src/front/assistant/actions/tables_query.ts","../src/front/assistant/actions/websearch.ts","../src/front/assistant/avatar.ts","../src/front/assistant/builder.ts","../src/front/assistant/conversation.ts","../src/front/assistant/templates.ts","../src/front/assistant/visualization.ts","../src/front/data_source.ts","../src/front/groups.ts","../src/front/lib/actions/types.ts","../src/front/lib/api/credentials.ts","../src/front/lib/connectors_api.ts","../src/front/lib/core_api.ts","../src/front/lib/poke/plugins.ts","../src/shared/utils/assert_never.ts","../src/front/user.ts","../src/front/membership_invitation.ts","../src/front/memberships.ts","../src/front/plan.ts","../src/front/space.ts","../src/front/workspace.ts","../src/oauth/oauth_api.ts","../src/oauth/client/access_token.ts","../src/oauth/client/credentials.ts","../src/oauth/lib.ts","../src/oauth/client/setup.ts","../src/shared/statsd.ts","../src/shared/redis_client.ts","../src/shared/cache.ts","../src/shared/deployment.ts","../src/shared/feature_flags.ts","../src/shared/internal_mime_types.ts","../src/shared/rate_limiter.ts","../src/shared/retries.ts","../src/shared/text_extraction/transform.ts","../src/shared/text_extraction/transformToCSV.ts","../src/shared/text_extraction/index.ts","../src/shared/utils/streams.ts","../src/shared/user_operation.ts","../src/shared/utils/async_utils.ts","../src/shared/utils/config.ts","../src/shared/utils/error_utils.ts","../src/shared/utils/global_error_handler.ts","../src/shared/utils/hashing.ts","../src/shared/utils/string_utils.ts","../src/shared/utils/structured_data.ts","../src/front/assistant/agent.ts","../src/core/data_source.ts","../src/front/website.ts","../src/connectors/snowflake.ts","../src/front/assistant/actions/process.ts","../src/front/resource_permissions.ts","../src/front/tracker.ts","../src/front/data_source_view.ts","../src/front/assistant/actions/dust_app_run.ts","../src/connectors/intercom.ts","../src/connectors/zendesk.ts","../src/front/lib/error.ts","../src/front/assistant/generation.ts","../src/front/content_fragment.ts","../src/shared/env.ts","../src/shared/utils/date_utils.ts","../src/connectors/configuration.ts","../src/front/lib/labs.ts","../src/connectors/microsoft.ts"],"sourcesContent":["/**\n * A Result is a type that can be either Ok or Err.\n * The main motivation behind this utils is to overcome the fact that Javascript does not\n * let you check the type of an object at runtime, so you cannot know if a function returned an error type\n * or a success type.\n *\n * Usage:\n * import {Result, Ok, Err} from \"@app/lib/result\"\n * function divide(numerator: number, denominator: number) : Result<number, Error> {\n *     if (denominator === 0) {\n *        return new Err(new Error(\"Cannot divide by zero\"));\n *      }\n *     return new Ok(numerator / denominator);\n * }\n */\n\nexport class Ok<T> {\n  constructor(public value: T) {}\n\n  isOk(): this is Ok<T> {\n    return true;\n  }\n\n  isErr(): this is Err<never> {\n    return false;\n  }\n}\n\nexport class Err<E> {\n  constructor(public error: E) {}\n\n  isOk(): this is Ok<never> {\n    return false;\n  }\n\n  isErr(): this is Err<E> {\n    return true;\n  }\n}\n\nexport type Result<T, E> = Ok<T> | Err<E>;\n","import { isLeft } from \"fp-ts/lib/Either\";\nimport * as t from \"io-ts\";\nimport * as reporter from \"io-ts-reporters\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { Err, Ok, Result } from \"../../shared/result\";\n\nexport function ioTsEnum<EnumType>(\n  enumValues: readonly string[],\n  enumName?: string\n) {\n  const isEnumValue = (input: unknown): input is EnumType =>\n    enumValues.includes(input as string);\n\n  return new t.Type<EnumType>(\n    enumName || uuidv4(),\n    isEnumValue,\n    (input, context) =>\n      isEnumValue(input) ? t.success(input) : t.failure(input, context),\n    t.identity\n  );\n}\n\nexport interface BrandedRange {\n  readonly Range: unique symbol;\n}\n\n// Defines a function to generate a branded codec for validating numbers within a specific range.\nexport function createRangeCodec(min: number, max: number) {\n  return t.brand(\n    t.number,\n    (n): n is t.Branded<number, BrandedRange> => n >= min && n <= max,\n    \"Range\"\n  );\n}\n\ninterface SlugifiedStringBrand {\n  readonly SlugifiedString: unique symbol;\n}\n\nexport const SlugifiedString = t.brand(\n  t.string,\n  (s): s is t.Branded<string, SlugifiedStringBrand> => /^[a-z0-9_]+$/.test(s),\n  \"SlugifiedString\"\n);\n\nexport function ioTsParsePayload<T>(\n  payload: unknown,\n  codec: t.Type<T>\n): Result<T, string[]> {\n  const bodyValidation = codec.decode(payload);\n  if (isLeft(bodyValidation)) {\n    const pathError = reporter.formatValidationErrors(bodyValidation.left);\n    return new Err(pathError);\n  }\n\n  return new Ok(bodyValidation.right);\n}\n\n// Parses numbers as strings. Must not be used in union types with number.\nexport const NumberAsStringCodec = new t.Type<string, string, unknown>(\n  \"NumberAsString\",\n  (u): u is string => typeof u === \"number\",\n  (u, c) => {\n    if (typeof u === \"number\") {\n      return t.success(u.toString());\n    }\n    return t.failure(u, c, \"Value must be a number\");\n  },\n  t.identity\n);\n","import * as t from \"io-ts\";\n\nimport { NumberAsStringCodec } from \"../../shared/utils/iots_utils\";\n\nexport const ConnectorsCommandSchema = t.type({\n  majorCommand: t.literal(\"connectors\"),\n  command: t.union([\n    t.literal(\"stop\"),\n    t.literal(\"delete\"),\n    t.literal(\"pause\"),\n    t.literal(\"unpause\"),\n    t.literal(\"resume\"),\n    t.literal(\"full-resync\"),\n    t.literal(\"set-error\"),\n    t.literal(\"clear-error\"),\n    t.literal(\"restart\"),\n    t.literal(\"get-parents\"),\n    t.literal(\"set-permission\"),\n    t.literal(\"garbage-collect\"),\n  ]),\n  args: t.record(\n    t.string,\n    t.union([t.string, NumberAsStringCodec, t.undefined])\n  ),\n});\n\nexport type ConnectorsCommandType = t.TypeOf<typeof ConnectorsCommandSchema>;\n\n/**\n * <Confluence>\n */\nexport const ConfluenceCommandSchema = t.type({\n  majorCommand: t.literal(\"confluence\"),\n  command: t.union([\n    t.literal(\"me\"),\n    t.literal(\"upsert-page\"),\n    t.literal(\"upsert-pages\"),\n    t.literal(\"update-parents\"),\n  ]),\n  args: t.type({\n    connectorId: t.union([t.number, t.undefined]),\n    pageId: t.union([t.number, t.undefined]),\n    spaceId: t.union([t.number, t.undefined]),\n    file: t.union([t.string, t.undefined]),\n    keyInFile: t.union([t.string, t.undefined]),\n  }),\n});\nexport type ConfluenceCommandType = t.TypeOf<typeof ConfluenceCommandSchema>;\n\nexport const ConfluenceMeResponseSchema = t.type({\n  me: t.UnknownRecord,\n});\nexport type ConfluenceMeResponseType = t.TypeOf<\n  typeof ConfluenceMeResponseSchema\n>;\n\nexport const ConfluenceUpsertPageResponseSchema = t.type({\n  workflowId: t.string,\n  workflowUrl: t.union([t.string, t.undefined]),\n});\nexport type ConfluenceUpsertPageResponseType = t.TypeOf<\n  typeof ConfluenceUpsertPageResponseSchema\n>;\n/**\n * </Confluence>\n */\n\nexport const GithubCommandSchema = t.type({\n  majorCommand: t.literal(\"github\"),\n  command: t.union([\n    t.literal(\"resync-repo\"),\n    t.literal(\"code-sync\"),\n    t.literal(\"sync-issue\"),\n    t.literal(\"force-daily-code-sync\"),\n    t.literal(\"skip-issue\"),\n  ]),\n  args: t.record(\n    t.string,\n    t.union([t.string, NumberAsStringCodec, t.undefined])\n  ),\n});\n\nexport type GithubCommandType = t.TypeOf<typeof GithubCommandSchema>;\n\nexport const NotionCommandSchema = t.type({\n  majorCommand: t.literal(\"notion\"),\n  command: t.union([\n    t.literal(\"skip-page\"),\n    t.literal(\"skip-database\"),\n    t.literal(\"upsert-page\"),\n    t.literal(\"upsert-database\"),\n    t.literal(\"search-pages\"),\n    t.literal(\"update-core-parents\"),\n    t.literal(\"check-url\"),\n    t.literal(\"find-url\"),\n    t.literal(\"delete-url\"),\n    t.literal(\"me\"),\n    t.literal(\"stop-all-garbage-collectors\"),\n    t.literal(\"update-parents-fields\"),\n    t.literal(\"clear-parents-last-updated-at\"),\n  ]),\n  args: t.record(\n    t.string,\n    t.union([t.string, NumberAsStringCodec, t.undefined])\n  ),\n});\n\nexport type NotionCommandType = t.TypeOf<typeof NotionCommandSchema>;\n\nexport const GoogleDriveCommandSchema = t.type({\n  majorCommand: t.literal(\"google_drive\"),\n  command: t.union([\n    t.literal(\"garbage-collect-all\"),\n    t.literal(\"get-file\"),\n    t.literal(\"check-file\"),\n    t.literal(\"get-google-parents\"),\n    t.literal(\"clean-invalid-parents\"),\n    t.literal(\"upsert-file\"),\n    t.literal(\"update-core-parents\"),\n    t.literal(\"restart-google-webhooks\"),\n    t.literal(\"start-incremental-sync\"),\n    t.literal(\"restart-all-incremental-sync-workflows\"),\n    t.literal(\"skip-file\"),\n    t.literal(\"register-webhook\"),\n    t.literal(\"register-all-webhooks\"),\n    t.literal(\"list-labels\"),\n  ]),\n  args: t.record(\n    t.string,\n    t.union([t.string, NumberAsStringCodec, t.undefined])\n  ),\n});\n\nexport type GoogleDriveCommandType = t.TypeOf<typeof GoogleDriveCommandSchema>;\n\nexport const SlackCommandSchema = t.type({\n  majorCommand: t.literal(\"slack\"),\n  command: t.union([\n    t.literal(\"enable-bot\"),\n    t.literal(\"sync-channel\"),\n    t.literal(\"sync-thread\"),\n    t.literal(\"uninstall-for-unknown-team-ids\"),\n    t.literal(\"whitelist-domains\"),\n    t.literal(\"whitelist-bot\"),\n    t.literal(\"sync-channel-metadata\"),\n  ]),\n  args: t.record(\n    t.string,\n    t.union([t.string, NumberAsStringCodec, t.undefined])\n  ),\n});\n\nexport type SlackCommandType = t.TypeOf<typeof SlackCommandSchema>;\n\nexport const BatchCommandSchema = t.type({\n  majorCommand: t.literal(\"batch\"),\n  command: t.union([\n    t.literal(\"full-resync\"),\n    t.literal(\"restart-all\"),\n    t.literal(\"stop-all\"),\n    t.literal(\"resume-all\"),\n  ]),\n  args: t.record(\n    t.string,\n    t.union([t.string, NumberAsStringCodec, t.undefined])\n  ),\n});\n\nexport type BatchCommandType = t.TypeOf<typeof BatchCommandSchema>;\n\nexport const WebcrawlerCommandSchema = t.type({\n  majorCommand: t.literal(\"webcrawler\"),\n  command: t.literal(\"start-scheduler\"),\n});\n\nexport const BatchAllResponseSchema = t.type({\n  succeeded: t.number,\n  failed: t.number,\n});\nexport type BatchAllResponseType = t.TypeOf<typeof BatchAllResponseSchema>;\n\nexport type WebcrawlerCommandType = t.TypeOf<typeof WebcrawlerCommandSchema>;\n\nexport const TemporalCommandSchema = t.type({\n  majorCommand: t.literal(\"temporal\"),\n  command: t.union([\n    t.literal(\"find-unprocessed-workflows\"),\n    t.literal(\"check-queue\"),\n  ]),\n  args: t.record(\n    t.string,\n    t.union([t.string, NumberAsStringCodec, t.undefined])\n  ),\n});\n\nexport type TemporalCommandType = t.TypeOf<typeof TemporalCommandSchema>;\n\n/**\n * <Intercom>\n */\nexport const IntercomCommandSchema = t.type({\n  majorCommand: t.literal(\"intercom\"),\n  command: t.union([\n    t.literal(\"force-resync-articles\"),\n    t.literal(\"check-conversation\"),\n    t.literal(\"fetch-conversation\"),\n    t.literal(\"fetch-articles\"),\n    t.literal(\"check-missing-conversations\"),\n    t.literal(\"check-teams\"),\n  ]),\n  args: t.type({\n    force: t.union([t.literal(\"true\"), t.undefined]),\n    connectorId: t.union([t.number, t.undefined]),\n    conversationId: t.union([t.number, t.undefined]),\n    day: t.union([t.string, t.undefined]),\n    helpCenterId: t.union([t.number, t.undefined]),\n  }),\n});\n\nexport type IntercomCommandType = t.TypeOf<typeof IntercomCommandSchema>;\nexport const IntercomCheckConversationResponseSchema = t.type({\n  isConversationOnIntercom: t.boolean,\n  isConversationOnDB: t.boolean,\n  conversationTeamIdOnIntercom: t.union([t.string, t.undefined]),\n  conversationTeamIdOnDB: t.union([t.string, t.undefined, t.null]),\n});\nexport type IntercomCheckConversationResponseType = t.TypeOf<\n  typeof IntercomCheckConversationResponseSchema\n>;\nexport const IntercomFetchConversationResponseSchema = t.type({\n  conversation: t.union([t.UnknownRecord, t.null]), // intercom type, can't be iots'd\n});\nexport type IntercomFetchConversationResponseType = t.TypeOf<\n  typeof IntercomFetchConversationResponseSchema\n>;\nexport const IntercomFetchArticlesResponseSchema = t.type({\n  articles: t.array(t.union([t.UnknownRecord, t.null])), // intercom type, can't be iots'd\n});\nexport type IntercomFetchArticlesResponseType = t.TypeOf<\n  typeof IntercomFetchArticlesResponseSchema\n>;\nexport const IntercomCheckTeamsResponseSchema = t.type({\n  teams: t.array(\n    t.type({\n      teamId: t.string,\n      name: t.string,\n      isTeamOnDB: t.boolean,\n    })\n  ),\n});\nexport type IntercomCheckTeamsResponseType = t.TypeOf<\n  typeof IntercomCheckTeamsResponseSchema\n>;\nexport const IntercomCheckMissingConversationsResponseSchema = t.type({\n  missingConversations: t.array(\n    t.type({\n      conversationId: t.string,\n      teamId: t.union([t.number, t.null]),\n      open: t.boolean,\n      createdAt: t.number,\n    })\n  ),\n});\nexport type IntercomCheckMissingConversationsResponseType = t.TypeOf<\n  typeof IntercomCheckMissingConversationsResponseSchema\n>;\nexport const IntercomForceResyncArticlesResponseSchema = t.type({\n  affectedCount: t.number,\n});\nexport type IntercomForceResyncArticlesResponseType = t.TypeOf<\n  typeof IntercomForceResyncArticlesResponseSchema\n>;\n/**\n * </ Intercom>\n */\n\n/**\n * <Zendesk>\n */\nexport const ZendeskCommandSchema = t.type({\n  majorCommand: t.literal(\"zendesk\"),\n  command: t.union([\n    t.literal(\"check-is-admin\"),\n    t.literal(\"count-tickets\"),\n    t.literal(\"resync-tickets\"),\n    t.literal(\"fetch-ticket\"),\n    t.literal(\"fetch-brand\"),\n    t.literal(\"resync-help-centers\"),\n    t.literal(\"resync-brand-metadata\"),\n  ]),\n  args: t.type({\n    wId: t.union([t.string, t.undefined]),\n    dsId: t.union([t.string, t.undefined]),\n    connectorId: t.union([t.number, t.undefined]),\n    brandId: t.union([t.number, t.undefined]),\n    query: t.union([t.string, t.undefined]),\n    forceResync: t.union([t.literal(\"true\"), t.undefined]),\n    ticketId: t.union([t.number, t.undefined]),\n    ticketUrl: t.union([t.string, t.undefined]),\n  }),\n});\nexport type ZendeskCommandType = t.TypeOf<typeof ZendeskCommandSchema>;\n\nexport const ZendeskCheckIsAdminResponseSchema = t.type({\n  userRole: t.string,\n  userActive: t.boolean,\n  userIsAdmin: t.boolean,\n});\nexport type ZendeskCheckIsAdminResponseType = t.TypeOf<\n  typeof ZendeskCheckIsAdminResponseSchema\n>;\n\nexport const ZendeskCountTicketsResponseSchema = t.type({\n  ticketCount: t.number,\n});\nexport type ZendeskCountTicketsResponseType = t.TypeOf<\n  typeof ZendeskCountTicketsResponseSchema\n>;\n\nexport const ZendeskFetchTicketResponseSchema = t.type({\n  ticket: t.union([t.UnknownRecord, t.null]), // Zendesk type, can't be iots'd,\n  isTicketOnDb: t.boolean,\n});\nexport type ZendeskFetchTicketResponseType = t.TypeOf<\n  typeof ZendeskFetchTicketResponseSchema\n>;\n\nexport const ZendeskFetchBrandResponseSchema = t.type({\n  brand: t.union([t.UnknownRecord, t.null]), // Zendesk type, can't be iots'd,\n  brandOnDb: t.union([t.UnknownRecord, t.null]),\n});\nexport type ZendeskFetchBrandResponseType = t.TypeOf<\n  typeof ZendeskFetchBrandResponseSchema\n>;\n/**\n * </Zendesk>\n */\n\nexport const MicrosoftCommandSchema = t.type({\n  majorCommand: t.literal(\"microsoft\"),\n  command: t.union([\n    t.literal(\"garbage-collect-all\"),\n    t.literal(\"check-file\"),\n    t.literal(\"start-incremental-sync\"),\n    t.literal(\"restart-all-incremental-sync-workflows\"),\n    t.literal(\"skip-file\"),\n    t.literal(\"sync-node\"),\n    t.literal(\"get-parents\"),\n  ]),\n  args: t.record(\n    t.string,\n    t.union([t.string, NumberAsStringCodec, t.undefined])\n  ),\n});\n\nexport type MicrosoftCommandType = t.TypeOf<typeof MicrosoftCommandSchema>;\n\nexport const AdminCommandSchema = t.union([\n  BatchCommandSchema,\n  ConnectorsCommandSchema,\n  ConfluenceCommandSchema,\n  GithubCommandSchema,\n  GoogleDriveCommandSchema,\n  IntercomCommandSchema,\n  MicrosoftCommandSchema,\n  NotionCommandSchema,\n  SlackCommandSchema,\n  TemporalCommandSchema,\n  WebcrawlerCommandSchema,\n  ZendeskCommandSchema,\n]);\n\nexport type AdminCommandType = t.TypeOf<typeof AdminCommandSchema>;\n\nexport const AdminSuccessResponseSchema = t.type({\n  success: t.literal(true),\n});\n\nexport type AdminSuccessResponseType = t.TypeOf<\n  typeof AdminSuccessResponseSchema\n>;\n\nexport const CheckFileGenericResponseSchema = t.type({\n  status: t.number,\n  // all literals from js `typeof`\n  type: t.union([\n    t.literal(\"undefined\"),\n    t.literal(\"object\"),\n    t.literal(\"boolean\"),\n    t.literal(\"number\"),\n    t.literal(\"string\"),\n    t.literal(\"function\"),\n    t.literal(\"symbol\"),\n    t.literal(\"bigint\"),\n  ]),\n  content: t.unknown, // google drive type, can't be iots'd\n});\n\nexport type CheckFileGenericResponseType = t.TypeOf<\n  typeof CheckFileGenericResponseSchema\n>;\n\nexport const GetParentsResponseSchema = t.type({\n  parents: t.array(t.string),\n});\n\nexport type GetParentsResponseType = t.TypeOf<typeof GetParentsResponseSchema>;\n\nexport const NotionUpsertResponseSchema = t.type({\n  workflowId: t.string,\n  workflowUrl: t.union([t.string, t.undefined]),\n});\n\nexport type NotionUpsertResponseType = t.TypeOf<\n  typeof NotionUpsertResponseSchema\n>;\n\nexport const NotionSearchPagesResponseSchema = t.type({\n  pages: t.array(\n    t.type({\n      id: t.string,\n      title: t.union([t.string, t.undefined]),\n      type: t.union([t.literal(\"page\"), t.literal(\"database\")]),\n      isSkipped: t.boolean,\n      isFull: t.boolean,\n    })\n  ),\n});\n\nexport type NotionSearchPagesResponseType = t.TypeOf<\n  typeof NotionSearchPagesResponseSchema\n>;\n\nexport const NotionCheckUrlResponseSchema = t.type({\n  page: t.union([t.UnknownRecord, t.null]), // notion type, can't be iots'd\n  db: t.union([t.UnknownRecord, t.null]), // notion type, can't be iots'd\n});\n\nexport type NotionCheckUrlResponseType = t.TypeOf<\n  typeof NotionCheckUrlResponseSchema\n>;\n\nexport const NotionDeleteUrlResponseSchema = t.type({\n  deletedPage: t.boolean,\n  deletedDb: t.boolean,\n});\n\nexport type NotionDeleteUrlResponseType = t.TypeOf<\n  typeof NotionDeleteUrlResponseSchema\n>;\n\nexport const NotionFindUrlResponseSchema = t.type({\n  page: t.union([t.UnknownRecord, t.null]), // notion type, can't be iots'd\n  db: t.union([t.UnknownRecord, t.null]), // notion type, can't be iots'd\n});\n\nexport type NotionFindUrlResponseType = t.TypeOf<\n  typeof NotionFindUrlResponseSchema\n>;\n\nexport const NotionMeResponseSchema = t.type({\n  me: t.UnknownRecord, // notion type, can't be iots'd\n  botOwner: t.UnknownRecord, // notion type, can't be iots'd\n});\n\nexport type NotionMeResponseType = t.TypeOf<typeof NotionMeResponseSchema>;\n\nexport const TemporalCheckQueueResponseSchema = t.type({\n  taskQueue: t.UnknownRecord, // temporal type, can't be iots'd\n});\n\nexport type TemporalCheckQueueResponseType = t.TypeOf<\n  typeof TemporalCheckQueueResponseSchema\n>;\n\nexport const TemporalUnprocessedWorkflowsResponseSchema = t.type({\n  queuesAndPollers: t.array(t.type({ queue: t.string, pollers: t.number })),\n  unprocessedQueues: t.array(t.string),\n});\n\nexport type TemporalUnprocessedWorkflowsResponseType = t.TypeOf<\n  typeof TemporalUnprocessedWorkflowsResponseSchema\n>;\n\nexport const AdminResponseSchema = t.union([\n  AdminSuccessResponseSchema,\n  BatchAllResponseSchema,\n  CheckFileGenericResponseSchema,\n  ConfluenceMeResponseSchema,\n  ConfluenceUpsertPageResponseSchema,\n  GetParentsResponseSchema,\n  IntercomCheckConversationResponseSchema,\n  IntercomCheckMissingConversationsResponseSchema,\n  IntercomCheckTeamsResponseSchema,\n  IntercomFetchConversationResponseSchema,\n  IntercomFetchArticlesResponseSchema,\n  NotionCheckUrlResponseSchema,\n  NotionDeleteUrlResponseSchema,\n  NotionMeResponseSchema,\n  NotionSearchPagesResponseSchema,\n  NotionUpsertResponseSchema,\n  TemporalCheckQueueResponseSchema,\n  TemporalUnprocessedWorkflowsResponseSchema,\n  IntercomForceResyncArticlesResponseSchema,\n  ZendeskCheckIsAdminResponseSchema,\n  ZendeskCountTicketsResponseSchema,\n  ZendeskFetchTicketResponseSchema,\n  ZendeskFetchBrandResponseSchema,\n]);\n\nexport type AdminResponseType = t.TypeOf<typeof AdminResponseSchema>;\n","export type ConnectorsAPIErrorType =\n  | \"authorization_error\"\n  | \"not_found\"\n  | \"internal_server_error\"\n  | \"unexpected_error_format\"\n  | \"unexpected_response_format\"\n  | \"unexpected_network_error\"\n  | \"unknown_connector_provider\"\n  | \"invalid_request_error\"\n  | \"connector_not_found\"\n  | \"connector_configuration_not_found\"\n  | \"connector_update_error\"\n  | \"connector_update_unauthorized\"\n  | \"connector_oauth_target_mismatch\"\n  | \"connector_oauth_user_missing_rights\"\n  | \"connector_oauth_error\"\n  | \"connector_authorization_error\"\n  | \"slack_channel_not_found\"\n  | \"connector_rate_limit_error\"\n  | \"slack_configuration_not_found\"\n  | \"google_drive_webhook_not_found\";\n\nexport type ConnectorsAPIError = {\n  type: ConnectorsAPIErrorType;\n  message: string;\n};\n\nexport type ConnectorsAPIErrorResponse = {\n  error: ConnectorsAPIError;\n};\n\nexport type ConnectorsAPIErrorWithStatusCode = {\n  api_error: ConnectorsAPIError;\n  status_code: number;\n};\n\nexport type WithConnectorsAPIErrorReponse<T> = T | ConnectorsAPIErrorResponse;\n\nexport function isConnectorsAPIError(obj: unknown): obj is ConnectorsAPIError {\n  return (\n    typeof obj === \"object\" &&\n    obj !== null &&\n    \"message\" in obj &&\n    typeof obj.message === \"string\" &&\n    \"type\" in obj &&\n    typeof obj.type === \"string\"\n  );\n}\n","import * as t from \"io-ts\";\n\n// Auto-read patterns.\n\nconst SlackAutoReadPatternSchema = t.type({\n  pattern: t.string,\n  spaceId: t.string,\n});\nconst SlackAutoReadPatternsSchema = t.array(SlackAutoReadPatternSchema);\n\nexport type SlackAutoReadPattern = t.TypeOf<typeof SlackAutoReadPatternSchema>;\n\nexport function isSlackAutoReadPatterns(\n  v: unknown[]\n): v is SlackAutoReadPattern[] {\n  return SlackAutoReadPatternsSchema.is(v);\n}\n\n// Configuration.\n\nexport const SlackConfigurationTypeSchema = t.type({\n  botEnabled: t.boolean,\n  whitelistedDomains: t.union([t.array(t.string), t.undefined]),\n  autoReadChannelPatterns: SlackAutoReadPatternsSchema,\n});\n\nexport type SlackConfigurationType = t.TypeOf<\n  typeof SlackConfigurationTypeSchema\n>;\n\n// Whitelist.\n\nexport type SlackbotWhitelistType = \"summon_agent\" | \"index_messages\";\n\nexport function isSlackbotWhitelistType(\n  value: unknown\n): value is SlackbotWhitelistType {\n  return value === \"summon_agent\" || value === \"index_messages\";\n}\n","import * as t from \"io-ts\";\n\nexport const WEBCRAWLER_MAX_DEPTH = 5;\nexport const WEBCRAWLER_MAX_PAGES = 512;\n\nexport const CrawlingModes = [\"child\", \"website\"] as const;\nexport type CrawlingMode = (typeof CrawlingModes)[number];\n\nexport const CrawlingFrequencies = [\n  \"never\",\n  \"daily\",\n  \"weekly\",\n  \"monthly\",\n] as const;\nexport type CrawlingFrequency = (typeof CrawlingFrequencies)[number];\n\nexport const DepthOptions = [0, 1, 2, 3, 4, 5] as const;\nexport type DepthOption = (typeof DepthOptions)[number];\nexport type WebCrawlerConfigurationType = t.TypeOf<\n  typeof WebCrawlerConfigurationTypeSchema\n>;\n\nexport function isDepthOption(value: unknown): value is DepthOption {\n  return DepthOptions.includes(value as DepthOption);\n}\n\nexport const WebCrawlerConfigurationTypeSchema = t.type({\n  url: t.string,\n  depth: t.union([\n    t.literal(0),\n    t.literal(1),\n    t.literal(2),\n    t.literal(3),\n    t.literal(4),\n    t.literal(5),\n  ]),\n  maxPageToCrawl: t.number,\n  crawlMode: t.union([t.literal(\"child\"), t.literal(\"website\")]),\n  crawlFrequency: t.union([\n    t.literal(\"never\"),\n    t.literal(\"daily\"),\n    t.literal(\"weekly\"),\n    t.literal(\"monthly\"),\n  ]),\n  headers: t.record(t.string, t.string),\n});\n\nexport type WebCrawlerConfiguration = t.TypeOf<\n  typeof WebCrawlerConfigurationTypeSchema\n>;\n\nexport const WebCrawlerHeaderRedactedValue = \"<REDACTED>\";\n\nexport const WEBCRAWLER_DEFAULT_CONFIGURATION: WebCrawlerConfigurationType = {\n  url: \"\",\n  depth: 2,\n  maxPageToCrawl: 50,\n  crawlMode: \"website\",\n  crawlFrequency: \"monthly\",\n  headers: {},\n};\n","import * as t from \"io-ts\";\n\nimport { SlackConfigurationTypeSchema } from \"../../connectors/slack\";\nimport { WebCrawlerConfigurationTypeSchema } from \"../../connectors/webcrawler\";\n\nexport const ConnectorConfigurationTypeSchema = t.union([\n  WebCrawlerConfigurationTypeSchema,\n  SlackConfigurationTypeSchema,\n  t.null,\n]);\n\nexport const UpdateConnectorConfigurationTypeSchema = t.type({\n  configuration: ConnectorConfigurationTypeSchema,\n});\n\nexport type UpdateConnectorConfigurationType = t.TypeOf<\n  typeof UpdateConnectorConfigurationTypeSchema\n>;\n","import * as t from \"io-ts\";\n\nimport { ConnectorConfigurationTypeSchema } from \"./connector_configuration\";\n\nexport const ConnectorCreateRequestBodySchema = t.type({\n  workspaceAPIKey: t.string,\n  dataSourceId: t.string,\n  workspaceId: t.string,\n  connectionId: t.string,\n  configuration: ConnectorConfigurationTypeSchema,\n});\n\nexport type ConnectorCreateRequestBody = t.TypeOf<\n  typeof ConnectorCreateRequestBodySchema\n>;\n","import * as t from \"io-ts\";\n\nexport const UpdateConnectorRequestBodySchema = t.type({\n  connectionId: t.string,\n});\n\nexport type UpdateConnectorRequestBody = t.TypeOf<\n  typeof UpdateConnectorRequestBodySchema\n>;\n","import { ModelId } from \"../shared/model_id\";\n\nexport function makeConfluenceSyncWorkflowId(connectorId: ModelId) {\n  return `confluence-sync-${connectorId}`;\n}\n\nexport class ConfluenceClientError extends Error {\n  readonly type: \"validation_error\" | \"http_response_error\";\n  readonly status?: number;\n  readonly data?: object;\n  constructor(\n    message: string,\n    error_data: (\n      | { type: \"http_response_error\"; status: number }\n      | { type: \"validation_error\" }\n    ) & { data?: object }\n  ) {\n    super(message);\n    this.type = error_data.type;\n    this.status =\n      error_data.type === \"http_response_error\" ? error_data.status : undefined;\n    this.data = error_data.data;\n  }\n}\n\nexport function isConfluenceNotFoundError(\n  err: unknown\n): err is ConfluenceClientError {\n  return err instanceof ConfluenceClientError && err.status === 404;\n}\n","import * as t from \"io-ts\";\n\n// When viewing ContentNodes, we have 3 view types: \"tables\", \"documents\" and \"all\".\n// - The \"table\" view allows picking tables in the Extract and TableQuery tools,\n// which applies to Notion, Google Drive, Microsoft, Snowflake and BigQuery connectors.\n// - The \"document\" view allows picking documents in the Search tool,\n// which is useful for all connectors except Snowflake and BigQuery.\n// - The \"all\" view shows all nodes, which is used in the Knowledge tab for displaying content node trees.\n// More precisely, the \"table\" (resp. \"document\") view hides leaves that are document (resp. table).\n\n// Define a codec for ContentNodesViewType using io-ts.\n// WARNING: when changing this codec, search and map for comments on ContentNodesViewTypeCodec\n// because parts of the codebase could not use this type directly (and as such commented)\nexport const ContentNodesViewTypeCodec = t.union([\n  t.literal(\"table\"),\n  t.literal(\"document\"),\n  t.literal(\"all\"),\n]);\n\nexport type ContentNodesViewType = t.TypeOf<typeof ContentNodesViewTypeCodec>;\n\nexport function isValidContentNodesViewType(\n  value: unknown\n): value is ContentNodesViewType {\n  return value === \"document\" || value === \"table\" || value === \"all\";\n}\n","// Get the Table ID for a sheet within a Google Spreadsheet from the\n\nimport { ModelId } from \"../shared/model_id\";\n\n// Google-provided file ID and the ID of the sheet within the spreadsheet.\nexport function getGoogleSheetTableId(\n  googleFileId: string,\n  googleSheetId: number\n): string {\n  return `google-spreadsheet-${googleFileId}-sheet-${googleSheetId}`;\n}\n\n// Get the Content Node ID for a sheet within a Google Spreadsheet from the\n// Google-provided file ID and the ID of the sheet within the spreadsheet.\nexport function getGoogleSheetContentNodeInternalId(\n  googleFileId: string,\n  googleSheetId: number\n): string {\n  return getGoogleSheetTableId(googleFileId, googleSheetId);\n}\n\n// Recover the Google-provided file ID and the ID of the sheet within the\n// spreadsheet from the Content Node ID of a sheet.\nexport function getGoogleIdsFromSheetContentNodeInternalId(\n  internalId: string\n): {\n  googleFileId: string;\n  googleSheetId: string;\n} {\n  const parts = internalId.split(\"-sheet-\");\n  const googleFileId = parts[0].replace(\"google-spreadsheet-\", \"\");\n  const googleSheetId = parts[1];\n  return { googleFileId, googleSheetId };\n}\n\n// Check if a Content Node ID is a valid Content Node ID for a sheet within a\n// Google Spreadsheet.\nexport function isGoogleSheetContentNodeInternalId(\n  internalId: string\n): boolean {\n  return (\n    internalId.startsWith(\"google-spreadsheet-\") &&\n    internalId.includes(\"-sheet-\")\n  );\n}\n\nexport function googleDriveIncrementalSyncWorkflowId(connectorId: ModelId) {\n  return `googleDrive-IncrementalSync-${connectorId}`;\n}\n","import type {\n  BlockObjectResponse,\n  PageObjectResponse,\n} from \"@notionhq/client/build/src/api-endpoints\";\nimport * as t from \"io-ts\";\n\nimport { ModelId } from \"../shared/model_id\";\n\n// notion SDK types\nexport type PageObjectProperties = PageObjectResponse[\"properties\"];\nexport type PropertyKeys = keyof PageObjectProperties;\nexport type PropertyTypes = PageObjectProperties[PropertyKeys][\"type\"];\n\nexport function getNotionWorkflowId(\n  connectorId: ModelId,\n  isGarbageCollectionRun: boolean\n) {\n  let wfName = `workflow-notion-${connectorId}`;\n  if (isGarbageCollectionRun) {\n    wfName += \"-garbage-collector\";\n  }\n  return wfName;\n}\n\n// Extractor types\nexport type ParsedNotionPage = {\n  id: string;\n  url: string;\n  title?: string;\n  properties: ParsedNotionPageProperty[];\n  blocks: ParsedNotionBlock[];\n  rendered: string;\n  createdTime: number;\n  updatedTime: number;\n  author: string;\n  lastEditor: string;\n  hasBody: boolean;\n  parentType: \"database\" | \"page\" | \"block\" | \"workspace\";\n  parentId: string;\n};\n\nexport type ParsedNotionPageProperty = {\n  key: string;\n  id: string;\n  type: PropertyTypes;\n  text: string | null;\n};\n\nexport type NotionBlockType = BlockObjectResponse[\"type\"];\n\nexport type ParsedNotionBlock = {\n  id: string;\n  type: NotionBlockType;\n  text: string | null;\n  hasChildren: boolean;\n  childDatabaseTitle: string | null;\n};\n\nexport const ParsedNotionDatabaseSchema = t.type({\n  id: t.string,\n  url: t.string,\n  title: t.union([t.string, t.undefined]),\n  parentType: t.union([\n    t.literal(\"database\"),\n    t.literal(\"page\"),\n    t.literal(\"block\"),\n    t.literal(\"workspace\"),\n  ]),\n  parentId: t.string,\n  archived: t.boolean,\n});\n\nexport type ParsedNotionDatabase = t.TypeOf<typeof ParsedNotionDatabaseSchema>;\n\n// Returns the Table ID for a Notion database from the Notion-provided database ID.\nexport function getNotionDatabaseTableId(notionDatabaseId: string): string {\n  return `notion-${notionDatabaseId}`;\n}\n\n// Returns the Table ID for a Notion database from the Content Node ID.\nexport function getNotionDatabaseTableIdFromContentNodeInternalId(\n  internalId: string\n): string {\n  // The internalId is also the notion-provided database ID\n  // so we can just use the same function.\n  return getNotionDatabaseTableId(internalId);\n}\n","/**\n * Data Source configuration\n */\n\nimport { BaseAction } from \"../../../front/assistant/actions/index\";\nimport { ConnectorProvider } from \"../../../front/data_source\";\nimport {\n  DataSourceViewType,\n  TagsFilter,\n} from \"../../../front/data_source_view\";\nimport { ModelId } from \"../../../shared/model_id\";\nimport { ioTsEnum } from \"../../../shared/utils/iots_utils\";\n\nexport const TIME_FRAME_UNITS = [\n  \"hour\",\n  \"day\",\n  \"week\",\n  \"month\",\n  \"year\",\n] as const;\nexport type TimeframeUnit = (typeof TIME_FRAME_UNITS)[number];\nexport const TimeframeUnitCodec = ioTsEnum<TimeframeUnit>(TIME_FRAME_UNITS);\n\nexport type TimeFrame = {\n  duration: number;\n  unit: TimeframeUnit;\n};\nexport function isTimeFrame(arg: RetrievalTimeframe): arg is TimeFrame {\n  return (\n    (arg as TimeFrame).duration !== undefined &&\n    (arg as TimeFrame).unit !== undefined\n  );\n}\n\nexport type DataSourceFilter = {\n  parents: { in: string[]; not: string[] } | null;\n  tags?: TagsFilter;\n};\n\nexport type DataSourceConfiguration = {\n  workspaceId: string;\n  dataSourceViewId: string;\n  filter: DataSourceFilter;\n};\n\n/**\n * Retrieval configuration\n */\n\n// Retrieval specifies a list of data sources (with possible parent filtering, possible \"all\" data\n// sources), a query (\"auto\" generated by the model \"none\", no query, `TemplatedQuery`, fixed\n// query), a relative time frame (\"auto\" generated by the model, \"none\" no time filtering\n// `TimeFrame`) which applies to all data sources, and a top_k parameter.\n//\n// `query` and `relativeTimeFrame` will be used to generate the inputs specification for the model\n// in charge of generating the action inputs. The results will be used along with `topK` and\n// `dataSources` to query the data.\nexport type RetrievalQuery = \"auto\" | \"none\";\nexport type RetrievalTimeframe = \"auto\" | \"none\" | TimeFrame;\nexport type RetrievalConfigurationType = {\n  id: ModelId;\n  sId: string;\n\n  type: \"retrieval_configuration\";\n\n  dataSources: DataSourceConfiguration[];\n  query: RetrievalQuery;\n  relativeTimeFrame: RetrievalTimeframe;\n  topK: number | \"auto\";\n\n  name: string;\n  description: string | null;\n};\n\n/**\n * Retrieval action\n */\n\nexport interface RetrievalDocumentChunkType {\n  offset: number;\n  score: number | null;\n  text: string;\n}\n\nexport interface RetrievalDocumentType {\n  chunks: RetrievalDocumentChunkType[];\n  documentId: string;\n  dataSourceView: DataSourceViewType | null;\n  id: ModelId;\n  reference: string; // Short random string so that the model can refer to the document.\n  score: number | null;\n  sourceUrl: string | null;\n  tags: string[];\n  timestamp: number;\n}\n\ntype ConnectorProviderDocumentType =\n  | Exclude<ConnectorProvider, \"webcrawler\">\n  | \"document\";\n\nexport function getProviderFromRetrievedDocument(\n  document: RetrievalDocumentType\n): ConnectorProviderDocumentType {\n  if (document.dataSourceView) {\n    if (document.dataSourceView.dataSource.connectorProvider === \"webcrawler\") {\n      return \"document\";\n    }\n    return document.dataSourceView.dataSource.connectorProvider || \"document\";\n  }\n  return \"document\";\n}\n\nexport function getTitleFromRetrievedDocument(\n  document: RetrievalDocumentType\n): string {\n  const provider = getProviderFromRetrievedDocument(document);\n\n  if (provider === \"slack\") {\n    for (const t of document.tags) {\n      if (t.startsWith(\"channelName:\")) {\n        return `#${t.substring(12)}`;\n      }\n    }\n  }\n\n  for (const t of document.tags) {\n    if (t.startsWith(\"title:\")) {\n      return t.substring(6);\n    }\n  }\n\n  return document.documentId;\n}\n\nexport interface RetrievalActionType extends BaseAction {\n  id: ModelId; // AgentRetrievalAction\n  agentMessageId: ModelId; // AgentMessage\n\n  params: {\n    relativeTimeFrame: TimeFrame | null;\n    query: string | null;\n    topK: number;\n    tagsIn: string[] | null;\n    tagsNot: string[] | null;\n  };\n  functionCallId: string | null;\n  functionCallName: string | null;\n  documents: RetrievalDocumentType[] | null;\n  step: number;\n  type: \"retrieval_action\";\n}\n\n/**\n * Retrieval Action Events\n */\n\n// Event sent during retrieval with the finalized query used to retrieve documents.\nexport type RetrievalParamsEvent = {\n  type: \"retrieval_params\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n  dataSources: DataSourceConfiguration[];\n  action: RetrievalActionType;\n};\n\nexport type RetrievalErrorEvent = {\n  type: \"retrieval_error\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n  error: {\n    code: string;\n    message: string;\n  };\n};\n\nexport type RetrievalSuccessEvent = {\n  type: \"retrieval_success\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n  action: RetrievalActionType;\n};\n","import {\n  AgentReasoningEffort,\n  LightAgentConfigurationType,\n} from \"../../front/assistant/agent\";\nimport { GenerationTokensEvent } from \"../../front/assistant/generation\";\nimport { WorkspaceType } from \"../../front/user\";\nimport { WhitelistableFeature } from \"../../shared/feature_flags\";\nimport { ExtractSpecificKeys } from \"../../shared/typescipt_utils\";\nimport { ioTsEnum } from \"../../shared/utils/iots_utils\";\n\n/**\n * PROVIDER IDS\n */\n\nexport const MODEL_PROVIDER_IDS = [\n  \"openai\",\n  \"anthropic\",\n  \"mistral\",\n  \"google_ai_studio\",\n  \"togetherai\",\n  \"deepseek\",\n  \"fireworks\",\n] as const;\nexport type ModelProviderIdType = (typeof MODEL_PROVIDER_IDS)[number];\n\nexport const REASONING_EFFORT_IDS = [\"low\", \"medium\", \"high\"] as const;\nexport type ReasoningEffortIdType = (typeof REASONING_EFFORT_IDS)[number];\n\nexport const DEFAULT_EMBEDDING_PROVIDER_ID = \"openai\";\nexport const EMBEDDING_PROVIDER_IDS = [\n  DEFAULT_EMBEDDING_PROVIDER_ID,\n  \"mistral\",\n] as const;\nexport type EmbeddingProviderIdType = (typeof EMBEDDING_PROVIDER_IDS)[number];\n\nexport const isModelProviderId = (\n  providerId: string\n): providerId is ModelProviderIdType =>\n  MODEL_PROVIDER_IDS.includes(providerId as ModelProviderIdType);\n\nexport const ModelProviderIdCodec =\n  ioTsEnum<(typeof MODEL_PROVIDER_IDS)[number]>(MODEL_PROVIDER_IDS);\n\nexport const ReasoningEffortCodec =\n  ioTsEnum<(typeof REASONING_EFFORT_IDS)[number]>(REASONING_EFFORT_IDS);\n\nexport const EmbeddingProviderCodec = ioTsEnum<\n  (typeof EMBEDDING_PROVIDER_IDS)[number]\n>(EMBEDDING_PROVIDER_IDS);\n\nexport function isProviderWhitelisted(\n  owner: WorkspaceType,\n  providerId: ModelProviderIdType\n) {\n  const whiteListedProviders = owner.whiteListedProviders ?? MODEL_PROVIDER_IDS;\n  return whiteListedProviders.includes(providerId);\n}\n\nexport function getSmallWhitelistedModel(\n  owner: WorkspaceType\n): ModelConfigurationType | null {\n  if (isProviderWhitelisted(owner, \"openai\")) {\n    return GPT_4O_MINI_MODEL_CONFIG;\n  }\n  if (isProviderWhitelisted(owner, \"anthropic\")) {\n    return CLAUDE_3_5_HAIKU_DEFAULT_MODEL_CONFIG;\n  }\n  if (isProviderWhitelisted(owner, \"google_ai_studio\")) {\n    return GEMINI_FLASH_DEFAULT_MODEL_CONFIG;\n  }\n  if (isProviderWhitelisted(owner, \"mistral\")) {\n    return MISTRAL_SMALL_MODEL_CONFIG;\n  }\n  return null;\n}\n\nexport function getLargeWhitelistedModel(\n  owner: WorkspaceType\n): ModelConfigurationType | null {\n  if (isProviderWhitelisted(owner, \"anthropic\")) {\n    return CLAUDE_3_5_SONNET_DEFAULT_MODEL_CONFIG;\n  }\n  if (isProviderWhitelisted(owner, \"openai\")) {\n    return GPT_4O_MODEL_CONFIG;\n  }\n  if (isProviderWhitelisted(owner, \"google_ai_studio\")) {\n    return GEMINI_PRO_DEFAULT_MODEL_CONFIG;\n  }\n  if (isProviderWhitelisted(owner, \"mistral\")) {\n    return MISTRAL_LARGE_MODEL_CONFIG;\n  }\n  return null;\n}\n\n/**\n * MODEL IDS\n */\n\nexport const GPT_3_5_TURBO_MODEL_ID = \"gpt-3.5-turbo\" as const;\nexport const GPT_4_TURBO_MODEL_ID = \"gpt-4-turbo\" as const;\nexport const GPT_4O_MODEL_ID = \"gpt-4o\" as const;\nexport const GPT_4O_20240806_MODEL_ID = \"gpt-4o-2024-08-06\" as const;\nexport const GPT_4O_MINI_MODEL_ID = \"gpt-4o-mini\" as const;\nexport const O1_MODEL_ID = \"o1\" as const;\nexport const O1_MINI_MODEL_ID = \"o1-mini\" as const;\nexport const O3_MINI_MODEL_ID = \"o3-mini\" as const;\nexport const CLAUDE_3_OPUS_2024029_MODEL_ID = \"claude-3-opus-20240229\" as const;\nexport const CLAUDE_3_5_SONNET_20240620_MODEL_ID =\n  \"claude-3-5-sonnet-20240620\" as const;\nexport const CLAUDE_3_5_SONNET_20241022_MODEL_ID =\n  \"claude-3-5-sonnet-20241022\" as const;\nexport const CLAUDE_3_7_SONNET_20250219_MODEL_ID =\n  \"claude-3-7-sonnet-20250219\" as const;\nexport const CLAUDE_3_HAIKU_20240307_MODEL_ID =\n  \"claude-3-haiku-20240307\" as const;\nexport const CLAUDE_3_5_HAIKU_20241022_MODEL_ID =\n  \"claude-3-5-haiku-20241022\" as const;\nexport const CLAUDE_2_1_MODEL_ID = \"claude-2.1\" as const;\nexport const CLAUDE_INSTANT_1_2_MODEL_ID = \"claude-instant-1.2\" as const;\nexport const MISTRAL_LARGE_MODEL_ID = \"mistral-large-latest\" as const;\nexport const MISTRAL_MEDIUM_MODEL_ID = \"mistral-medium\" as const;\nexport const MISTRAL_SMALL_MODEL_ID = \"mistral-small-latest\" as const;\nexport const MISTRAL_CODESTRAL_MODEL_ID = \"codestral-latest\" as const;\nexport const GEMINI_1_5_PRO_LATEST_MODEL_ID = \"gemini-1.5-pro-latest\" as const;\nexport const GEMINI_1_5_FLASH_LATEST_MODEL_ID =\n  \"gemini-1.5-flash-latest\" as const;\nexport const GEMINI_2_FLASH_PREVIEW_MODEL_ID = \"gemini-2.0-flash-exp\" as const;\nexport const GEMINI_2_FLASH_THINKING_PREVIEW_MODEL_ID =\n  \"gemini-2.0-flash-thinking-exp-01-21\" as const;\nexport const GEMINI_2_FLASH_MODEL_ID = \"gemini-2.0-flash\" as const;\nexport const GEMINI_2_FLASH_LITE_PREVIEW_MODEL_ID =\n  \"gemini-2.0-flash-lite-preview-02-05\" as const;\nexport const GEMINI_2_PRO_PREVIEW_MODEL_ID =\n  \"gemini-2.0-pro-exp-02-05\" as const;\nexport const TOGETHERAI_LLAMA_3_3_70B_INSTRUCT_TURBO_MODEL_ID =\n  \"meta-llama/Llama-3.3-70B-Instruct-Turbo\" as const;\nexport const TOGETHERAI_QWEN_2_5_CODER_32B_INSTRUCT_MODEL_ID =\n  \"Qwen/Qwen2.5-Coder-32B-Instruct\" as const;\nexport const TOGETHERAI_QWEN_QWQ_32B_PREVIEW_MODEL_ID =\n  \"Qwen/QwQ-32B-Preview\" as const;\nexport const TOGETHERAI_QWEN_72B_INSTRUCT_MODEL_ID =\n  \"Qwen/Qwen2-72B-Instruct\" as const;\nexport const TOGETHERAI_DEEPSEEK_V3_MODEL_ID =\n  \"deepseek-ai/DeepSeek-V3\" as const;\nexport const TOGETHERAI_DEEPSEEK_R1_MODEL_ID =\n  \"deepseek-ai/DeepSeek-R1\" as const;\nexport const DEEPSEEK_CHAT_MODEL_ID = \"deepseek-chat\" as const;\nexport const DEEPSEEK_REASONER_MODEL_ID = \"deepseek-reasoner\" as const;\nexport const FIREWORKS_DEEPSEEK_R1_MODEL_ID =\n  \"accounts/fireworks/models/deepseek-r1\" as const;\n\nexport const MODEL_IDS = [\n  GPT_3_5_TURBO_MODEL_ID,\n  GPT_4_TURBO_MODEL_ID,\n  GPT_4O_MODEL_ID,\n  GPT_4O_20240806_MODEL_ID,\n  GPT_4O_MINI_MODEL_ID,\n  O1_MODEL_ID,\n  O1_MINI_MODEL_ID,\n  O3_MINI_MODEL_ID,\n  CLAUDE_3_OPUS_2024029_MODEL_ID,\n  CLAUDE_3_5_SONNET_20240620_MODEL_ID,\n  CLAUDE_3_5_SONNET_20241022_MODEL_ID,\n  CLAUDE_3_7_SONNET_20250219_MODEL_ID,\n  CLAUDE_3_HAIKU_20240307_MODEL_ID,\n  CLAUDE_3_5_HAIKU_20241022_MODEL_ID,\n  CLAUDE_2_1_MODEL_ID,\n  CLAUDE_INSTANT_1_2_MODEL_ID,\n  MISTRAL_LARGE_MODEL_ID,\n  MISTRAL_MEDIUM_MODEL_ID,\n  MISTRAL_SMALL_MODEL_ID,\n  MISTRAL_CODESTRAL_MODEL_ID,\n  GEMINI_1_5_PRO_LATEST_MODEL_ID,\n  GEMINI_1_5_FLASH_LATEST_MODEL_ID,\n  GEMINI_2_FLASH_PREVIEW_MODEL_ID,\n  GEMINI_2_FLASH_THINKING_PREVIEW_MODEL_ID,\n  GEMINI_2_FLASH_MODEL_ID,\n  GEMINI_2_FLASH_LITE_PREVIEW_MODEL_ID,\n  GEMINI_2_PRO_PREVIEW_MODEL_ID,\n  TOGETHERAI_LLAMA_3_3_70B_INSTRUCT_TURBO_MODEL_ID,\n  TOGETHERAI_QWEN_2_5_CODER_32B_INSTRUCT_MODEL_ID,\n  TOGETHERAI_QWEN_QWQ_32B_PREVIEW_MODEL_ID,\n  TOGETHERAI_QWEN_72B_INSTRUCT_MODEL_ID,\n  TOGETHERAI_DEEPSEEK_V3_MODEL_ID,\n  TOGETHERAI_DEEPSEEK_R1_MODEL_ID,\n  DEEPSEEK_CHAT_MODEL_ID,\n  DEEPSEEK_REASONER_MODEL_ID,\n  FIREWORKS_DEEPSEEK_R1_MODEL_ID,\n] as const;\nexport type ModelIdType = (typeof MODEL_IDS)[number];\n\nexport const isModelId = (modelId: string): modelId is ModelIdType =>\n  MODEL_IDS.includes(modelId as ModelIdType);\n\nexport const ModelIdCodec = ioTsEnum<(typeof MODEL_IDS)[number]>(MODEL_IDS);\n\n/**\n * MODEL CONFIGURATIONS\n */\n\nexport type ModelConfigurationType = {\n  providerId: ModelProviderIdType;\n  modelId: ModelIdType;\n  displayName: string;\n  contextSize: number;\n  recommendedTopK: number;\n  recommendedExhaustiveTopK: number;\n  largeModel: boolean;\n  description: string;\n  shortDescription: string;\n  isLegacy: boolean;\n\n  // Allows configuring parsing of special delimiters in the streamed model output.\n  delimitersConfiguration?: {\n    delimiters: Array<{\n      openingPattern: string;\n      closingPattern: string;\n      classification: Exclude<\n        GenerationTokensEvent[\"classification\"],\n        \"opening_delimiter\" | \"closing_delimiter\"\n      >;\n      swallow: boolean;\n    }>;\n    // If one of these patterns is found at the end of a model event, we'll wait for the\n    // the next event before emitting tokens.\n    incompleteDelimiterPatterns: RegExp[];\n  };\n\n  // This meta-prompt is injected into the agent's system instructions every time.\n  metaPrompt?: string;\n\n  // This meta-prompt is injected into the agent's system instructions if the agent is in a tool-use context.\n  toolUseMetaPrompt?: string;\n\n  // Adjust the token count estimation by a ratio. Only needed for anthropic models, where the token count is higher than our estimate\n  tokenCountAdjustment?: number;\n\n  // Controls how many output tokens the model can generate\n  generationTokensCount: number;\n\n  supportsVision: boolean;\n\n  // Only used for O-series OpenAI models.\n  reasoningEffort?: AgentReasoningEffort;\n\n  featureFlag?: WhitelistableFeature;\n  customAssistantFeatureFlag?: WhitelistableFeature;\n};\n\n// Should be used for all Open AI models older than gpt-4o-2024-08-06 to prevent issues\n// with invalid JSON.\nconst LEGACY_OPEN_AI_TOOL_USE_META_PROMPT =\n  \"When using tools, generate valid and properly escaped JSON arguments.\";\n\nexport const GPT_3_5_TURBO_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"openai\",\n  modelId: GPT_3_5_TURBO_MODEL_ID,\n  displayName: \"GPT 3.5 turbo\",\n  contextSize: 16_384,\n  recommendedTopK: 16,\n  recommendedExhaustiveTopK: 24, // 12_288\n  largeModel: false,\n  description:\n    \"OpenAI's GPT 3.5 Turbo model, cost-effective and high throughput (16k context).\",\n  shortDescription: \"OpenAI's fast model.\",\n  isLegacy: false,\n  toolUseMetaPrompt: LEGACY_OPEN_AI_TOOL_USE_META_PROMPT,\n  generationTokensCount: 2048,\n  supportsVision: false,\n};\n\nexport const GPT_4_TURBO_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"openai\",\n  modelId: GPT_4_TURBO_MODEL_ID,\n  displayName: \"GPT 4 turbo\",\n  contextSize: 128_000,\n  recommendedTopK: 32,\n  recommendedExhaustiveTopK: 128, // 65_536\n  largeModel: true,\n  description: \"OpenAI's GPT 4 Turbo model for complex tasks (128k context).\",\n  shortDescription: \"OpenAI's second best model.\",\n  isLegacy: false,\n  toolUseMetaPrompt: LEGACY_OPEN_AI_TOOL_USE_META_PROMPT,\n  generationTokensCount: 2048,\n  supportsVision: true,\n};\nexport const GPT_4O_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"openai\",\n  modelId: GPT_4O_MODEL_ID,\n  displayName: \"GPT 4o\",\n  contextSize: 128_000,\n  recommendedTopK: 32,\n  recommendedExhaustiveTopK: 128, // 65_536\n  largeModel: true,\n  description: \"OpenAI's GPT 4o model (128k context).\",\n  shortDescription: \"OpenAI's most advanced model.\",\n  isLegacy: false,\n  generationTokensCount: 2048,\n  supportsVision: true,\n};\nexport const GPT_4O_20240806_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"openai\",\n  modelId: GPT_4O_20240806_MODEL_ID,\n  displayName: \"GPT 4o\",\n  contextSize: 128_000,\n  recommendedTopK: 32,\n  recommendedExhaustiveTopK: 128, // 65_536\n  largeModel: true,\n  description: \"OpenAI's GPT 4o model (128k context).\",\n  shortDescription: \"OpenAI's most advanced model.\",\n  isLegacy: false,\n  generationTokensCount: 2048,\n  supportsVision: true,\n};\nexport const GPT_4O_MINI_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"openai\",\n  modelId: GPT_4O_MINI_MODEL_ID,\n  displayName: \"GPT 4o-mini\",\n  contextSize: 128_000,\n  recommendedTopK: 32,\n  recommendedExhaustiveTopK: 128, // 65_536\n  largeModel: true,\n  description: \"OpenAI's GPT 4o mini model (128k context).\",\n  shortDescription: \"OpenAI's fast model.\",\n  isLegacy: false,\n  toolUseMetaPrompt: LEGACY_OPEN_AI_TOOL_USE_META_PROMPT,\n  generationTokensCount: 2048,\n  supportsVision: true,\n};\nexport const O1_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"openai\",\n  modelId: O1_MODEL_ID,\n  displayName: \"o1\",\n  contextSize: 200_000,\n  recommendedTopK: 32,\n  recommendedExhaustiveTopK: 128, // 65_536\n  largeModel: true,\n  description:\n    \"OpenAI's reasoning model designed to solve hard problems across domains (Limited preview access).\",\n  shortDescription: \"OpenAI's reasoning model.\",\n  isLegacy: false,\n  generationTokensCount: 2048,\n  supportsVision: true,\n  featureFlag: \"openai_o1_feature\",\n  customAssistantFeatureFlag: \"openai_o1_custom_assistants_feature\",\n};\nexport const O1_HIGH_REASONING_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"openai\",\n  modelId: O1_MODEL_ID,\n  displayName: \"o1 (High Reasoning)\",\n  contextSize: 200_000,\n  recommendedTopK: 32,\n  recommendedExhaustiveTopK: 128, // 65_536\n  largeModel: true,\n  description:\n    \"OpenAI's reasoning model designed to solve hard problems across domains (Limited preview access). High reasoning effort.\",\n  shortDescription: \"OpenAI's reasoning model (high effort).\",\n  isLegacy: false,\n  generationTokensCount: 2048,\n  supportsVision: true,\n  reasoningEffort: \"high\",\n  featureFlag: \"openai_o1_high_reasoning_feature\",\n  customAssistantFeatureFlag:\n    \"openai_o1_high_reasoning_custom_assistants_feature\",\n};\nexport const O1_MINI_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"openai\",\n  modelId: O1_MINI_MODEL_ID,\n  displayName: \"o1-mini\",\n  contextSize: 128_000,\n  recommendedTopK: 32,\n  recommendedExhaustiveTopK: 128, // 65_536\n  largeModel: true,\n  description:\n    \"OpenAI's fast reasoning model particularly good at coding, math, and science.\",\n  shortDescription: \"OpenAI's fast reasoning model.\",\n  isLegacy: false,\n  generationTokensCount: 2048,\n  supportsVision: false,\n  featureFlag: \"openai_o1_mini_feature\",\n  customAssistantFeatureFlag: \"openai_o1_custom_assistants_feature\",\n};\nexport const O3_MINI_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"openai\",\n  modelId: O3_MINI_MODEL_ID,\n  displayName: \"o3-mini\",\n  contextSize: 200_000,\n  recommendedTopK: 32,\n  recommendedExhaustiveTopK: 128, // 65_536\n  largeModel: true,\n  description:\n    \"OpenAI's fast reasoning model particularly good at coding, math, and science.\",\n  shortDescription: \"OpenAI's fast reasoning model.\",\n  isLegacy: false,\n  generationTokensCount: 2048,\n  supportsVision: false,\n};\nexport const O3_MINI_HIGH_REASONING_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"openai\",\n  modelId: O3_MINI_MODEL_ID,\n  displayName: \"o3-mini (High Reasoning)\",\n  contextSize: 200_000,\n  recommendedTopK: 32,\n  recommendedExhaustiveTopK: 128, // 65_536\n  largeModel: true,\n  description:\n    \"OpenAI's fast reasoning model particularly good at coding, math, and science. High reasoning effort.\",\n  shortDescription: \"OpenAI's fast reasoning model.\",\n  isLegacy: false,\n  generationTokensCount: 2048,\n  supportsVision: false,\n  reasoningEffort: \"high\",\n};\n\nconst ANTHROPIC_DELIMITERS_CONFIGURATION = {\n  incompleteDelimiterPatterns: [/<\\/?[a-zA-Z_]*$/],\n  delimiters: [\n    {\n      openingPattern: \"<thinking>\",\n      closingPattern: \"</thinking>\",\n      classification: \"chain_of_thought\" as const,\n      swallow: false,\n    },\n    {\n      openingPattern: \"<search_quality_reflection>\",\n      closingPattern: \"</search_quality_reflection>\",\n      classification: \"chain_of_thought\" as const,\n      swallow: false,\n    },\n    {\n      openingPattern: \"<reflecting>\",\n      closingPattern: \"</reflecting>\",\n      classification: \"chain_of_thought\" as const,\n      swallow: false,\n    },\n    {\n      openingPattern: \"<search_quality_score>\",\n      closingPattern: \"</search_quality_score>\",\n      classification: \"chain_of_thought\" as const,\n      swallow: true,\n    },\n    {\n      openingPattern: \"<result>\",\n      closingPattern: \"</result>\",\n      classification: \"tokens\" as const,\n      swallow: false,\n    },\n    {\n      openingPattern: \"<response>\",\n      closingPattern: \"</response>\",\n      classification: \"tokens\" as const,\n      swallow: false,\n    },\n  ],\n};\n\nconst ANTHROPIC_TOOL_USE_META_PROMPT =\n  `Immediately before using a tool, think for one short bullet point in \\`<thinking>\\` tags about ` +\n  `how it evaluates against the criteria for a good and bad tool use. ` +\n  `After using a tool, think for one short bullet point in \\`<thinking>\\` tags to evaluate ` +\n  `whether the tools results are enough to answer the user's question. ` +\n  `The response to the user must be in \\`<response>\\` tags. ` +\n  `There must be a single \\`<response>\\` after the tools use (if any).`;\n\nexport const CLAUDE_3_OPUS_DEFAULT_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"anthropic\",\n  modelId: CLAUDE_3_OPUS_2024029_MODEL_ID,\n  displayName: \"Claude 3 Opus\",\n  contextSize: 180_000,\n  recommendedTopK: 32,\n  recommendedExhaustiveTopK: 128, // 65_536\n  largeModel: true,\n  description: \"Anthropic's Claude 3 Opus model (200k context).\",\n  shortDescription: \"Anthropic's largest model.\",\n  isLegacy: false,\n  delimitersConfiguration: ANTHROPIC_DELIMITERS_CONFIGURATION,\n  generationTokensCount: 4096,\n  supportsVision: true,\n  toolUseMetaPrompt: ANTHROPIC_TOOL_USE_META_PROMPT,\n  tokenCountAdjustment: 1.15,\n};\n\nexport const CLAUDE_3_5_SONNET_20240620_DEPRECATED_MODEL_CONFIG: ModelConfigurationType =\n  {\n    providerId: \"anthropic\",\n    modelId: CLAUDE_3_5_SONNET_20240620_MODEL_ID,\n    displayName: \"Claude 3.5 Sonnet\",\n    contextSize: 180_000,\n    recommendedTopK: 32,\n    recommendedExhaustiveTopK: 128, // 65_536\n    largeModel: true,\n    description: \"Anthropic's latest Claude 3.5 Sonnet model (200k context).\",\n    shortDescription: \"Anthropic's latest model.\",\n    isLegacy: false,\n    delimitersConfiguration: ANTHROPIC_DELIMITERS_CONFIGURATION,\n    generationTokensCount: 8192,\n    supportsVision: true,\n    toolUseMetaPrompt: ANTHROPIC_TOOL_USE_META_PROMPT,\n    tokenCountAdjustment: 1.15,\n  };\n\nexport const CLAUDE_3_5_SONNET_DEFAULT_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"anthropic\",\n  modelId: CLAUDE_3_5_SONNET_20241022_MODEL_ID,\n  displayName: \"Claude 3.5 Sonnet\",\n  contextSize: 180_000,\n  recommendedTopK: 32,\n  recommendedExhaustiveTopK: 128, // 65_536\n  largeModel: true,\n  description: \"Anthropic's latest Claude 3.5 Sonnet model (200k context).\",\n  shortDescription: \"Anthropic's latest model.\",\n  isLegacy: false,\n  delimitersConfiguration: ANTHROPIC_DELIMITERS_CONFIGURATION,\n  generationTokensCount: 8192,\n  supportsVision: true,\n  toolUseMetaPrompt: ANTHROPIC_TOOL_USE_META_PROMPT,\n  tokenCountAdjustment: 1.15,\n};\nexport const CLAUDE_3_7_SONNET_DEFAULT_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"anthropic\",\n  modelId: CLAUDE_3_7_SONNET_20250219_MODEL_ID,\n  displayName: \"Claude 3.7 Sonnet\",\n  contextSize: 200_000,\n  recommendedTopK: 16,\n  recommendedExhaustiveTopK: 128, // 65_536\n  largeModel: true,\n  description: \"Anthropic's latest Claude 3.7 Sonnet model (200k context).\",\n  shortDescription: \"Anthropic's best model.\",\n  isLegacy: false,\n  delimitersConfiguration: ANTHROPIC_DELIMITERS_CONFIGURATION,\n  generationTokensCount: 64_000,\n  supportsVision: true,\n  toolUseMetaPrompt: ANTHROPIC_TOOL_USE_META_PROMPT,\n  tokenCountAdjustment: 1.15,\n};\nexport const CLAUDE_3_5_HAIKU_DEFAULT_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"anthropic\",\n  modelId: CLAUDE_3_5_HAIKU_20241022_MODEL_ID,\n  displayName: \"Claude 3.5 Haiku\",\n  contextSize: 180_000,\n  recommendedTopK: 32,\n  recommendedExhaustiveTopK: 128, // 65_536\n  largeModel: false,\n  description:\n    \"Anthropic's Claude 3.5 Haiku model, cost effective and high throughput (200k context).\",\n  shortDescription: \"Anthropic's cost-effective model.\",\n  isLegacy: false,\n  generationTokensCount: 2048,\n  supportsVision: false,\n  tokenCountAdjustment: 1.15,\n};\nexport const CLAUDE_3_HAIKU_DEFAULT_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"anthropic\",\n  modelId: CLAUDE_3_HAIKU_20240307_MODEL_ID,\n  displayName: \"Claude 3 Haiku\",\n  contextSize: 180_000,\n  recommendedTopK: 32,\n  recommendedExhaustiveTopK: 128, // 65_536\n  largeModel: false,\n  description:\n    \"Anthropic's Claude 3 Haiku model, cost effective and high throughput (200k context).\",\n  shortDescription: \"Anthropic's cost-effective model.\",\n  isLegacy: false,\n  generationTokensCount: 2048,\n  supportsVision: true,\n  tokenCountAdjustment: 1.15,\n};\nexport const CLAUDE_2_DEFAULT_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"anthropic\",\n  modelId: CLAUDE_2_1_MODEL_ID,\n  displayName: \"Claude 2.1\",\n  contextSize: 180_000,\n  recommendedTopK: 32,\n  recommendedExhaustiveTopK: 128, // 65_536\n  largeModel: true,\n  description: \"Anthropic's Claude 2 model (200k context).\",\n  shortDescription: \"Anthropic's legacy model.\",\n  isLegacy: true,\n  generationTokensCount: 2048,\n  supportsVision: false,\n};\nexport const CLAUDE_INSTANT_DEFAULT_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"anthropic\",\n  modelId: CLAUDE_INSTANT_1_2_MODEL_ID,\n  displayName: \"Claude Instant 1.2\",\n  contextSize: 90_000,\n  recommendedTopK: 32,\n  recommendedExhaustiveTopK: 128, // 65_536\n  largeModel: false,\n  description:\n    \"Anthropic's low-latency and high throughput model (100k context)\",\n  shortDescription: \"Anthropic's legacy model.\",\n  isLegacy: true,\n  generationTokensCount: 2048,\n  supportsVision: false,\n};\n\nexport const MISTRAL_LARGE_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"mistral\",\n  modelId: MISTRAL_LARGE_MODEL_ID,\n  displayName: \"Mistral Large\",\n  contextSize: 128_000,\n  recommendedTopK: 16,\n  recommendedExhaustiveTopK: 56, // 28_672\n  largeModel: true,\n  description: \"Mistral's `large 2` model (128k context).\",\n  shortDescription: \"Mistral's large model.\",\n  isLegacy: false,\n  generationTokensCount: 2048,\n  supportsVision: false,\n};\nexport const MISTRAL_MEDIUM_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"mistral\",\n  modelId: MISTRAL_MEDIUM_MODEL_ID,\n  displayName: \"Mistral Medium\",\n  contextSize: 32_000,\n  recommendedTopK: 16,\n  recommendedExhaustiveTopK: 56, // 28_672\n  largeModel: true,\n  description: \"Mistral's `medium` model (32k context).\",\n  shortDescription: \"Mistral's legacy model.\",\n  isLegacy: true,\n  generationTokensCount: 2048,\n  supportsVision: false,\n};\nexport const MISTRAL_SMALL_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"mistral\",\n  modelId: MISTRAL_SMALL_MODEL_ID,\n  displayName: \"Mistral Small\",\n  contextSize: 32_000,\n  recommendedTopK: 16,\n  recommendedExhaustiveTopK: 56, // 28_672\n  largeModel: false,\n  description: \"Mistral's `small` model (8x7B Instruct, 32k context).\",\n  shortDescription: \"Mistral's cost-effective model.\",\n  isLegacy: false,\n  generationTokensCount: 2048,\n  supportsVision: false,\n};\n\nexport const MISTRAL_CODESTRAL_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"mistral\",\n  modelId: MISTRAL_CODESTRAL_MODEL_ID,\n  displayName: \"Mistral Codestral\",\n  contextSize: 32_000,\n  recommendedTopK: 16,\n  recommendedExhaustiveTopK: 56, // 28_672\n  largeModel: false,\n  description:\n    \"Mistral's `codestral` model, specifically designed and optimized for code generation tasks.\",\n  shortDescription: \"Mistral's code model.\",\n  isLegacy: false,\n  generationTokensCount: 2048,\n  supportsVision: false,\n};\n\nexport const GEMINI_PRO_DEFAULT_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"google_ai_studio\",\n  modelId: GEMINI_1_5_PRO_LATEST_MODEL_ID,\n  displayName: \"Gemini Pro 1.5\",\n  contextSize: 1_000_000,\n  recommendedTopK: 64,\n  recommendedExhaustiveTopK: 128, // 65_536\n  largeModel: true,\n  description:\n    \"Google's best model for scaling across a wide range of tasks (1m context).\",\n  shortDescription: \"Google's large model.\",\n  isLegacy: false,\n  generationTokensCount: 2048,\n  supportsVision: false,\n};\n\nexport const GEMINI_FLASH_DEFAULT_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"google_ai_studio\",\n  modelId: GEMINI_1_5_FLASH_LATEST_MODEL_ID,\n  displayName: \"Gemini Flash 1.5\",\n  contextSize: 1_000_000,\n  recommendedTopK: 64,\n  recommendedExhaustiveTopK: 128, // 65_536\n  largeModel: true,\n  description:\n    \"Google's lightweight, fast and cost-efficient model (1m context).\",\n  shortDescription: \"Google's cost-effective model.\",\n  isLegacy: false,\n  generationTokensCount: 2048,\n  supportsVision: false,\n};\n\nexport const GEMINI_2_FLASH_PREVIEW_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"google_ai_studio\",\n  modelId: GEMINI_2_FLASH_PREVIEW_MODEL_ID,\n  displayName: \"Gemini Flash 2.0\",\n  contextSize: 1_000_000,\n  recommendedTopK: 64,\n  recommendedExhaustiveTopK: 128,\n  largeModel: true,\n  description:\n    \"Google's lightweight, fast and cost-efficient model (1m context).\",\n  shortDescription: \"Google's cost-effective model (preview).\",\n  isLegacy: false,\n  generationTokensCount: 2048,\n  supportsVision: true,\n  featureFlag: \"google_ai_studio_experimental_models_feature\",\n};\n\nexport const GEMINI_2_FLASH_THINKING_PREVIEW_MODEL_CONFIG: ModelConfigurationType =\n  {\n    providerId: \"google_ai_studio\",\n    modelId: GEMINI_2_FLASH_THINKING_PREVIEW_MODEL_ID,\n    displayName: \"Gemini Flash 2.0 Thinking\",\n    contextSize: 32_000,\n    recommendedTopK: 64,\n    recommendedExhaustiveTopK: 128,\n    largeModel: true,\n    description:\n      \"Google's lightweight model optimized for reasoning (1m context).\",\n    shortDescription: \"Google's reasoning-focused model (preview).\",\n    isLegacy: false,\n    generationTokensCount: 2048,\n    supportsVision: true,\n    featureFlag: \"google_ai_studio_experimental_models_feature\",\n  };\n\nexport const GEMINI_2_FLASH_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"google_ai_studio\",\n  modelId: GEMINI_2_FLASH_MODEL_ID,\n  displayName: \"Gemini Flash 2.0\",\n  contextSize: 1_000_000,\n  recommendedTopK: 64,\n  recommendedExhaustiveTopK: 128,\n  largeModel: true,\n  description: \"Google's fast large context model (1m context).\",\n  shortDescription: \"Google's fast model.\",\n  isLegacy: false,\n  generationTokensCount: 2048,\n  supportsVision: true,\n};\n\nexport const GEMINI_2_FLASH_LITE_PREVIEW_MODEL_CONFIG: ModelConfigurationType =\n  {\n    providerId: \"google_ai_studio\",\n    modelId: GEMINI_2_FLASH_LITE_PREVIEW_MODEL_ID,\n    displayName: \"Gemini Flash 2.0 Lite Preview\",\n    contextSize: 1_000_000,\n    recommendedTopK: 64,\n    recommendedExhaustiveTopK: 128,\n    largeModel: true,\n    description: \"Google's lightweight large context model (1m context).\",\n    shortDescription: \"Google's lightweight model (preview).\",\n    isLegacy: false,\n    generationTokensCount: 2048,\n    supportsVision: true,\n    featureFlag: \"google_ai_studio_experimental_models_feature\",\n  };\n\nexport const GEMINI_2_PRO_PREVIEW_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"google_ai_studio\",\n  modelId: GEMINI_2_PRO_PREVIEW_MODEL_ID,\n  displayName: \"Gemini Flash 2.0 Pro Preview\",\n  contextSize: 1_000_000,\n  recommendedTopK: 64,\n  recommendedExhaustiveTopK: 128,\n  largeModel: true,\n  description: \"Google's powerful large context model (1m context).\",\n  shortDescription: \"Google's powerful model (preview).\",\n  isLegacy: false,\n  generationTokensCount: 2048,\n  supportsVision: true,\n  featureFlag: \"google_ai_studio_experimental_models_feature\",\n};\n\nexport const TOGETHERAI_LLAMA_3_3_70B_INSTRUCT_TURBO_MODEL_CONFIG: ModelConfigurationType =\n  {\n    providerId: \"togetherai\",\n    modelId: TOGETHERAI_LLAMA_3_3_70B_INSTRUCT_TURBO_MODEL_ID,\n    displayName: \"Llama 3.3 70B Instruct Turbo\",\n    contextSize: 128_000,\n    recommendedTopK: 32,\n    recommendedExhaustiveTopK: 128, // 65_536\n    largeModel: true,\n    description: \"Meta's fast, powerful and open source model (128k context).\",\n    shortDescription: \"Meta's open source model.\",\n    isLegacy: false,\n    generationTokensCount: 2048,\n    supportsVision: false,\n  };\n\nexport const TOGETHERAI_QWEN_2_5_CODER_32B_INSTRUCT_MODEL_CONFIG: ModelConfigurationType =\n  {\n    providerId: \"togetherai\",\n    modelId: TOGETHERAI_QWEN_2_5_CODER_32B_INSTRUCT_MODEL_ID,\n    displayName: \"Qwen 2.5 Coder 32B Instruct\",\n    contextSize: 32_000,\n    recommendedTopK: 16,\n    recommendedExhaustiveTopK: 56, // 28_672\n    largeModel: false,\n    description: \"Alibaba's fast model for coding (32k context).\",\n    shortDescription: \"Alibaba's fast coding model.\",\n    isLegacy: false,\n    generationTokensCount: 2048,\n    supportsVision: false,\n  };\n\nexport const TOGETHERAI_QWEN_QWQ_32B_PREVIEW_MODEL_CONFIG: ModelConfigurationType =\n  {\n    providerId: \"togetherai\",\n    modelId: TOGETHERAI_QWEN_QWQ_32B_PREVIEW_MODEL_ID,\n    displayName: \"Qwen QwQ 32B Preview\",\n    contextSize: 32_000,\n    recommendedTopK: 16,\n    recommendedExhaustiveTopK: 56, // 28_672\n    largeModel: false,\n    description: \"Alibaba's fast reasoning model (32k context).\",\n    shortDescription: \"Alibaba's fast reasoning model.\",\n    isLegacy: false,\n    generationTokensCount: 2048,\n    supportsVision: false,\n  };\n\nexport const TOGETHERAI_QWEN_72B_INSTRUCT_MODEL_CONFIG: ModelConfigurationType =\n  {\n    providerId: \"togetherai\",\n    modelId: TOGETHERAI_QWEN_72B_INSTRUCT_MODEL_ID,\n    displayName: \"Qwen 72B Instruct\",\n    contextSize: 32_000,\n    recommendedTopK: 16,\n    recommendedExhaustiveTopK: 56, // 28_672\n    largeModel: false,\n    description: \"Alibaba's powerful model (32k context).\",\n    shortDescription: \"Alibaba's powerful model.\",\n    isLegacy: false,\n    generationTokensCount: 2048,\n    supportsVision: false,\n  };\n\nexport const TOGETHERAI_DEEPSEEK_V3_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"togetherai\",\n  modelId: TOGETHERAI_DEEPSEEK_V3_MODEL_ID,\n  displayName: \"DeepSeek V3 (TogetherAI)\",\n  contextSize: 131_072,\n  recommendedTopK: 32,\n  recommendedExhaustiveTopK: 64,\n  largeModel: true,\n  description: \"DeepSeek's best model (v3, 64k context).\",\n  shortDescription: \"DeepSeek's best model.\",\n  isLegacy: false,\n  generationTokensCount: 2048,\n  supportsVision: false,\n};\n\nexport const TOGETHERAI_DEEPSEEK_R1_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"togetherai\",\n  modelId: TOGETHERAI_DEEPSEEK_R1_MODEL_ID,\n  displayName: \"DeepSeek R1 (TogetherAI)\",\n  contextSize: 163_840,\n  recommendedTopK: 32,\n  recommendedExhaustiveTopK: 64,\n  largeModel: true,\n  description: \"DeepSeek R1 (reasoning, 163k context, served via TogetherAI).\",\n  shortDescription: \"DeepSeek R1 (reasoning model).\",\n  isLegacy: false,\n  generationTokensCount: 2048,\n  supportsVision: false,\n};\n\nexport const DEEPSEEK_CHAT_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"deepseek\",\n  modelId: DEEPSEEK_CHAT_MODEL_ID,\n  displayName: \"DeepSeek\",\n  contextSize: 64_000,\n  recommendedTopK: 32,\n  recommendedExhaustiveTopK: 64,\n  largeModel: true,\n  description: \"DeepSeek's best model (v3, 64k context).\",\n  shortDescription: \"DeepSeek's best model.\",\n  isLegacy: false,\n  generationTokensCount: 2048,\n  supportsVision: false,\n  featureFlag: \"deepseek_feature\",\n};\n\nexport const DEEPSEEK_REASONER_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"deepseek\",\n  modelId: DEEPSEEK_REASONER_MODEL_ID,\n  displayName: \"DeepSeek R1\",\n  contextSize: 64_000,\n  recommendedTopK: 32,\n  recommendedExhaustiveTopK: 64,\n  largeModel: true,\n  description: \"DeepSeek's reasoning model (R1, 64k context).\",\n  shortDescription: \"DeepSeek's reasoning model.\",\n  isLegacy: false,\n  generationTokensCount: 2048,\n  supportsVision: false,\n  featureFlag: \"deepseek_feature\",\n};\n\nexport const FIREWORKS_DEEPSEEK_R1_MODEL_CONFIG: ModelConfigurationType = {\n  providerId: \"fireworks\",\n  modelId: FIREWORKS_DEEPSEEK_R1_MODEL_ID,\n  displayName: \"DeepSeek R1 (Fireworks)\",\n  contextSize: 164_000,\n  recommendedTopK: 32,\n  recommendedExhaustiveTopK: 128,\n  largeModel: true,\n  description:\n    \"DeepSeek's reasoning model (164k context, served via Fireworks).\",\n  shortDescription: \"DeepSeek R1 (reasoning model).\",\n  isLegacy: false,\n  generationTokensCount: 2048,\n  supportsVision: false,\n  delimitersConfiguration: {\n    incompleteDelimiterPatterns: [/<\\/?[a-zA-Z_]*$/],\n    delimiters: [\n      {\n        openingPattern: \"<think>\",\n        closingPattern: \"</think>\",\n        classification: \"chain_of_thought\" as const,\n        swallow: false,\n      },\n    ],\n  },\n};\n\nexport const SUPPORTED_MODEL_CONFIGS: ModelConfigurationType[] = [\n  GPT_3_5_TURBO_MODEL_CONFIG,\n  GPT_4_TURBO_MODEL_CONFIG,\n  GPT_4O_MODEL_CONFIG,\n  GPT_4O_20240806_MODEL_CONFIG,\n  GPT_4O_MINI_MODEL_CONFIG,\n  O1_MODEL_CONFIG,\n  O1_HIGH_REASONING_MODEL_CONFIG,\n  O1_MINI_MODEL_CONFIG,\n  O3_MINI_MODEL_CONFIG,\n  O3_MINI_HIGH_REASONING_MODEL_CONFIG,\n  CLAUDE_3_OPUS_DEFAULT_MODEL_CONFIG,\n  CLAUDE_3_5_SONNET_20240620_DEPRECATED_MODEL_CONFIG,\n  CLAUDE_3_5_SONNET_DEFAULT_MODEL_CONFIG,\n  CLAUDE_3_7_SONNET_DEFAULT_MODEL_CONFIG,\n  CLAUDE_3_HAIKU_DEFAULT_MODEL_CONFIG,\n  CLAUDE_3_5_HAIKU_DEFAULT_MODEL_CONFIG,\n  CLAUDE_2_DEFAULT_MODEL_CONFIG,\n  CLAUDE_INSTANT_DEFAULT_MODEL_CONFIG,\n  MISTRAL_LARGE_MODEL_CONFIG,\n  MISTRAL_MEDIUM_MODEL_CONFIG,\n  MISTRAL_SMALL_MODEL_CONFIG,\n  MISTRAL_CODESTRAL_MODEL_CONFIG,\n  GEMINI_PRO_DEFAULT_MODEL_CONFIG,\n  GEMINI_FLASH_DEFAULT_MODEL_CONFIG,\n  GEMINI_2_FLASH_PREVIEW_MODEL_CONFIG,\n  GEMINI_2_FLASH_THINKING_PREVIEW_MODEL_CONFIG,\n  GEMINI_2_FLASH_MODEL_CONFIG,\n  GEMINI_2_FLASH_LITE_PREVIEW_MODEL_CONFIG,\n  GEMINI_2_PRO_PREVIEW_MODEL_CONFIG,\n  TOGETHERAI_LLAMA_3_3_70B_INSTRUCT_TURBO_MODEL_CONFIG,\n  TOGETHERAI_QWEN_2_5_CODER_32B_INSTRUCT_MODEL_CONFIG,\n  TOGETHERAI_QWEN_QWQ_32B_PREVIEW_MODEL_CONFIG,\n  TOGETHERAI_QWEN_72B_INSTRUCT_MODEL_CONFIG,\n  TOGETHERAI_DEEPSEEK_V3_MODEL_CONFIG,\n  TOGETHERAI_DEEPSEEK_R1_MODEL_CONFIG,\n  DEEPSEEK_CHAT_MODEL_CONFIG,\n  DEEPSEEK_REASONER_MODEL_CONFIG,\n  FIREWORKS_DEEPSEEK_R1_MODEL_CONFIG,\n];\n\nexport type ModelConfig = (typeof SUPPORTED_MODEL_CONFIGS)[number];\n\n// this creates a union type of all the {providerId: string, modelId: string}\n// pairs that are in SUPPORTED_MODELS\nexport type SupportedModel = ExtractSpecificKeys<\n  (typeof SUPPORTED_MODEL_CONFIGS)[number],\n  \"providerId\" | \"modelId\" | \"reasoningEffort\"\n>;\n\nexport function isSupportedModel(model: unknown): model is SupportedModel {\n  const maybeSupportedModel = model as SupportedModel;\n  return SUPPORTED_MODEL_CONFIGS.some(\n    (m) =>\n      m.modelId === maybeSupportedModel.modelId &&\n      m.providerId === maybeSupportedModel.providerId\n  );\n}\n\n/**\n * Global agent list (stored here to be imported from client-side)\n */\n\nexport enum GLOBAL_AGENTS_SID {\n  HELPER = \"helper\",\n  DUST = \"dust\",\n  SLACK = \"slack\",\n  GOOGLE_DRIVE = \"google_drive\",\n  NOTION = \"notion\",\n  GITHUB = \"github\",\n  INTERCOM = \"intercom\",\n  GPT35_TURBO = \"gpt-3.5-turbo\",\n  GPT4 = \"gpt-4\",\n  O1 = \"o1\",\n  O1_MINI = \"o1-mini\",\n  O1_HIGH_REASONING = \"o1_high\",\n  O3_MINI = \"o3-mini\",\n  CLAUDE_3_OPUS = \"claude-3-opus\",\n  CLAUDE_3_SONNET = \"claude-3-sonnet\",\n  CLAUDE_3_HAIKU = \"claude-3-haiku\",\n  CLAUDE_3_7_SONNET = \"claude-3-7-sonnet\",\n  CLAUDE_2 = \"claude-2\",\n  CLAUDE_INSTANT = \"claude-instant-1\",\n  MISTRAL_LARGE = \"mistral-large\",\n  MISTRAL_MEDIUM = \"mistral-medium\",\n  //!\\ TEMPORARY WORKAROUND: Renaming 'mistral' to 'mistral-small' is not feasible since\n  // it interferes with the retrieval of ongoing conversations involving this agent.\n  // Needed to preserve ongoing chat integrity due to 'sId=mistral' references in legacy messages.\n  MISTRAL_SMALL = \"mistral\",\n  GEMINI_PRO = \"gemini-pro\",\n  DEEPSEEK_R1 = \"deepseek-r1\",\n}\n\nexport function getGlobalAgentAuthorName(agentId: string): string {\n  switch (agentId) {\n    case GLOBAL_AGENTS_SID.GPT4:\n    case GLOBAL_AGENTS_SID.O1:\n    case GLOBAL_AGENTS_SID.O1_MINI:\n    case GLOBAL_AGENTS_SID.O1_HIGH_REASONING:\n    case GLOBAL_AGENTS_SID.O3_MINI:\n      return \"OpenAI\";\n    case GLOBAL_AGENTS_SID.CLAUDE_INSTANT:\n    case GLOBAL_AGENTS_SID.CLAUDE_3_OPUS:\n    case GLOBAL_AGENTS_SID.CLAUDE_3_SONNET:\n    case GLOBAL_AGENTS_SID.CLAUDE_3_7_SONNET:\n    case GLOBAL_AGENTS_SID.CLAUDE_3_HAIKU:\n    case GLOBAL_AGENTS_SID.CLAUDE_2:\n      return \"Anthropic\";\n    case GLOBAL_AGENTS_SID.MISTRAL_LARGE:\n    case GLOBAL_AGENTS_SID.MISTRAL_MEDIUM:\n    case GLOBAL_AGENTS_SID.MISTRAL_SMALL:\n      return \"Mistral\";\n    case GLOBAL_AGENTS_SID.GEMINI_PRO:\n      return \"Google\";\n    case GLOBAL_AGENTS_SID.DEEPSEEK_R1:\n      return \"DeepSeek\";\n    default:\n      return \"Dust\";\n  }\n}\n\nconst CUSTOM_ORDER: string[] = [\n  GLOBAL_AGENTS_SID.DUST,\n  GLOBAL_AGENTS_SID.GPT4,\n  GLOBAL_AGENTS_SID.O3_MINI,\n  GLOBAL_AGENTS_SID.SLACK,\n  GLOBAL_AGENTS_SID.NOTION,\n  GLOBAL_AGENTS_SID.GOOGLE_DRIVE,\n  GLOBAL_AGENTS_SID.GITHUB,\n  GLOBAL_AGENTS_SID.INTERCOM,\n  GLOBAL_AGENTS_SID.CLAUDE_3_OPUS,\n  GLOBAL_AGENTS_SID.CLAUDE_3_SONNET,\n  GLOBAL_AGENTS_SID.CLAUDE_3_HAIKU,\n  GLOBAL_AGENTS_SID.CLAUDE_3_7_SONNET,\n  GLOBAL_AGENTS_SID.CLAUDE_2,\n  GLOBAL_AGENTS_SID.CLAUDE_INSTANT,\n  GLOBAL_AGENTS_SID.MISTRAL_LARGE,\n  GLOBAL_AGENTS_SID.MISTRAL_MEDIUM,\n  GLOBAL_AGENTS_SID.MISTRAL_SMALL,\n  GLOBAL_AGENTS_SID.GEMINI_PRO,\n  GLOBAL_AGENTS_SID.HELPER,\n];\n\n// This function implements our general strategy to sort agents to users (input bar, agent list,\n// agent suggestions...).\nexport function compareAgentsForSort(\n  a: LightAgentConfigurationType,\n  b: LightAgentConfigurationType\n) {\n  // Place favorites first\n  if (a.userFavorite && !b.userFavorite) {\n    return -1;\n  }\n  if (b.userFavorite && !a.userFavorite) {\n    return 1;\n  }\n  // Check for 'dust'\n  if (a.sId === GLOBAL_AGENTS_SID.DUST) {\n    return -1;\n  }\n  if (b.sId === GLOBAL_AGENTS_SID.DUST) {\n    return 1;\n  }\n\n  // Check for 'gpt4'\n  if (a.sId === GLOBAL_AGENTS_SID.GPT4) {\n    return -1;\n  }\n  if (b.sId === GLOBAL_AGENTS_SID.GPT4) {\n    return 1;\n  }\n\n  // Check for agents with non-global 'scope'\n  if (a.scope !== \"global\" && b.scope === \"global\") {\n    return -1;\n  }\n  if (b.scope !== \"global\" && a.scope === \"global\") {\n    return 1;\n  }\n\n  // Check for customOrder (slack, notion, googledrive, github, claude)\n  const aIndex = CUSTOM_ORDER.indexOf(a.sId);\n  const bIndex = CUSTOM_ORDER.indexOf(b.sId);\n\n  if (aIndex !== -1 && bIndex !== -1) {\n    return aIndex - bIndex; // Both are in customOrder, sort them accordingly\n  }\n\n  if (aIndex !== -1) {\n    return -1;\n  } // Only a is in customOrder, it comes first\n  if (bIndex !== -1) {\n    return 1;\n  } // Only b is in customOrder, it comes first\n\n  // default: sort alphabetically\n  return a.name.localeCompare(b.name, \"en\", { sensitivity: \"base\" });\n}\n","import * as t from \"io-ts\";\n\nimport { createRangeCodec } from \"../../../shared/utils/iots_utils\";\nimport { TimeframeUnitCodec } from \"../../assistant/actions/retrieval\";\nimport {\n  isSupportedModel,\n  ModelIdCodec,\n  ModelProviderIdCodec,\n  ReasoningEffortCodec,\n  SupportedModel,\n} from \"../../lib/assistant\";\n\nconst LimitCodec = createRangeCodec(0, 100);\n\n// Get schema for the url query parameters: a view parameter with all the types\n// of AgentGetViewType\nexport const GetAgentConfigurationsQuerySchema = t.type({\n  view: t.union([\n    t.literal(\"current_user\"),\n    t.literal(\"list\"),\n    t.literal(\"workspace\"),\n    t.literal(\"published\"),\n    t.literal(\"global\"),\n    t.literal(\"admin_internal\"),\n    t.literal(\"all\"),\n    t.undefined,\n  ]),\n  withUsage: t.union([t.literal(\"true\"), t.literal(\"false\"), t.undefined]),\n  withAuthors: t.union([t.literal(\"true\"), t.literal(\"false\"), t.undefined]),\n  withFeedbacks: t.union([t.literal(\"true\"), t.literal(\"false\"), t.undefined]),\n  limit: t.union([LimitCodec, t.undefined]),\n  sort: t.union([\n    t.literal(\"priority\"),\n    t.literal(\"alphabetical\"),\n    t.undefined,\n  ]),\n});\n\nexport const GetAgentConfigurationsHistoryQuerySchema = t.type({\n  limit: t.union([LimitCodec, t.undefined]),\n});\n\nexport const GetAgentConfigurationsLeaderboardQuerySchema = t.type({\n  view: t.union([\n    t.literal(\"list\"),\n    t.literal(\"workspace\"),\n    t.literal(\"published\"),\n    t.literal(\"global\"),\n    t.literal(\"admin_internal\"),\n    t.literal(\"manage-assistants-search\"),\n    t.literal(\"all\"),\n  ]),\n});\n\nconst DataSourceFilterParentsCodec = t.union([\n  t.type({\n    in: t.array(t.string),\n    not: t.array(t.string),\n  }),\n  t.null,\n]);\n\nconst OptionalDataSourceFilterTagsCodec = t.partial({\n  tags: t.union([\n    t.type({\n      in: t.array(t.string),\n      not: t.array(t.string),\n      mode: t.union([t.literal(\"custom\"), t.literal(\"auto\")]),\n    }),\n    t.null,\n  ]),\n});\n\nconst DataSourceFilterCodec = t.intersection([\n  t.type({ parents: DataSourceFilterParentsCodec }),\n  OptionalDataSourceFilterTagsCodec,\n]);\n\nconst RetrievalActionConfigurationSchema = t.type({\n  type: t.literal(\"retrieval_configuration\"),\n  query: t.union([t.literal(\"auto\"), t.literal(\"none\")]),\n  relativeTimeFrame: t.union([\n    t.literal(\"auto\"),\n    t.literal(\"none\"),\n    t.type({\n      duration: t.number,\n      unit: TimeframeUnitCodec,\n    }),\n  ]),\n  topK: t.union([t.number, t.literal(\"auto\")]),\n  dataSources: t.array(\n    t.type({\n      dataSourceViewId: t.string,\n      workspaceId: t.string,\n      filter: DataSourceFilterCodec,\n    })\n  ),\n});\n\nconst DustAppRunActionConfigurationSchema = t.type({\n  type: t.literal(\"dust_app_run_configuration\"),\n  appWorkspaceId: t.string,\n  appId: t.string,\n});\n\nconst TablesQueryActionConfigurationSchema = t.type({\n  type: t.literal(\"tables_query_configuration\"),\n  tables: t.array(\n    t.type({\n      dataSourceViewId: t.string,\n      tableId: t.string,\n      workspaceId: t.string,\n    })\n  ),\n});\n\nconst WebsearchActionConfigurationSchema = t.type({\n  type: t.literal(\"websearch_configuration\"),\n});\n\nconst BrowseActionConfigurationSchema = t.type({\n  type: t.literal(\"browse_configuration\"),\n});\n\nconst GithubGetPullRequestActionConfigurationSchema = t.type({\n  type: t.literal(\"github_get_pull_request_configuration\"),\n});\n\nconst GithubCreateIssueActionConfigurationSchema = t.type({\n  type: t.literal(\"github_create_issue_configuration\"),\n});\n\nconst ReasoningActionConfigurationSchema = t.type({\n  type: t.literal(\"reasoning_configuration\"),\n  modelId: ModelIdCodec,\n  providerId: ModelProviderIdCodec,\n  temperature: t.union([t.number, t.null]),\n  reasoningEffort: t.union([ReasoningEffortCodec, t.null]),\n});\n\nconst ProcessActionConfigurationSchema = t.type({\n  type: t.literal(\"process_configuration\"),\n  dataSources: t.array(\n    t.type({\n      dataSourceViewId: t.string,\n      workspaceId: t.string,\n      filter: DataSourceFilterCodec,\n    })\n  ),\n  relativeTimeFrame: t.union([\n    t.literal(\"auto\"),\n    t.literal(\"none\"),\n    t.type({\n      duration: t.number,\n      unit: TimeframeUnitCodec,\n    }),\n  ]),\n  schema: t.array(\n    t.type({\n      name: t.string,\n      type: t.union([\n        t.literal(\"string\"),\n        t.literal(\"number\"),\n        t.literal(\"boolean\"),\n      ]),\n      description: t.string,\n    })\n  ),\n});\n\nconst multiActionsCommonFields = {\n  name: t.union([t.string, t.null]),\n  description: t.union([t.string, t.null]),\n};\n\nconst requiredMultiActionsCommonFields = t.type({\n  name: t.string,\n  description: t.union([t.string, t.null]),\n});\n\nconst ActionConfigurationSchema = t.intersection([\n  t.union([\n    RetrievalActionConfigurationSchema,\n    DustAppRunActionConfigurationSchema,\n    TablesQueryActionConfigurationSchema,\n    ProcessActionConfigurationSchema,\n    WebsearchActionConfigurationSchema,\n    BrowseActionConfigurationSchema,\n    GithubGetPullRequestActionConfigurationSchema,\n    GithubCreateIssueActionConfigurationSchema,\n    ReasoningActionConfigurationSchema,\n  ]),\n  requiredMultiActionsCommonFields,\n]);\n\nconst ModelConfigurationSchema = t.intersection([\n  t.type({\n    modelId: ModelIdCodec,\n    providerId: ModelProviderIdCodec,\n    temperature: t.number,\n  }),\n  // TODO(2024-11-04 flav) Clean up this legacy type.\n  t.partial(multiActionsCommonFields),\n  t.partial({\n    reasoningEffort: ReasoningEffortCodec,\n  }),\n]);\nconst IsSupportedModelSchema = new t.Type<SupportedModel>(\n  \"SupportedModel\",\n  isSupportedModel,\n  (i, c) => (isSupportedModel(i) ? t.success(i) : t.failure(i, c)),\n  t.identity\n);\n\nexport const PostOrPatchAgentConfigurationRequestBodySchema = t.type({\n  assistant: t.type({\n    name: t.string,\n    description: t.string,\n    instructions: t.union([t.string, t.null]),\n    pictureUrl: t.string,\n    status: t.union([\n      t.literal(\"active\"),\n      t.literal(\"archived\"),\n      t.literal(\"draft\"),\n    ]),\n    scope: t.union([\n      t.literal(\"workspace\"),\n      t.literal(\"published\"),\n      t.literal(\"private\"),\n    ]),\n    model: t.intersection([ModelConfigurationSchema, IsSupportedModelSchema]),\n    actions: t.array(ActionConfigurationSchema),\n    templateId: t.union([t.string, t.null, t.undefined]),\n    maxStepsPerRun: t.union([t.number, t.undefined]),\n    visualizationEnabled: t.boolean,\n  }),\n});\n\nexport type PostOrPatchAgentConfigurationRequestBody = t.TypeOf<\n  typeof PostOrPatchAgentConfigurationRequestBodySchema\n>;\n","/**\n *  Filters out nulls & undefineds from an array by correclty narrowing the type\n */\nexport function removeNulls<T>(arr: (T | null | undefined)[]): T[] {\n  return arr.filter((v): v is T => v !== null && v !== undefined);\n}\n\nexport function isString(value: unknown): value is string {\n  return typeof value === \"string\";\n}\n\nexport function isEmptyString(str: string | null | undefined): boolean {\n  if (str === null || str === undefined) {\n    return true;\n  }\n  return str.trim() === \"\";\n}\n","// Types.\nimport { removeNulls } from \"../shared/utils/general\";\n\nconst uniq = <T>(arr: T[]): T[] => Array.from(new Set(arr));\n\nexport const TABLE_PREFIX = \"TABLE:\";\n\nexport type FileStatus = \"created\" | \"failed\" | \"ready\";\n\nexport type FileUseCase =\n  | \"conversation\"\n  | \"avatar\"\n  | \"tool_output\"\n  | \"upsert_document\"\n  | \"upsert_table\";\n\nexport type FileUseCaseMetadata = {\n  conversationId: string;\n  generatedTables?: string[];\n};\n\nexport interface FileType {\n  contentType: SupportedFileContentType;\n  downloadUrl?: string;\n  fileName: string;\n  fileSize: number;\n  sId: string;\n  // TODO(spolu): move this to being the ModelId\n  id: string;\n  status: FileStatus;\n  uploadUrl?: string;\n  publicUrl?: string;\n  useCase: FileUseCase;\n}\n\nexport type FileTypeWithUploadUrl = FileType & { uploadUrl: string };\n\nexport type FileFormatCategory = \"image\" | \"data\" | \"code\" | \"delimited\";\n\n// Define max sizes for each category.\nexport const MAX_FILE_SIZES: Record<FileFormatCategory, number> = {\n  data: 50 * 1024 * 1024, // 50MB.\n  code: 50 * 1024 * 1024, // 50MB.\n  delimited: 50 * 1024 * 1024, // 50MB.\n  image: 5 * 1024 * 1024, // 5 MB\n};\n\nexport function maxFileSizeToHumanReadable(size: number, decimals = 0) {\n  if (size < 1024) {\n    return `${size.toFixed(decimals)} B`;\n  }\n\n  if (size < 1024 * 1024) {\n    return `${(size / 1024).toFixed(decimals)} KB`;\n  }\n\n  if (size < 1024 * 1024 * 1024) {\n    return `${(size / (1024 * 1024)).toFixed(decimals)} MB`;\n  }\n\n  return `${(size / (1024 * 1024 * 1024)).toFixed(decimals)} GB`;\n}\n\nconst BIG_FILE_SIZE = 5_000_000;\n\nexport function isBigFileSize(size: number) {\n  return size > BIG_FILE_SIZE;\n}\n\n// Function to ensure file size is within max limit for given content type.\nexport function ensureFileSize(\n  contentType: SupportedFileContentType,\n  fileSize: number\n): boolean {\n  const format = getFileFormat(contentType);\n\n  if (format) {\n    return fileSize <= MAX_FILE_SIZES[format.cat];\n  }\n\n  return false;\n}\n\ntype FileFormat = {\n  cat: FileFormatCategory;\n  exts: string[];\n};\n\n// NOTE: if we add more content types, we need to update the public api package. (but the typechecker should catch it)\nconst FILE_FORMATS = {\n  // Images\n  \"image/jpeg\": { cat: \"image\", exts: [\".jpg\", \".jpeg\"] },\n  \"image/png\": { cat: \"image\", exts: [\".png\"] },\n  \"image/gif\": { cat: \"image\", exts: [\".gif\"] },\n  \"image/webp\": { cat: \"image\", exts: [\".webp\"] },\n\n  // Structured\n  \"text/csv\": { cat: \"delimited\", exts: [\".csv\"] },\n  \"text/comma-separated-values\": { cat: \"delimited\", exts: [\".csv\"] },\n  \"text/tsv\": { cat: \"delimited\", exts: [\".tsv\"] },\n  \"text/tab-separated-values\": { cat: \"delimited\", exts: [\".tsv\"] },\n  \"application/vnd.ms-excel\": { cat: \"delimited\", exts: [\".xls\"] },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\": {\n    cat: \"delimited\",\n    exts: [\".xlsx\"],\n  },\n\n  // Custom for section json files generated from tables query results.\n  \"application/vnd.dust.section.json\": {\n    cat: \"data\",\n    exts: [\".json\"],\n  },\n\n  // Data\n  \"text/plain\": { cat: \"data\", exts: [\".txt\", \".log\", \".cfg\", \".conf\"] },\n  \"text/markdown\": { cat: \"data\", exts: [\".md\", \".markdown\"] },\n  \"text/vnd.dust.attachment.slack.thread\": { cat: \"data\", exts: [\".txt\"] },\n  \"text/calendar\": { cat: \"data\", exts: [\".ics\"] },\n  \"application/json\": { cat: \"data\", exts: [\".json\"] },\n  \"application/msword\": { cat: \"data\", exts: [\".doc\", \".docx\"] },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\": {\n    cat: \"data\",\n    exts: [\".doc\", \".docx\"],\n  },\n  \"application/vnd.ms-powerpoint\": { cat: \"data\", exts: [\".ppt\", \".pptx\"] },\n  \"application/vnd.openxmlformats-officedocument.presentationml.presentation\": {\n    cat: \"data\",\n    exts: [\".ppt\", \".pptx\"],\n  },\n  \"application/pdf\": { cat: \"data\", exts: [\".pdf\"] },\n\n  // Code\n  \"text/xml\": { cat: \"data\", exts: [\".xml\"] },\n  \"application/xml\": { cat: \"data\", exts: [\".xml\"] },\n  \"text/html\": { cat: \"data\", exts: [\".html\", \".htm\", \".xhtml\", \".xhtml+xml\"] },\n  \"text/css\": { cat: \"code\", exts: [\".css\"] },\n  \"text/javascript\": { cat: \"code\", exts: [\".js\", \".mjs\", \"*.jsx\"] },\n  \"text/typescript\": { cat: \"code\", exts: [\".ts\", \".tsx\"] },\n  \"application/x-sh\": { cat: \"code\", exts: [\".sh\"] },\n  \"text/x-sh\": { cat: \"code\", exts: [\".sh\"] },\n  \"text/x-python\": { cat: \"code\", exts: [\".py\"] },\n  \"text/x-python-script\": { cat: \"code\", exts: [\".py\"] },\n  \"application/x-yaml\": { cat: \"code\", exts: [\".yaml\", \".yml\"] },\n  \"text/yaml\": { cat: \"code\", exts: [\".yaml\", \".yml\"] },\n  \"text/vnd.yaml\": { cat: \"code\", exts: [\".yaml\", \".yml\"] },\n  \"text/x-c\": {\n    cat: \"code\",\n    exts: [\".c\", \".cc\", \".cpp\", \".cxx\", \".dic\", \".h\", \".hh\"],\n  },\n  \"text/x-csharp\": { cat: \"code\", exts: [\".cs\"] },\n  \"text/x-java-source\": { cat: \"code\", exts: [\".java\"] },\n  \"text/x-php\": { cat: \"code\", exts: [\".php\"] },\n  \"text/x-ruby\": { cat: \"code\", exts: [\".rb\"] },\n  \"text/x-sql\": { cat: \"code\", exts: [\".sql\"] },\n  \"text/x-swift\": { cat: \"code\", exts: [\".swift\"] },\n  \"text/x-rust\": { cat: \"code\", exts: [\".rs\"] },\n  \"text/x-go\": { cat: \"code\", exts: [\".go\"] },\n  \"text/x-kotlin\": { cat: \"code\", exts: [\".kt\", \".kts\"] },\n  \"text/x-scala\": { cat: \"code\", exts: [\".scala\"] },\n  \"text/x-groovy\": { cat: \"code\", exts: [\".groovy\"] },\n  \"text/x-perl\": { cat: \"code\", exts: [\".pl\", \".pm\"] },\n  \"text/x-perl-script\": { cat: \"code\", exts: [\".pl\", \".pm\"] },\n  // declare type here using satisfies to allow flexible typing for keys, FileFormat type for values and yet infer the keys of FILE_FORMATS correctly below\n} as const satisfies Record<string, FileFormat>;\n\n// Define a type that is the list of all keys from FILE_FORMATS.\nexport type SupportedFileContentType = keyof typeof FILE_FORMATS;\n\nexport type SupportedImageContentType = {\n  [K in keyof typeof FILE_FORMATS]: (typeof FILE_FORMATS)[K] extends {\n    cat: \"image\";\n  }\n    ? K\n    : never;\n}[keyof typeof FILE_FORMATS];\n\nexport type SupportedDelimitedTextContentType = {\n  [K in keyof typeof FILE_FORMATS]: (typeof FILE_FORMATS)[K] extends {\n    cat: \"delimited\";\n  }\n    ? K\n    : never;\n}[keyof typeof FILE_FORMATS];\n\nexport type SupportedNonImageContentType = {\n  [K in keyof typeof FILE_FORMATS]: (typeof FILE_FORMATS)[K] extends {\n    cat: \"image\";\n  }\n    ? never\n    : K;\n}[keyof typeof FILE_FORMATS];\n\n// All the ones listed above\nexport const supportedUploadableContentType = Object.keys(FILE_FORMATS);\n\nexport function isSupportedFileContentType(\n  contentType: string\n): contentType is SupportedFileContentType {\n  return !!FILE_FORMATS[contentType as SupportedFileContentType];\n}\n\n// UseCases supported on the public API\nexport function isPublicySupportedUseCase(\n  useCase: string\n): useCase is FileUseCase {\n  return [\"conversation\"].includes(useCase);\n}\n\nexport function isSupportedImageContentType(\n  contentType: string\n): contentType is SupportedImageContentType {\n  const format = getFileFormat(contentType);\n\n  if (format) {\n    return format.cat === \"image\";\n  }\n\n  return false;\n}\n\nexport function isSupportedDelimitedTextContentType(\n  contentType: string\n): contentType is SupportedDelimitedTextContentType {\n  const format = getFileFormat(contentType);\n\n  if (format) {\n    return format.cat === \"delimited\";\n  }\n\n  return false;\n}\n\nexport function getFileFormatCategory(\n  contentType: string\n): FileFormatCategory | null {\n  const format = getFileFormat(contentType);\n\n  if (format) {\n    return format.cat;\n  }\n\n  return null;\n}\n\nfunction getFileFormat(contentType: string): FileFormat | null {\n  if (isSupportedFileContentType(contentType)) {\n    const format = FILE_FORMATS[contentType];\n\n    if (format) {\n      return format;\n    }\n  }\n\n  return null;\n}\n\nexport function extensionsForContentType(\n  contentType: SupportedFileContentType\n): string[] {\n  const format = getFileFormat(contentType);\n\n  if (format) {\n    return format.exts;\n  }\n\n  return [];\n}\n\nexport function contentTypeForExtension(\n  extension: string\n): SupportedFileContentType | null {\n  // Type assertion to handle the entries\n  const entries = Object.entries(FILE_FORMATS) as [\n    SupportedFileContentType,\n    FileFormat\n  ][];\n\n  return (\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    entries.find(([_, value]) => value.exts.includes(extension))?.[0] || null\n  );\n}\n\nexport function getSupportedFileExtensions(\n  cat: FileFormatCategory | undefined = undefined\n) {\n  return uniq(\n    removeNulls(\n      Object.values(FILE_FORMATS).flatMap((format) =>\n        !cat || format.cat === cat ? format.exts : []\n      )\n    )\n  );\n}\n\nexport function getSupportedNonImageFileExtensions() {\n  return uniq(\n    removeNulls(\n      Object.values(FILE_FORMATS).flatMap((format) =>\n        format.cat !== \"image\" ? format.exts : []\n      )\n    )\n  );\n}\n\nexport function getSupportedNonImageMimeTypes() {\n  return uniq(\n    removeNulls(\n      Object.entries(FILE_FORMATS).map(([key, value]) =>\n        value.cat !== \"image\" ? (key as SupportedNonImageContentType) : null\n      )\n    )\n  );\n}\n","import * as t from \"io-ts\";\n\nimport { getSupportedNonImageMimeTypes } from \"../../files\";\n\nexport const InternalPostMessagesRequestBodySchema = t.type({\n  content: t.string,\n  mentions: t.array(t.type({ configurationId: t.string })),\n  context: t.type({\n    timezone: t.string,\n    profilePictureUrl: t.union([t.string, t.null]),\n  }),\n});\n\nconst ContentFragmentBaseSchema = t.intersection([\n  t.type({\n    title: t.string,\n  }),\n  t.partial({\n    url: t.union([t.string, t.null]),\n    supersededContentFragmentId: t.union([t.string, t.null]),\n  }),\n]);\n\nexport const getSupportedInlinedContentType = () => {\n  const [first, second, ...rest] = getSupportedNonImageMimeTypes();\n  return t.union([\n    t.literal(first),\n    t.literal(second),\n    ...rest.map((value) => t.literal(value)),\n  ]);\n};\n\nconst ContentFragmentInputWithContentSchema = t.intersection([\n  ContentFragmentBaseSchema,\n  t.type({\n    content: t.string,\n    contentType: getSupportedInlinedContentType(),\n  }),\n]);\n\nexport type ContentFragmentInputWithContentType = t.TypeOf<\n  typeof ContentFragmentInputWithContentSchema\n>;\n\nconst ContentFragmentInputWithFileIdSchema = t.intersection([\n  ContentFragmentBaseSchema,\n  t.type({\n    fileId: t.string,\n  }),\n]);\n\nexport type ContentFragmentInputWithFileIdType = t.TypeOf<\n  typeof ContentFragmentInputWithFileIdSchema\n>;\n\ntype ContentFragmentInputType =\n  | ContentFragmentInputWithContentType\n  | ContentFragmentInputWithFileIdType;\n\nexport function isContentFragmentInputWithContentType(\n  fragment: ContentFragmentInputType\n): fragment is ContentFragmentInputWithContentType {\n  return \"contentType\" in fragment;\n}\n\nexport const InternalPostContentFragmentRequestBodySchema = t.intersection([\n  t.type({\n    context: t.type({\n      profilePictureUrl: t.union([t.string, t.null]),\n    }),\n  }),\n  ContentFragmentInputWithFileIdSchema,\n]);\n\nexport const InternalPostConversationsRequestBodySchema = t.type({\n  title: t.union([t.string, t.null]),\n  visibility: t.union([\n    t.literal(\"unlisted\"),\n    t.literal(\"workspace\"),\n    t.literal(\"deleted\"),\n    t.literal(\"test\"),\n  ]),\n  message: t.union([InternalPostMessagesRequestBodySchema, t.null]),\n  contentFragments: t.array(InternalPostContentFragmentRequestBodySchema),\n});\n\nexport const InternalPostBuilderSuggestionsRequestBodySchema = t.union([\n  t.type({\n    type: t.literal(\"name\"),\n    inputs: t.type({ instructions: t.string, description: t.string }),\n  }),\n  t.type({\n    type: t.literal(\"emoji\"),\n    inputs: t.type({ instructions: t.string }),\n  }),\n  t.type({\n    type: t.literal(\"instructions\"),\n    inputs: t.type({\n      current_instructions: t.string,\n      former_suggestions: t.array(t.string),\n    }),\n  }),\n  t.type({\n    type: t.literal(\"description\"),\n    inputs: t.type({ instructions: t.string, name: t.string }),\n  }),\n]);\n\nexport type BuilderSuggestionsRequestType = t.TypeOf<\n  typeof InternalPostBuilderSuggestionsRequestBodySchema\n>;\n\nexport const BuilderSuggestionsResponseBodySchema = t.union([\n  t.type({\n    status: t.literal(\"ok\"),\n    suggestions: t.union([t.array(t.string), t.null, t.undefined]),\n  }),\n  t.type({\n    status: t.literal(\"unavailable\"),\n    reason: t.union([\n      t.literal(\"user_not_finished\"), // The user has not finished inputing data for suggestions to make sense\n      t.literal(\"irrelevant\"),\n    ]),\n  }),\n]);\n\nexport type BuilderSuggestionsType = t.TypeOf<\n  typeof BuilderSuggestionsResponseBodySchema\n>;\n\nexport const BuilderEmojiSuggestionsResponseBodySchema = t.type({\n  suggestions: t.array(t.type({ emoji: t.string, backgroundColor: t.string })),\n});\nexport type BuilderEmojiSuggestionsType = t.TypeOf<\n  typeof BuilderEmojiSuggestionsResponseBodySchema\n>;\n\nexport const InternalPostBuilderProcessActionGenerateSchemaRequestBodySchema =\n  t.type({\n    instructions: t.string,\n  });\n","import * as t from \"io-ts\";\nconst PostRestrictedSpace = t.type({\n  memberIds: t.array(t.string),\n  isRestricted: t.literal(true),\n});\n\nconst PostUnrestrictedSpace = t.type({\n  memberIds: t.null,\n  isRestricted: t.literal(false),\n});\n\nexport const PostSpaceRequestBodySchema = t.intersection([\n  t.type({\n    name: t.string,\n  }),\n  t.union([PostRestrictedSpace, PostUnrestrictedSpace]),\n]);\n\nexport const PatchSpaceMembersRequestBodySchema = t.union([\n  PostRestrictedSpace,\n  PostUnrestrictedSpace,\n]);\n\nexport const ContentSchema = t.type({\n  dataSourceId: t.string,\n  parentsIn: t.array(t.string),\n});\n\nexport const PatchSpaceRequestBodySchema = t.type({\n  name: t.union([t.string, t.undefined]),\n  content: t.union([t.array(ContentSchema), t.undefined]),\n});\n\nexport const PostDataSourceViewSchema = ContentSchema;\n\nexport const PostNotionSyncPayloadSchema = t.type({\n  urls: t.array(t.string),\n  method: t.union([t.literal(\"sync\"), t.literal(\"delete\")]),\n});\n\nexport const GetPostNotionSyncResponseBodySchema = t.type({\n  syncResults: t.array(\n    t.intersection([\n      t.type({\n        url: t.string,\n        method: t.union([t.literal(\"sync\"), t.literal(\"delete\")]),\n        timestamp: t.number,\n        success: t.boolean,\n      }),\n      t.partial({\n        error_message: t.string,\n      }),\n    ])\n  ),\n});\n\nexport type GetPostNotionSyncResponseBody = t.TypeOf<\n  typeof GetPostNotionSyncResponseBodySchema\n>;\n","import * as t from \"io-ts\";\n\nimport { CoreAPIDataSourceDocumentSection } from \"../../../core/data_source\";\n\nexport const UpsertContextSchema = t.type({\n  sync_type: t.union([\n    t.literal(\"batch\"),\n    t.literal(\"incremental\"),\n    t.undefined,\n  ]),\n});\n\nexport type UpsertContext = t.TypeOf<typeof UpsertContextSchema>;\n\nexport const FrontDataSourceDocumentSection: t.RecursiveType<\n  t.Type<CoreAPIDataSourceDocumentSection>,\n  CoreAPIDataSourceDocumentSection\n> = t.recursion(\"Section\", () =>\n  t.type({\n    prefix: t.union([t.string, t.null]),\n    content: t.union([t.string, t.null]),\n    sections: t.array(FrontDataSourceDocumentSection),\n  })\n);\n\nexport type FrontDataSourceDocumentSectionType = t.TypeOf<\n  typeof FrontDataSourceDocumentSection\n>;\n\nexport const PostDataSourceDocumentRequestBodySchema = t.type({\n  timestamp: t.union([t.Int, t.undefined, t.null]),\n  tags: t.union([t.array(t.string), t.undefined, t.null]),\n  parent_id: t.union([t.string, t.undefined, t.null]),\n  parents: t.union([t.array(t.string), t.undefined, t.null]),\n  source_url: t.union([t.string, t.undefined, t.null]),\n  upsert_context: t.union([UpsertContextSchema, t.undefined, t.null]),\n  text: t.union([t.string, t.undefined, t.null]),\n  section: t.union([FrontDataSourceDocumentSection, t.undefined, t.null]),\n  light_document_output: t.union([t.boolean, t.undefined]),\n  async: t.union([t.boolean, t.undefined, t.null]),\n  title: t.string,\n  mime_type: t.string,\n});\n\nexport type PostDataSourceDocumentRequestBody = t.TypeOf<\n  typeof PostDataSourceDocumentRequestBodySchema\n>;\n\nexport const PostDataSourceWithNameDocumentRequestBodySchema = t.intersection([\n  t.type({\n    name: t.string,\n  }),\n  PostDataSourceDocumentRequestBodySchema,\n]);\n\nexport type PostDataSourceWithNameDocumentRequestBody = t.TypeOf<\n  typeof PostDataSourceWithNameDocumentRequestBodySchema\n>;\n\n// Post and Patch require the same request body\nexport type PatchDataSourceWithNameDocumentRequestBody = t.TypeOf<\n  typeof PostDataSourceWithNameDocumentRequestBodySchema\n>;\n\nexport const PatchDataSourceTableRequestBodySchema = t.type({\n  name: t.string,\n  description: t.string,\n  timestamp: t.union([t.number, t.undefined, t.null]),\n  tags: t.union([t.array(t.string), t.undefined, t.null]),\n  parentId: t.union([t.string, t.undefined, t.null]),\n  parents: t.union([t.array(t.string), t.undefined, t.null]),\n  truncate: t.boolean,\n  async: t.union([t.boolean, t.undefined]),\n  fileId: t.union([t.string, t.undefined]),\n  title: t.string,\n  mimeType: t.string,\n  sourceUrl: t.union([t.string, t.undefined, t.null]),\n});\n\nexport type PatchDataSourceTableRequestBody = t.TypeOf<\n  typeof PatchDataSourceTableRequestBodySchema\n>;\n","import * as t from \"io-ts\";\n\nimport { ContentNodeType } from \"../../..\";\n\nconst ParentsToAddRemoveSchema = t.type({\n  parentsToAdd: t.union([t.array(t.string), t.undefined]),\n  parentsToRemove: t.union([t.array(t.string), t.undefined]),\n});\n\nconst ParentsInSchema = t.type({\n  parentsIn: t.array(t.string),\n});\n\nexport const PatchDataSourceViewSchema = t.union([\n  ParentsToAddRemoveSchema,\n  ParentsInSchema,\n]);\n\nexport type PatchDataSourceViewType = t.TypeOf<\n  typeof PatchDataSourceViewSchema\n>;\n\nexport type LightContentNode = {\n  expandable: boolean;\n  internalId: string;\n  lastUpdatedAt: number | null;\n  parentInternalId: string | null;\n  preventSelection?: boolean;\n  sourceUrl: string | null;\n  title: string;\n  type: ContentNodeType;\n};\n\nexport const DATA_SOURCE_VIEW_CATEGORIES = [\n  \"managed\",\n  \"folder\",\n  \"website\",\n  \"apps\",\n] as const;\n\nexport type DataSourceViewCategory =\n  (typeof DATA_SOURCE_VIEW_CATEGORIES)[number];\n\nexport function isValidDataSourceViewCategory(\n  category: unknown\n): category is DataSourceViewCategory {\n  return DATA_SOURCE_VIEW_CATEGORIES.includes(\n    category as DataSourceViewCategory\n  );\n}\n\nexport type DataSourceViewCategoryWithoutApps = Exclude<\n  DataSourceViewCategory,\n  \"apps\"\n>;\n\nexport function isDataSourceViewCategoryWithoutApps(\n  category: unknown\n): category is DataSourceViewCategoryWithoutApps {\n  return isValidDataSourceViewCategory(category) && category !== \"apps\";\n}\n\nexport function isWebsiteOrFolderCategory(\n  category: unknown\n): category is Extract<DataSourceViewCategory, \"website\" | \"folder\"> {\n  return category === \"website\" || category === \"folder\";\n}\n","import { BlockType } from \"../front/run\";\nimport { ModelId } from \"../shared/model_id\";\nimport { SpaceType } from \"./space\";\n\nexport type AppVisibility = \"private\" | \"deleted\";\n\nexport const APP_NAME_REGEXP = /^[a-zA-Z0-9_-]{1,64}$/;\n\nexport type BlockRunConfig = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n};\n\nexport type AppType = {\n  id: ModelId;\n  sId: string;\n  name: string;\n  description: string | null;\n  savedSpecification: string | null;\n  savedConfig: string | null;\n  savedRun: string | null;\n  dustAPIProjectId: string;\n  space: SpaceType;\n};\n\nexport type SpecificationBlockType = {\n  type: BlockType;\n  name: string;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  spec: any;\n  config: BlockRunConfig;\n  indent: number | null;\n};\n\nexport type SpecificationType = Array<SpecificationBlockType>;\n","import * as t from \"io-ts\";\n\nimport { BaseAction } from \"../../../front/assistant/actions\";\nimport { ModelId } from \"../../../shared/model_id\";\n\nexport type BrowseConfigurationType = {\n  id: ModelId;\n  sId: string;\n\n  type: \"browse_configuration\";\n\n  name: string;\n  description: string | null;\n};\n\nexport const BrowseResultSchema = t.type({\n  requestedUrl: t.string,\n  browsedUrl: t.string,\n  content: t.string,\n  responseCode: t.string,\n  errorMessage: t.string,\n});\n\nexport const BrowseActionOutputSchema = t.type({\n  results: t.array(BrowseResultSchema),\n});\n\nexport type BrowseActionOutputType = t.TypeOf<typeof BrowseActionOutputSchema>;\n\nexport type BrowseResultType = t.TypeOf<typeof BrowseResultSchema>;\n\nexport interface BrowseActionType extends BaseAction {\n  agentMessageId: ModelId;\n  urls: string[];\n  output: BrowseActionOutputType | null;\n  functionCallId: string | null;\n  functionCallName: string | null;\n  step: number;\n  type: \"browse_action\";\n}\n\n/**\n * Browse Action Events\n */\n\n// Event sent before the execution with the finalized params to be used.\nexport type BrowseParamsEvent = {\n  type: \"browse_params\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n  action: BrowseActionType;\n};\n\nexport type BrowseErrorEvent = {\n  type: \"browse_error\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n  error: {\n    code: string;\n    message: string;\n  };\n};\n\nexport type BrowseSuccessEvent = {\n  type: \"browse_success\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n  action: BrowseActionType;\n};\n","import {\n  FunctionCallType,\n  FunctionMessageTypeModel,\n} from \"../../../front/assistant/generation\";\nimport { ModelConfigurationType } from \"../../../front/lib/assistant\";\nimport { ModelId } from \"../../../shared/model_id\";\nimport { SupportedFileContentType } from \"../../files\";\nimport { ConversationType } from \"../conversation\";\n\nexport type ActionGeneratedFileType = {\n  fileId: string;\n  title: string;\n  contentType: SupportedFileContentType;\n  snippet: string | null;\n};\n\nexport type GithubBaseActionType =\n  | \"github_get_pull_request_action\"\n  | \"github_create_issue_action\";\n// | \"github_review_pull_request_action\";\n\nexport type ConversationBaseActionType =\n  | \"conversation_list_files_action\"\n  | \"conversation_include_file_action\";\n\nexport type BaseActionType =\n  | \"browse_action\"\n  | \"dust_app_run_action\"\n  | \"process_action\"\n  | \"reasoning_action\"\n  | \"retrieval_action\"\n  | \"search_labels_action\"\n  | \"tables_query_action\"\n  | \"visualization_action\"\n  | \"websearch_action\"\n  | ConversationBaseActionType\n  | GithubBaseActionType;\n\nexport abstract class BaseAction {\n  readonly id: ModelId;\n  readonly type: BaseActionType;\n  readonly generatedFiles: ActionGeneratedFileType[];\n\n  constructor(\n    id: ModelId,\n    type: BaseActionType,\n    generatedFiles: ActionGeneratedFileType[] = []\n  ) {\n    this.id = id;\n    this.type = type;\n    this.generatedFiles = generatedFiles;\n  }\n\n  getGeneratedFiles(): ActionGeneratedFileType[] {\n    return this.generatedFiles;\n  }\n\n  abstract renderForFunctionCall(): FunctionCallType;\n  abstract renderForMultiActionsModel({\n    conversation,\n    model,\n  }: {\n    conversation: ConversationType;\n    model: ModelConfigurationType;\n  }): Promise<FunctionMessageTypeModel>;\n}\n\nexport const PlatformActionsProviders = [\"github\"] as const;\nexport type PlatformActionsProviderType =\n  (typeof PlatformActionsProviders)[number];\n\nexport type PlatformActionsConfigurationType = {\n  provider: PlatformActionsProviderType;\n  connectionId: string;\n};\n","import {\n  BrowseActionType,\n  BrowseConfigurationType,\n} from \"../../../front/assistant/actions/browse\";\nimport {\n  ConversationIncludeFileActionType,\n  ConversationIncludeFileConfigurationType,\n} from \"../../../front/assistant/actions/conversation/include_file\";\nimport {\n  DustAppRunActionType,\n  DustAppRunConfigurationType,\n} from \"../../../front/assistant/actions/dust_app_run\";\nimport {\n  GithubCreateIssueConfigurationType,\n  GithubGetPullRequestConfigurationType,\n} from \"../../../front/assistant/actions/github\";\nimport { BaseAction } from \"../../../front/assistant/actions/index\";\nimport {\n  ProcessActionType,\n  ProcessConfigurationType,\n} from \"../../../front/assistant/actions/process\";\nimport { ReasoningConfigurationType } from \"../../../front/assistant/actions/reasoning\";\nimport {\n  RetrievalActionType,\n  RetrievalConfigurationType,\n} from \"../../../front/assistant/actions/retrieval\";\nimport {\n  TablesQueryActionType,\n  TablesQueryConfigurationType,\n} from \"../../../front/assistant/actions/tables_query\";\nimport {\n  WebsearchActionType,\n  WebsearchConfigurationType,\n} from \"../../../front/assistant/actions/websearch\";\nimport {\n  AgentConfigurationType,\n  TemplateAgentConfigurationType,\n} from \"../../../front/assistant/agent\";\nimport { AgentActionType } from \"../../../front/assistant/conversation\";\nimport { SearchLabelsConfigurationType } from \"./search_labels\";\n\nexport function isTablesQueryConfiguration(\n  arg: unknown\n): arg is TablesQueryConfigurationType {\n  return (\n    !!arg &&\n    typeof arg === \"object\" &&\n    \"type\" in arg &&\n    arg.type === \"tables_query_configuration\"\n  );\n}\n\nexport function isTablesQueryActionType(\n  arg: AgentActionType\n): arg is TablesQueryActionType {\n  return arg.type === \"tables_query_action\";\n}\n\nexport function isDustAppRunConfiguration(\n  arg: unknown\n): arg is DustAppRunConfigurationType {\n  return (\n    !!arg &&\n    typeof arg === \"object\" &&\n    \"type\" in arg &&\n    arg.type === \"dust_app_run_configuration\"\n  );\n}\n\n// TODO(2024-05-14 flav) Refactor for better separation of concerns in the front-end.\nexport function isDustAppRunActionType(\n  arg: AgentActionType\n): arg is DustAppRunActionType {\n  return arg.type === \"dust_app_run_action\";\n}\n\n// This is temporary until we refactor all action to this class structure.\nexport function isBaseActionClass(action: unknown): action is BaseAction {\n  return action instanceof BaseAction;\n}\n\nexport function isRetrievalConfiguration(\n  arg: unknown\n): arg is RetrievalConfigurationType {\n  return (\n    !!arg &&\n    typeof arg === \"object\" &&\n    \"type\" in arg &&\n    arg.type === \"retrieval_configuration\"\n  );\n}\n\nexport function isRetrievalActionType(\n  arg: AgentActionType\n): arg is RetrievalActionType {\n  return arg.type === \"retrieval_action\";\n}\n\nexport function isProcessConfiguration(\n  arg: unknown\n): arg is ProcessConfigurationType {\n  return (\n    !!arg &&\n    typeof arg === \"object\" &&\n    \"type\" in arg &&\n    arg.type === \"process_configuration\"\n  );\n}\n\nexport function isProcessActionType(\n  arg: AgentActionType\n): arg is ProcessActionType {\n  return arg.type === \"process_action\";\n}\n\nexport function isWebsearchConfiguration(\n  arg: unknown\n): arg is WebsearchConfigurationType {\n  return (\n    !!arg &&\n    typeof arg === \"object\" &&\n    \"type\" in arg &&\n    arg.type === \"websearch_configuration\"\n  );\n}\n\nexport function isSearchLabelsConfiguration(\n  arg: unknown\n): arg is SearchLabelsConfigurationType {\n  return (\n    !!arg &&\n    typeof arg === \"object\" &&\n    \"type\" in arg &&\n    arg.type === \"search_labels_configuration\"\n  );\n}\n\nexport function isReasoningConfiguration(\n  arg: unknown\n): arg is ReasoningConfigurationType {\n  return (\n    !!arg &&\n    typeof arg === \"object\" &&\n    \"type\" in arg &&\n    arg.type === \"reasoning_configuration\"\n  );\n}\n\nexport function isWebsearchActionType(\n  arg: AgentActionType\n): arg is WebsearchActionType {\n  return arg.type === \"websearch_action\";\n}\n\nexport function isBrowseConfiguration(\n  arg: unknown\n): arg is BrowseConfigurationType {\n  return (\n    !!arg &&\n    typeof arg === \"object\" &&\n    \"type\" in arg &&\n    arg.type === \"browse_configuration\"\n  );\n}\n\nexport function isBrowseActionType(\n  arg: AgentActionType\n): arg is BrowseActionType {\n  return arg.type === \"browse_action\";\n}\n\nexport function isGithubGetPullRequestConfiguration(\n  arg: unknown\n): arg is GithubGetPullRequestConfigurationType {\n  return (\n    !!arg &&\n    typeof arg === \"object\" &&\n    \"type\" in arg &&\n    arg.type === \"github_get_pull_request_configuration\"\n  );\n}\n\nexport function isGithubGetPullRequestActionType(\n  arg: AgentActionType\n): arg is BrowseActionType {\n  return arg.type === \"github_get_pull_request_action\";\n}\n\nexport function isGithubCreateIssueConfiguration(\n  arg: unknown\n): arg is GithubCreateIssueConfigurationType {\n  return (\n    !!arg &&\n    typeof arg === \"object\" &&\n    \"type\" in arg &&\n    arg.type === \"github_create_issue_configuration\"\n  );\n}\n\nexport function isGithubCreateIssueActionType(\n  arg: AgentActionType\n): arg is BrowseActionType {\n  return arg.type === \"github_create_issue_action\";\n}\n\nexport function isConversationIncludeFileConfiguration(\n  arg: unknown\n): arg is ConversationIncludeFileConfigurationType {\n  return (\n    !!arg &&\n    typeof arg === \"object\" &&\n    \"type\" in arg &&\n    arg.type === \"conversation_include_file_configuration\"\n  );\n}\n\nexport function isConversationIncludeFileConfigurationActionType(\n  arg: AgentActionType\n): arg is ConversationIncludeFileActionType {\n  return arg.type === \"conversation_include_file_action\";\n}\n\nexport function throwIfInvalidAgentConfiguration(\n  configation: AgentConfigurationType | TemplateAgentConfigurationType\n) {\n  configation.actions.forEach((action) => {\n    if (isProcessConfiguration(action)) {\n      if (\n        action.relativeTimeFrame === \"auto\" ||\n        action.relativeTimeFrame === \"none\"\n      ) {\n        /** Should never happen as not permitted for now. */\n        throw new Error(\n          \"Invalid configuration: process must have a definite time frame\"\n        );\n      }\n    }\n  });\n\n  const templateConfiguration = configation as TemplateAgentConfigurationType; // Creation\n  const agentConfiguration = configation as AgentConfigurationType; // Edition\n\n  if (templateConfiguration) {\n    if (templateConfiguration.scope === \"global\") {\n      throw new Error(\"Cannot create global agent\");\n    }\n  }\n\n  if (agentConfiguration) {\n    if (agentConfiguration.scope === \"global\") {\n      throw new Error(\"Cannot edit global agent\");\n    }\n\n    if (agentConfiguration.status === \"archived\") {\n      throw new Error(\"Cannot edit archived agent\");\n    }\n  }\n}\n","import { DustAppParameters } from \"../../../front/assistant/actions/dust_app_run\";\nimport { BaseAction } from \"../../../front/assistant/actions/index\";\nimport { ModelId } from \"../../../shared/model_id\";\n\nexport type TablesQueryConfigurationType = {\n  description: string | null;\n  id: ModelId;\n  name: string;\n  sId: string;\n  tables: TableDataSourceConfiguration[];\n  type: \"tables_query_configuration\";\n};\n\nexport type TableDataSourceConfiguration = {\n  workspaceId: string;\n  dataSourceViewId: string;\n  tableId: string;\n};\n\nexport interface TablesQueryActionType extends BaseAction {\n  id: ModelId;\n  params: DustAppParameters;\n  output: Record<string, string | number | boolean> | null;\n  resultsFileId: string | null;\n  resultsFileSnippet: string | null;\n  sectionFileId: string | null;\n  functionCallId: string | null;\n  functionCallName: string | null;\n  agentMessageId: ModelId;\n  step: number;\n  type: \"tables_query_action\";\n}\n\nexport function getTablesQueryResultsFileTitle({\n  output,\n}: {\n  output: Record<string, unknown> | null;\n}): string {\n  return typeof output?.query_title === \"string\"\n    ? output.query_title\n    : \"query_results\";\n}\n\nexport function getTablesQueryResultsFileAttachments({\n  resultsFileId,\n  resultsFileSnippet,\n  sectionFileId,\n  output,\n}: {\n  resultsFileId: string | null;\n  resultsFileSnippet: string | null;\n  sectionFileId: string | null;\n  output: Record<string, unknown> | null;\n}): string | null {\n  if (!resultsFileId || !resultsFileSnippet) {\n    return null;\n  }\n\n  const fileTitle = getTablesQueryResultsFileTitle({ output });\n\n  const resultsFileAttachment =\n    `<file ` +\n    `id=\"${resultsFileId}\" type=\"text/csv\" title=\"${fileTitle}\">\\n${resultsFileSnippet}\\n</file>`;\n\n  let sectionFileAttachment = \"\";\n  if (sectionFileId) {\n    sectionFileAttachment =\n      `\\n<file ` +\n      `id=\"${sectionFileId}\" type=\"application/vnd.dust.section.json\" title=\"${fileTitle} (Results optimized for search)\" />`;\n  }\n\n  return `${resultsFileAttachment}${sectionFileAttachment}`;\n}\n\n/**\n * TablesQuey Events\n */\n\nexport type TablesQueryErrorEvent = {\n  type: \"tables_query_error\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n  error: {\n    code: \"tables_query_error\" | \"too_many_result_rows\";\n    message: string;\n  };\n};\n\nexport type TablesQueryStartedEvent = {\n  type: \"tables_query_started\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n  action: TablesQueryActionType;\n};\n\nexport type TablesQueryModelOutputEvent = {\n  type: \"tables_query_model_output\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n  action: TablesQueryActionType;\n};\n\nexport type TablesQueryOutputEvent = {\n  type: \"tables_query_output\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n  action: TablesQueryActionType;\n};\n","import * as t from \"io-ts\";\n\nimport { BaseAction } from \"../../../front/assistant/actions\";\nimport { ModelId } from \"../../../shared/model_id\";\n\nexport type WebsearchConfigurationType = {\n  id: ModelId;\n  sId: string;\n\n  type: \"websearch_configuration\";\n\n  name: string;\n  description: string | null;\n};\n\n// Type fresh out from the Dust app\nconst WebsearchAppResultSchema = t.type({\n  title: t.string,\n  snippet: t.string,\n  link: t.string,\n});\nexport const WebsearchAppActionOutputSchema = t.union([\n  t.type({\n    results: t.array(WebsearchAppResultSchema),\n  }),\n  t.type({\n    error: t.string,\n    results: t.array(WebsearchAppResultSchema),\n  }),\n]);\n// Type after processing in the run loop (to add references)\nconst WebsearchResultSchema = t.type({\n  title: t.string,\n  snippet: t.string,\n  link: t.string,\n  reference: t.string,\n});\nexport const WebsearchActionOutputSchema = t.union([\n  t.type({\n    results: t.array(WebsearchResultSchema),\n  }),\n  t.type({\n    results: t.array(WebsearchResultSchema),\n    error: t.string,\n  }),\n]);\n\nexport type WebsearchActionOutputType = t.TypeOf<\n  typeof WebsearchActionOutputSchema\n>;\n\nexport type WebsearchResultType = t.TypeOf<typeof WebsearchResultSchema>;\n\nexport interface WebsearchActionType extends BaseAction {\n  agentMessageId: ModelId;\n  query: string;\n  output: WebsearchActionOutputType | null;\n  functionCallId: string | null;\n  functionCallName: string | null;\n  step: number;\n  type: \"websearch_action\";\n}\n\n/**\n * WebSearch Action Events\n */\n\n// Event sent before the execution with the finalized params to be used.\nexport type WebsearchParamsEvent = {\n  type: \"websearch_params\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n  action: WebsearchActionType;\n};\n\nexport type WebsearchErrorEvent = {\n  type: \"websearch_error\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n  error: {\n    code: string;\n    message: string;\n  };\n};\n\nexport type WebsearchSuccessEvent = {\n  type: \"websearch_success\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n  action: WebsearchActionType;\n};\n","const TAILWIND_COLOR_NAMES = [\n  \"pink\",\n  \"rose\",\n  \"red\",\n  \"orange\",\n  \"amber\",\n  \"yellow\",\n  \"lime\",\n  \"green\",\n  \"emerald\",\n  \"teal\",\n  \"cyan\",\n  \"sky\",\n  \"blue\",\n  \"indigo\",\n  \"violet\",\n  \"purple\",\n  \"fuchsia\",\n];\nconst TAILWIND_COLOR_SHADES = [\n  \"100\",\n  \"200\",\n  \"300\",\n  \"400\",\n  \"500\",\n  \"600\",\n  \"700\",\n  \"800\",\n];\n\nexport const generateTailwindBackgroundColors = (): string[] => {\n  const tailwindColors: string[] = [];\n  TAILWIND_COLOR_NAMES.forEach((color) => {\n    TAILWIND_COLOR_SHADES.forEach((shade) => {\n      tailwindColors.push(`bg-${color}-${shade}`);\n    });\n  });\n  return tailwindColors;\n};\n","import { ioTsEnum } from \"../../shared/utils/iots_utils\";\n\nexport const ASSISTANT_CREATIVITY_LEVELS = [\n  \"deterministic\",\n  \"factual\",\n  \"balanced\",\n  \"creative\",\n] as const;\nexport type AssistantCreativityLevel =\n  (typeof ASSISTANT_CREATIVITY_LEVELS)[number];\nexport const AssistantCreativityLevelCodec = ioTsEnum<AssistantCreativityLevel>(\n  ASSISTANT_CREATIVITY_LEVELS,\n  \"AssistantCreativityLevel\"\n);\nexport const ASSISTANT_CREATIVITY_LEVEL_DISPLAY_NAMES = {\n  deterministic: \"Deterministic\",\n  factual: \"Factual\",\n  balanced: \"Balanced\",\n  creative: \"Creative\",\n} as const;\nexport const ASSISTANT_CREATIVITY_LEVEL_TEMPERATURES: Record<\n  AssistantCreativityLevel,\n  number\n> = {\n  deterministic: 0.0,\n  factual: 0.2,\n  balanced: 0.7,\n  creative: 1.0,\n};\n\nexport const ASSISTANT_BUILDER_DRAWER_TABS = [\n  \"Template\",\n  \"Preview\",\n  \"Performance\",\n] as const;\n\nexport type AssistantBuilderRightPanelTab =\n  (typeof ASSISTANT_BUILDER_DRAWER_TABS)[number];\n\nexport type AssistantBuilderRightPanelStatus = {\n  openedAt: number | null;\n  tab: AssistantBuilderRightPanelTab | null;\n};\n","import { BrowseActionType } from \"../../front/assistant/actions/browse\";\nimport { ConversationIncludeFileActionType } from \"../../front/assistant/actions/conversation/include_file\";\nimport { ConversationListFilesActionType } from \"../../front/assistant/actions/conversation/list_files\";\nimport { DustAppRunActionType } from \"../../front/assistant/actions/dust_app_run\";\nimport {\n  GithubCreateIssueActionType,\n  GithubGetPullRequestActionType,\n} from \"../../front/assistant/actions/github\";\nimport { ProcessActionType } from \"../../front/assistant/actions/process\";\nimport { ReasoningActionType } from \"../../front/assistant/actions/reasoning\";\nimport { RetrievalActionType } from \"../../front/assistant/actions/retrieval\";\nimport { TablesQueryActionType } from \"../../front/assistant/actions/tables_query\";\nimport { WebsearchActionType } from \"../../front/assistant/actions/websearch\";\nimport { LightAgentConfigurationType } from \"../../front/assistant/agent\";\nimport { UserType, WorkspaceType } from \"../../front/user\";\nimport { ModelId } from \"../../shared/model_id\";\nimport { ContentFragmentType } from \"../content_fragment\";\nimport { SearchLabelsActionType } from \"./actions/search_labels\";\n\n/**\n * Mentions\n */\n\nexport type AgentMention = {\n  configurationId: string;\n};\n\nexport type MentionType = AgentMention;\n\nexport type MessageVisibility = \"visible\" | \"deleted\";\n\nexport function isAgentMention(arg: MentionType): arg is AgentMention {\n  return (arg as AgentMention).configurationId !== undefined;\n}\n\nexport type ConversationMessageReactions = {\n  messageId: string;\n  reactions: MessageReactionType[];\n}[];\n\nexport type MessageReactionType = {\n  emoji: string;\n  users: {\n    userId: ModelId | null;\n    username: string;\n    fullName: string | null;\n  }[];\n};\n\nexport type MessageType =\n  | AgentMessageType\n  | UserMessageType\n  | ContentFragmentType;\n\nexport type MessageWithContentFragmentsType =\n  | AgentMessageType\n  | (UserMessageType & {\n      contenFragments?: ContentFragmentType[];\n    });\n\nexport type WithRank<T> = T & {\n  rank: number;\n};\nexport type MessageWithRankType = WithRank<MessageType>;\n\n/**\n * User messages\n */\n\nexport type UserMessageOrigin =\n  | \"slack\"\n  | \"web\"\n  | \"api\"\n  | \"email\"\n  | \"gsheet\"\n  | \"zapier\"\n  | \"n8n\"\n  | \"make\"\n  | \"zendesk\"\n  | \"raycast\"\n  | \"github-copilot-chat\"\n  | \"extension\"\n  | \"email\";\n\nexport type UserMessageContext = {\n  username: string;\n  timezone: string;\n  fullName: string | null;\n  email: string | null;\n  profilePictureUrl: string | null;\n  origin?: UserMessageOrigin | null;\n};\n\nexport type UserMessageType = {\n  id: ModelId;\n  created: number;\n  type: \"user_message\";\n  sId: string;\n  visibility: MessageVisibility;\n  version: number;\n  user: UserType | null;\n  mentions: MentionType[];\n  content: string;\n  context: UserMessageContext;\n};\nexport type UserMessageWithRankType = WithRank<UserMessageType>;\n\nexport function isUserMessageType(arg: MessageType): arg is UserMessageType {\n  return arg.type === \"user_message\";\n}\n\n/**\n * Agent messages\n */\nexport type ConfigurableAgentActionType =\n  | RetrievalActionType\n  | DustAppRunActionType\n  | TablesQueryActionType\n  | ProcessActionType\n  | WebsearchActionType\n  | BrowseActionType\n  | ReasoningActionType;\n\nexport type ConversationAgentActionType =\n  | ConversationListFilesActionType\n  | ConversationIncludeFileActionType;\n\nexport type GithubAgentActionType =\n  | GithubGetPullRequestActionType\n  | GithubCreateIssueActionType;\n\nexport type AgentActionType =\n  | ConfigurableAgentActionType\n  | ConversationAgentActionType\n  | GithubAgentActionType\n  | SearchLabelsActionType;\n\nexport type AgentMessageStatus =\n  | \"created\"\n  | \"succeeded\"\n  | \"failed\"\n  | \"cancelled\";\n\nexport const ACTION_RUNNING_LABELS: Record<AgentActionType[\"type\"], string> = {\n  browse_action: \"Browsing page\",\n  conversation_include_file_action: \"Reading file\",\n  conversation_list_files_action: \"Listing files\",\n  dust_app_run_action: \"Running App\",\n  github_create_issue_action: \"Creating issue\",\n  github_get_pull_request_action: \"Retrieving pull request\",\n  process_action: \"Extracting data\",\n  reasoning_action: \"Reasoning\",\n  retrieval_action: \"Searching data\",\n  search_labels_action: \"Searching labels\",\n  tables_query_action: \"Querying tables\",\n  websearch_action: \"Searching the web\",\n};\n\n/**\n * Both `action` and `message` are optional (we could have a no-op agent basically).\n *\n * Since `action` and `message` are bundled together, it means that we will only be able to retry\n * them together in case of error of either. We store an error only here whether it's an error\n * coming from the action or from the message generation.\n */\nexport type AgentMessageType = {\n  id: ModelId;\n  agentMessageId: ModelId;\n  created: number;\n  type: \"agent_message\";\n  sId: string;\n  visibility: MessageVisibility;\n  version: number;\n  parentMessageId: string | null;\n  configuration: LightAgentConfigurationType;\n  status: AgentMessageStatus;\n  actions: AgentActionType[];\n  content: string | null;\n  chainOfThought: string | null;\n  rawContents: Array<{\n    step: number;\n    content: string;\n  }>;\n  error: {\n    code: string;\n    message: string;\n  } | null;\n};\n\nexport type AgentMessageWithRankType = WithRank<AgentMessageType>;\n\nexport function isAgentMessageType(arg: MessageType): arg is AgentMessageType {\n  return arg.type === \"agent_message\";\n}\n\n/**\n * Conversations\n */\n\n/**\n * Visibility of a conversation. Test visibility is for conversations happening\n * when a user 'tests' an agent not in their list using the \"test\" button:\n * those conversations do not show in users' histories.\n */\nexport type ConversationVisibility =\n  | \"unlisted\"\n  | \"workspace\"\n  | \"deleted\"\n  | \"test\";\n\n/**\n * A lighter version of Conversation without the content (for menu display).\n */\nexport type ConversationWithoutContentType = {\n  id: ModelId;\n  created: number;\n  updated?: number;\n  owner: WorkspaceType;\n  sId: string;\n  title: string | null;\n  visibility: ConversationVisibility;\n  requestedGroupIds: string[][];\n\n  // TODO(2025-01-15) `groupId` clean-up. Remove once Chrome extension uses optional.\n  groupIds?: string[];\n};\n\n/**\n * content [][] structure is intended to allow retries (of agent messages) or edits (of user\n * messages).\n */\nexport type ConversationType = ConversationWithoutContentType & {\n  content: (UserMessageType[] | AgentMessageType[] | ContentFragmentType[])[];\n};\n\nexport type UserParticipant = {\n  username: string;\n  fullName: string | null;\n  pictureUrl: string | null;\n};\nexport type AgentParticipant = {\n  configurationId: string;\n  name: string;\n  pictureUrl: string | null;\n};\n\nexport type ParticipantActionType = \"posted\" | \"reacted\" | \"subscribed\";\n\n/**\n * Conversation participants.\n */\n\nexport interface AgentParticipantType {\n  configurationId: string;\n  name: string;\n  pictureUrl: string;\n}\n\nexport interface UserParticipantType {\n  fullName: string | null;\n  pictureUrl: string | null;\n  username: string;\n}\n\nexport interface ConversationParticipantsType {\n  agents: AgentParticipant[];\n  users: UserParticipant[];\n}\n\nexport type ConversationErrorType =\n  | \"conversation_not_found\"\n  | \"conversation_access_restricted\"\n  | \"conversation_with_unavailable_agent\";\n\nexport class ConversationError extends Error {\n  readonly type: ConversationErrorType;\n\n  constructor(type: ConversationErrorType) {\n    super(`Cannot access conversation: ${type}`);\n    this.type = type;\n  }\n}\n\nexport type SubmitMessageError = {\n  type:\n    | \"user_not_found\"\n    | \"attachment_upload_error\"\n    | \"message_send_error\"\n    | \"plan_limit_reached_error\"\n    | \"content_too_large\";\n  title: string;\n  message: string;\n};\n\nexport interface FetchConversationMessagesResponse {\n  hasMore: boolean;\n  lastValue: number | null;\n  messages: MessageWithRankType[];\n}\n\n/**\n * Conversation events.\n */\n\n// Event sent when the user message is created.\nexport type UserMessageNewEvent = {\n  type: \"user_message_new\";\n  created: number;\n  messageId: string;\n  message: UserMessageWithRankType;\n};\n\n// Event sent when the user message is created.\nexport type UserMessageErrorEvent = {\n  type: \"user_message_error\";\n  created: number;\n  error: {\n    code: string;\n    message: string;\n  };\n};\n\n// Event sent when a new message is created (empty) and the agent is about to be executed.\nexport type AgentMessageNewEvent = {\n  type: \"agent_message_new\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n  message: AgentMessageWithRankType;\n};\n\n// Event sent when the conversation title is updated.\nexport type ConversationTitleEvent = {\n  type: \"conversation_title\";\n  created: number;\n  title: string;\n};\n","import * as t from \"io-ts\";\nimport { nonEmptyArray } from \"io-ts-types/lib/nonEmptyArray\";\nimport { NonEmptyString } from \"io-ts-types/lib/NonEmptyString\";\n\nimport { ioTsEnum } from \"../../shared/utils/iots_utils\";\nimport { TimeframeUnitCodec } from \"./actions/retrieval\";\nimport { AssistantCreativityLevelCodec } from \"./builder\";\n\n// TAGS\n\nexport const TEMPLATES_TAG_CODES = [\n  \"CONTENT\",\n  \"DATA\",\n  \"DESIGN\",\n  \"ENGINEERING\",\n  \"FINANCE\",\n  \"HIRING\",\n  \"KNOWLEDGE\",\n  \"MARKETING\",\n  \"OPERATIONS\",\n  \"PRODUCT\",\n  \"PRODUCT_MANAGEMENT\",\n  \"PRODUCTIVITY\",\n  \"SALES\",\n  \"UX_DESIGN\",\n  \"UX_RESEARCH\",\n  \"WRITING\",\n] as const;\nexport type TemplateTagCodeType = (typeof TEMPLATES_TAG_CODES)[number];\n\nexport type TemplateTagsType = Record<\n  TemplateTagCodeType,\n  {\n    label: string;\n  }\n>;\n\nexport const TEMPLATES_TAGS_CONFIG: TemplateTagsType = {\n  CONTENT: {\n    label: \"Content\",\n  },\n  DATA: {\n    label: \"Data\",\n  },\n  DESIGN: {\n    label: \"Design\",\n  },\n  ENGINEERING: {\n    label: \"Engineering\",\n  },\n  FINANCE: {\n    label: \"Finance\",\n  },\n  HIRING: {\n    label: \"Hiring\",\n  },\n  KNOWLEDGE: {\n    label: \"Knowledge\",\n  },\n  MARKETING: {\n    label: \"Marketing\",\n  },\n  OPERATIONS: {\n    label: \"Operations\",\n  },\n  PRODUCT: {\n    label: \"Product\",\n  },\n  PRODUCT_MANAGEMENT: {\n    label: \"Product Management\",\n  },\n  PRODUCTIVITY: {\n    label: \"Productivity\",\n  },\n  SALES: {\n    label: \"Sales\",\n  },\n  UX_DESIGN: {\n    label: \"UX Design\",\n  },\n  UX_RESEARCH: {\n    label: \"UX Research\",\n  },\n  WRITING: {\n    label: \"Writing\",\n  },\n};\n\nexport function isTemplateTagCodeArray(\n  value: unknown\n): value is TemplateTagCodeType[] {\n  return (\n    Array.isArray(value) && value.every((v) => TEMPLATES_TAG_CODES.includes(v))\n  );\n}\n\nconst TemplateTagCodeTypeCodec = t.keyof({\n  ...TEMPLATES_TAGS_CONFIG,\n});\n\n// MULTI ACTION MODE\n\ntype MultiActionType =\n  | \"RETRIEVAL_SEARCH\"\n  | \"DUST_APP_RUN\"\n  | \"TABLES_QUERY\"\n  | \"PROCESS\"\n  | \"WEB_NAVIGATION\";\nexport const MULTI_ACTION_PRESETS: Record<MultiActionType, string> = {\n  DUST_APP_RUN: \"Run Dust app\",\n  RETRIEVAL_SEARCH: \"Search data sources\",\n  TABLES_QUERY: \"Query tables\",\n  PROCESS: \"Extract data\",\n  WEB_NAVIGATION: \"Web navigation\",\n} as const;\nexport type MultiActionPreset = keyof typeof MULTI_ACTION_PRESETS;\nexport const MultiActionPresetCodec = ioTsEnum<MultiActionPreset>(\n  Object.keys(MULTI_ACTION_PRESETS),\n  \"MultiActionPreset\"\n);\nconst TemplateActionTypePreset = t.type({\n  type: MultiActionPresetCodec,\n  name: NonEmptyString,\n  description: NonEmptyString,\n  help: NonEmptyString,\n});\nconst TemplateActionsPreset = t.array(TemplateActionTypePreset);\n\n// VISIBILITY\n\nexport const TEMPLATE_VISIBILITIES = [\n  \"draft\",\n  \"published\",\n  \"disabled\",\n] as const;\nexport type TemplateVisibility = (typeof TEMPLATE_VISIBILITIES)[number];\nexport const TemplateVisibilityCodec = ioTsEnum<TemplateVisibility>(\n  TEMPLATE_VISIBILITIES,\n  \"TemplateVisibility\"\n);\n\n// FORM SCHEMA\n\nexport const CreateTemplateFormSchema = t.type({\n  backgroundColor: NonEmptyString,\n  description: t.union([t.string, t.undefined]),\n  emoji: NonEmptyString,\n  handle: NonEmptyString,\n  timeFrameDuration: t.union([t.string, t.undefined]),\n  timeFrameUnit: t.union([TimeframeUnitCodec, t.literal(\"\"), t.undefined]),\n  helpActions: t.union([t.string, t.undefined]),\n  helpInstructions: t.union([t.string, t.undefined]),\n  presetActions: TemplateActionsPreset,\n  presetInstructions: t.union([t.string, t.undefined]),\n  presetModelId: t.string,\n  presetTemperature: AssistantCreativityLevelCodec,\n  tags: nonEmptyArray(TemplateTagCodeTypeCodec),\n  visibility: TemplateVisibilityCodec,\n});\n\nexport type CreateTemplateFormType = t.TypeOf<typeof CreateTemplateFormSchema>;\n","// This defines the commands that the iframe can send to the host window.\n\n// Common base interface.\ninterface VisualizationRPCRequestBase {\n  identifier: string;\n  messageUniqueId: string;\n}\n\n// Define parameter types for each command.\n\ninterface GetFileParams {\n  fileId: string;\n}\n\ninterface SetContentHeightParams {\n  height: number;\n}\n\ninterface DownloadFileRequestParams {\n  blob: Blob;\n  filename?: string;\n}\n\ninterface setErrorMessageParams {\n  errorMessage: string;\n}\n\n// Define a mapped type to extend the base with specific parameters.\nexport type VisualizationRPCRequestMap = {\n  getFile: GetFileParams;\n  getCodeToExecute: null;\n  setContentHeight: SetContentHeightParams;\n  setErrorMessage: setErrorMessageParams;\n  downloadFileRequest: DownloadFileRequestParams;\n  displayCode: null;\n};\n\n// Derive the command type from the keys of the request map\nexport type VisualizationRPCCommand = keyof VisualizationRPCRequestMap;\n\n// Create a union type for requests based on the mapped type.\nexport type VisualizationRPCRequest = {\n  [K in VisualizationRPCCommand]: VisualizationRPCRequestBase & {\n    command: K;\n    params: VisualizationRPCRequestMap[K];\n  };\n}[VisualizationRPCCommand];\n\nexport const validCommands: VisualizationRPCCommand[] = [\n  \"getFile\",\n  \"getCodeToExecute\",\n  \"setContentHeight\",\n  \"setErrorMessage\",\n];\n\n// Command results.\n\nexport interface CommandResultMap {\n  getCodeToExecute: { code: string };\n  getFile: { fileBlob: Blob | null };\n  downloadFileRequest: { blob: Blob; filename?: string };\n  setContentHeight: void;\n  setErrorMessage: void;\n  displayCode: void;\n}\n\n// TODO(@fontanierh): refactor all these guards to use io-ts instead of manual checks.\n\n// Type guard for getFile.\nexport function isGetFileRequest(\n  value: unknown\n): value is VisualizationRPCRequest & {\n  command: \"getFile\";\n  params: GetFileParams;\n} {\n  if (typeof value !== \"object\" || value === null) {\n    return false;\n  }\n\n  const v = value as Partial<VisualizationRPCRequest>;\n\n  return (\n    v.command === \"getFile\" &&\n    typeof v.identifier === \"string\" &&\n    typeof v.messageUniqueId === \"string\" &&\n    typeof v.params === \"object\" &&\n    v.params !== null &&\n    typeof (v.params as GetFileParams).fileId === \"string\"\n  );\n}\n\n// Type guard for getCodeToExecute.\nexport function isGetCodeToExecuteRequest(\n  value: unknown\n): value is VisualizationRPCRequest & {\n  command: \"getCodeToExecute\";\n  params: null;\n} {\n  if (typeof value !== \"object\" || value === null) {\n    return false;\n  }\n\n  const v = value as Partial<VisualizationRPCRequest>;\n\n  return (\n    v.command === \"getCodeToExecute\" &&\n    typeof v.identifier === \"string\" &&\n    typeof v.messageUniqueId === \"string\"\n  );\n}\n\n// Type guard for setContentHeight.\nexport function isSetContentHeightRequest(\n  value: unknown\n): value is VisualizationRPCRequest & {\n  command: \"setContentHeight\";\n  params: SetContentHeightParams;\n} {\n  if (typeof value !== \"object\" || value === null) {\n    return false;\n  }\n\n  const v = value as Partial<VisualizationRPCRequest>;\n\n  return (\n    v.command === \"setContentHeight\" &&\n    typeof v.identifier === \"string\" &&\n    typeof v.messageUniqueId === \"string\" &&\n    typeof v.params === \"object\" &&\n    v.params !== null &&\n    typeof (v.params as SetContentHeightParams).height === \"number\"\n  );\n}\n\nexport function isSetErrorMessageRequest(\n  value: unknown\n): value is VisualizationRPCRequest & {\n  command: \"setErrorMessage\";\n} {\n  if (typeof value !== \"object\" || value === null) {\n    return false;\n  }\n\n  const v = value as Partial<VisualizationRPCRequest>;\n\n  return (\n    v.command === \"setErrorMessage\" &&\n    typeof v.identifier === \"string\" &&\n    typeof v.messageUniqueId === \"string\"\n  );\n}\n\nexport function isDownloadFileRequest(\n  value: unknown\n): value is VisualizationRPCRequest & {\n  command: \"downloadFileRequest\";\n  params: DownloadFileRequestParams;\n} {\n  if (typeof value !== \"object\" || value === null) {\n    return false;\n  }\n\n  const v = value as Partial<VisualizationRPCRequest>;\n\n  return (\n    v.command === \"downloadFileRequest\" &&\n    typeof v.identifier === \"string\" &&\n    typeof v.messageUniqueId === \"string\" &&\n    typeof v.params === \"object\" &&\n    v.params !== null &&\n    (v.params as DownloadFileRequestParams).blob instanceof Blob\n  );\n}\n\n// Type guard for getCodeToExecute.\nexport function isDisplayCodeRequest(\n  value: unknown\n): value is VisualizationRPCRequest & {\n  command: \"displayCode\";\n  params: null;\n} {\n  if (typeof value !== \"object\" || value === null) {\n    return false;\n  }\n\n  const v = value as Partial<VisualizationRPCRequest>;\n\n  return (\n    v.command === \"displayCode\" &&\n    typeof v.identifier === \"string\" &&\n    typeof v.messageUniqueId === \"string\"\n  );\n}\n\nexport function isVisualizationRPCRequest(\n  value: unknown\n): value is VisualizationRPCRequest {\n  if (typeof value !== \"object\" || value === null) {\n    return false;\n  }\n\n  return (\n    isGetCodeToExecuteRequest(value) ||\n    isGetFileRequest(value) ||\n    isDownloadFileRequest(value) ||\n    isSetContentHeightRequest(value) ||\n    isSetErrorMessageRequest(value) ||\n    isDisplayCodeRequest(value)\n  );\n}\n","import { ModelId } from \"../shared/model_id\";\nimport { Err, Ok, Result } from \"../shared/result\";\nimport { DataSourceViewType } from \"./data_source_view\";\nimport { ConnectorType } from \"./lib/connectors_api\";\n\nexport const CONNECTOR_PROVIDERS = [\n  \"confluence\",\n  \"github\",\n  \"google_drive\",\n  \"intercom\",\n  \"notion\",\n  \"slack\",\n  \"microsoft\",\n  \"webcrawler\",\n  \"snowflake\",\n  \"zendesk\",\n  \"bigquery\",\n  \"salesforce\",\n  \"gong\",\n] as const;\n\nexport type ConnectorProvider = (typeof CONNECTOR_PROVIDERS)[number];\n\nexport function isConnectorProvider(val: string): val is ConnectorProvider {\n  return (CONNECTOR_PROVIDERS as unknown as string[]).includes(val);\n}\n\nexport type EditedByUser = {\n  editedAt: number | null;\n  fullName: string | null;\n  imageUrl: string | null;\n  email: string | null;\n  userId: string | null;\n};\n\nexport type DataSourceType = {\n  id: ModelId;\n  sId: string;\n  createdAt: number;\n  name: string;\n  description: string | null;\n  assistantDefaultSelected: boolean;\n  dustAPIProjectId: string;\n  dustAPIDataSourceId: string;\n  connectorId: string | null;\n  connectorProvider: ConnectorProvider | null;\n  editedByUser?: EditedByUser | null;\n};\n\nexport type WithConnector = {\n  connectorProvider: ConnectorProvider;\n  connectorId: string;\n};\n\nexport type ConnectorStatusDetails = {\n  connector: ConnectorType | null;\n  fetchConnectorError: boolean;\n  fetchConnectorErrorMessage: string | null;\n};\n\nexport type DataSourceWithConnectorDetailsType = DataSourceType &\n  WithConnector &\n  ConnectorStatusDetails;\n\nexport type DataSourceWithAgentsUsageType = {\n  count: number;\n  agentNames: string[];\n};\n\nexport function isDataSourceNameValid(name: string): Result<void, string> {\n  const trimmed = name.trim();\n  if (trimmed.length === 0) {\n    return new Err(\"DataSource name cannot be empty\");\n  }\n  if (name.startsWith(\"managed-\")) {\n    return new Err(\"DataSource name cannot start with the prefix `managed-`\");\n  }\n\n  return new Ok(undefined);\n}\n\nexport type TagSearchParams = {\n  query: string;\n  queryType: string;\n  dataSourceViews: DataSourceViewType[];\n};\n\nexport type DataSourceTag = {\n  tag: string;\n  dustAPIDataSourceId: string;\n  connectorProvider: ConnectorProvider | null;\n};\n","import { ModelId } from \"../shared/model_id\";\n\n/**\n * system group:\n * Accessible by no-one other than our system API keys.\n * Has access to the system Space which holds the connected data sources.\n *\n * global group:\n * Contains all users from the workspace.\n * Has access to the global Space which holds all existing datasource created before spaces.\n *\n * regular group:\n * Contains specific users added by workspace admins.\n * Has access to the list of spaces configured by workspace admins.\n */\nexport const GROUP_KINDS = [\"regular\", \"global\", \"system\"] as const;\nexport type GroupKind = (typeof GROUP_KINDS)[number];\n\nexport function isGroupKind(value: unknown): value is GroupKind {\n  return GROUP_KINDS.includes(value as GroupKind);\n}\nexport function isSystemGroupKind(value: GroupKind): boolean {\n  return value === \"system\";\n}\nexport function isGlobalGroupKind(value: GroupKind): boolean {\n  return value === \"global\";\n}\n\nexport function prettifyGroupName(group: GroupType) {\n  if (group.kind === \"global\") {\n    return \"Company Data\";\n  }\n  return group.name.replace(\"Group for Space \", \"\");\n}\n\nexport type GroupType = {\n  id: ModelId;\n  name: string;\n  sId: string;\n  kind: GroupKind;\n  workspaceId: ModelId;\n};\n\nconst DustGroupIdsHeader = \"X-Dust-Group-Ids\";\n\nexport function getGroupIdsFromHeaders(\n  headers: Record<string, string | string[] | undefined>\n): string[] | undefined {\n  const groupIds = headers[DustGroupIdsHeader.toLowerCase()];\n  if (typeof groupIds === \"string\" && groupIds.trim().length > 0) {\n    return groupIds.split(\",\").map((id) => id.trim());\n  } else {\n    return undefined;\n  }\n}\n\nexport function getHeaderFromGroupIds(groupIds: string[] | undefined) {\n  if (!groupIds) {\n    return undefined;\n  }\n\n  return {\n    [DustGroupIdsHeader]: groupIds.join(\",\"),\n  };\n}\n","import { isRight } from \"fp-ts/lib/Either\";\nimport * as t from \"io-ts\";\n\nexport const ActionResponseBaseSchema = t.type({\n  run_id: t.string,\n  created: t.Integer,\n  run_type: t.string,\n  config: t.UnknownRecord,\n  status: t.type({\n    run: t.string,\n    blocks: t.array(\n      t.type({\n        block_type: t.string,\n        name: t.string,\n        status: t.string,\n        success_count: t.Integer,\n        error_count: t.Integer,\n      })\n    ),\n  }),\n  traces: t.UnknownArray,\n  specification_hash: t.string,\n});\nexport type ActionResponseBase = t.TypeOf<typeof ActionResponseBaseSchema>;\nexport function isActionResponseBase(\n  response: unknown\n): response is ActionResponseBase {\n  return isRight(ActionResponseBaseSchema.decode(response));\n}\n","import { CredentialsType, ProviderType } from \"../../../front/provider\";\n\nconst {\n  DUST_MANAGED_ANTHROPIC_API_KEY = \"\",\n  DUST_MANAGED_AZURE_OPENAI_API_KEY = \"\",\n  DUST_MANAGED_AZURE_OPENAI_ENDPOINT = \"\",\n  DUST_MANAGED_OPENAI_API_KEY = \"\",\n  DUST_MANAGED_TEXTSYNTH_API_KEY = \"\",\n  DUST_MANAGED_MISTRAL_API_KEY = \"\",\n  DUST_MANAGED_GOOGLE_AI_STUDIO_API_KEY = \"\",\n  DUST_MANAGED_SERP_API_KEY = \"\",\n  DUST_MANAGED_BROWSERLESS_API_KEY = \"\",\n  DUST_MANAGED_TOGETHERAI_API_KEY = \"\",\n  DUST_MANAGED_DEEPSEEK_API_KEY = \"\",\n  DUST_MANAGED_FIREWORKS_API_KEY = \"\",\n} = process.env;\n\nexport const credentialsFromProviders = (\n  providers: ProviderType[]\n): CredentialsType => {\n  const credentials: CredentialsType = {};\n  providers.forEach((provider) => {\n    const config = JSON.parse(provider.config) as {\n      api_key?: string;\n      endpoint?: string;\n      service_account?: string;\n    };\n\n    switch (provider.providerId) {\n      case \"openai\":\n        credentials[\"OPENAI_API_KEY\"] = config.api_key;\n        break;\n      case \"cohere\":\n        credentials[\"COHERE_API_KEY\"] = config.api_key;\n        break;\n      case \"ai21\":\n        credentials[\"AI21_API_KEY\"] = config.api_key;\n        break;\n      case \"azure_openai\":\n        credentials[\"AZURE_OPENAI_API_KEY\"] = config.api_key;\n        credentials[\"AZURE_OPENAI_ENDPOINT\"] = config.endpoint;\n        break;\n      case \"anthropic\":\n        credentials[\"ANTHROPIC_API_KEY\"] = config.api_key;\n        break;\n      case \"mistral\":\n        credentials[\"MISTRAL_API_KEY\"] = config.api_key;\n        break;\n      case \"textsynth\":\n        credentials[\"TEXTSYNTH_API_KEY\"] = config.api_key;\n        break;\n      case \"serpapi\":\n        credentials[\"SERP_API_KEY\"] = config.api_key;\n        break;\n      case \"serper\":\n        credentials[\"SERPER_API_KEY\"] = config.api_key;\n        break;\n      case \"browserlessapi\":\n        credentials[\"BROWSERLESS_API_KEY\"] = config.api_key;\n        break;\n      case \"google_ai_studio\":\n        credentials[\"GOOGLE_AI_STUDIO_API_KEY\"] = config.api_key;\n        break;\n      case \"togetherai\":\n        credentials[\"TOGETHERAI_API_KEY\"] = config.api_key;\n        break;\n      case \"deepseek\":\n        credentials[\"DEEPSEEK_API_KEY\"] = config.api_key;\n        break;\n      case \"fireworks\":\n        credentials[\"FIREWORKS_API_KEY\"] = config.api_key;\n        break;\n    }\n  });\n  return credentials;\n};\n\nexport const dustManagedCredentials = (): CredentialsType => {\n  return {\n    ANTHROPIC_API_KEY: DUST_MANAGED_ANTHROPIC_API_KEY,\n    AZURE_OPENAI_API_KEY: DUST_MANAGED_AZURE_OPENAI_API_KEY,\n    AZURE_OPENAI_ENDPOINT: DUST_MANAGED_AZURE_OPENAI_ENDPOINT,\n    MISTRAL_API_KEY: DUST_MANAGED_MISTRAL_API_KEY,\n    OPENAI_API_KEY: DUST_MANAGED_OPENAI_API_KEY,\n    TEXTSYNTH_API_KEY: DUST_MANAGED_TEXTSYNTH_API_KEY,\n    GOOGLE_AI_STUDIO_API_KEY: DUST_MANAGED_GOOGLE_AI_STUDIO_API_KEY,\n    SERP_API_KEY: DUST_MANAGED_SERP_API_KEY,\n    BROWSERLESS_API_KEY: DUST_MANAGED_BROWSERLESS_API_KEY,\n    TOGETHERAI_API_KEY: DUST_MANAGED_TOGETHERAI_API_KEY,\n    DEEPSEEK_API_KEY: DUST_MANAGED_DEEPSEEK_API_KEY,\n    FIREWORKS_API_KEY: DUST_MANAGED_FIREWORKS_API_KEY,\n  };\n};\n","import {\n  AdminCommandType,\n  AdminResponseType,\n} from \"../../connectors/admin/cli\";\nimport { ConnectorsAPIError, isConnectorsAPIError } from \"../../connectors/api\";\nimport { UpdateConnectorConfigurationType } from \"../../connectors/api_handlers/connector_configuration\";\nimport { ConnectorCreateRequestBody } from \"../../connectors/api_handlers/create_connector\";\nimport { UpdateConnectorRequestBody } from \"../../connectors/api_handlers/update_connector\";\nimport { ConnectorConfiguration } from \"../../connectors/configuration\";\nimport { ContentNodesViewType } from \"../../connectors/content_nodes\";\nimport { ContentNodeType } from \"../../core/content_node\";\nimport { ConnectorProvider, DataSourceType } from \"../../front/data_source\";\nimport { LoggerInterface } from \"../../shared/logger\";\nimport { Err, Ok, Result } from \"../../shared/result\";\n\nexport type ConnectorsAPIResponse<T> = Result<T, ConnectorsAPIError>;\nexport type ConnectorSyncStatus = \"succeeded\" | \"failed\";\nexport const CONNECTORS_ERROR_TYPES = [\n  \"oauth_token_revoked\",\n  \"third_party_internal_error\",\n  \"webcrawling_error\",\n  \"webcrawling_error_empty_content\",\n  \"webcrawling_error_content_too_large\",\n  \"webcrawling_error_blocked\",\n  \"webcrawling_synchronization_limit_reached\",\n  \"remote_database_connection_not_readonly\",\n  \"remote_database_network_error\",\n] as const;\n\nexport type ConnectorErrorType = (typeof CONNECTORS_ERROR_TYPES)[number];\nexport function isConnectorError(val: string): val is ConnectorErrorType {\n  return (CONNECTORS_ERROR_TYPES as unknown as string[]).includes(val);\n}\n\nexport type ConnectorType = {\n  id: string;\n  type: ConnectorProvider;\n  workspaceId: string;\n  dataSourceId: string;\n  connectionId: string;\n  useProxy: boolean;\n  lastSyncStatus?: ConnectorSyncStatus;\n  lastSyncStartTime?: number;\n  lastSyncFinishTime?: number;\n  lastSyncSuccessfulTime?: number;\n  firstSuccessfulSyncTime?: number;\n  firstSyncProgress?: string;\n  errorType?: ConnectorErrorType;\n  configuration: ConnectorConfiguration;\n  pausedAt?: number;\n  updatedAt: number;\n};\n\n/**\n * This type represents the permission associated with a ContentNode. For now the only\n * permission we handle is read. but we could have more complex permissions in the future.\n */\nexport type ConnectorPermission = \"read\" | \"write\" | \"read_write\" | \"none\";\n// currently used for Slack, for which channels can be public or private\nexport type ProviderVisibility = \"public\" | \"private\";\n\n/**\n * A ContentNode represents a connector related node. As an example:\n * - Notion: Top-level pages (possibly manually added lower level ones)\n * - Github: repositories\n * - Slack: channels\n * - GoogleDrive: shared drive or sub-folders of shared drives.\n *\n * `internalId` and `parentInternalId` are internal opaque identifiers that\n * should enable reconstructing the tree structure of the resources.\n *\n * Those ids must be aligned with those used in the \"parents\" field of data\n * sources documents, to enable search filter on documents based on their\n * parents, see the\n *\n * The convention to use for internal ids are to always use the externally\n * provided id when possible (e.g. Notion page id, Github repository id,\n * etc...). When not possible, such as for Github issues whose id is not\n * workspace-unique, a custom function to create a unique id is created, and\n * used both in the parents field management code and the connectors node code.\n *\n * A specific situation for the Microsoft connector leads us to not use the\n * externally provided id (although it exists and is unique), but to compute our\n * own. This is because the Microsoft API does not allow to query a document or\n * list its children using its id alone. We compute an internal id that contains all\n * information. More details here:\n * https://www.notion.so/dust-tt/Design-Doc-Microsoft-ids-parents-c27726652aae45abafaac587b971a41d?pvs=4\n */\nexport interface ContentNode {\n  expandable: boolean;\n  internalId: string;\n  lastUpdatedAt: number | null;\n  mimeType: string;\n  // The direct parent ID of this content node\n  parentInternalId: string | null;\n  permission: ConnectorPermission;\n  preventSelection?: boolean;\n  providerVisibility?: ProviderVisibility;\n  sourceUrl: string | null;\n  title: string;\n  type: ContentNodeType;\n}\n\nexport interface ContentNodeWithParent extends ContentNode {\n  parentInternalIds: string[] | null;\n  parentTitle?: string;\n}\n\ntype GetContentNodesReturnType<Key extends string> = ConnectorsAPIResponse<{\n  [K in Key]: ContentNode[];\n}>;\n\nexport type GoogleDriveFolderType = {\n  id: string;\n  name: string;\n  parent: string | null;\n  children: string[];\n};\n\nexport type GoogleDriveSelectedFolderType = GoogleDriveFolderType & {\n  selected: boolean;\n};\n\nexport class ConnectorsAPI {\n  _url: string;\n  _secret: string;\n  _logger: LoggerInterface;\n\n  constructor(\n    config: { url: string; secret: string },\n    logger: LoggerInterface\n  ) {\n    this._url = config.url;\n    this._secret = config.secret;\n    this._logger = logger;\n  }\n\n  async createConnector({\n    provider,\n    workspaceId,\n    workspaceAPIKey,\n    dataSourceId,\n    connectionId,\n    configuration,\n  }: {\n    provider: ConnectorProvider;\n    workspaceId: string;\n    workspaceAPIKey: string;\n    dataSourceId: string;\n    connectionId: string;\n    configuration: ConnectorConfiguration;\n  }): Promise<ConnectorsAPIResponse<ConnectorType>> {\n    const res = await this._fetchWithError(\n      `${this._url}/connectors/create/${encodeURIComponent(provider)}`,\n      {\n        method: \"POST\",\n        headers: this.getDefaultHeaders(),\n        body: JSON.stringify({\n          workspaceId,\n          workspaceAPIKey,\n          dataSourceId,\n          connectionId,\n          configuration,\n        } satisfies ConnectorCreateRequestBody),\n      }\n    );\n\n    return this._resultFromResponse(res);\n  }\n\n  async updateConfiguration({\n    connectorId,\n    configuration,\n  }: {\n    connectorId: string;\n    configuration: UpdateConnectorConfigurationType;\n  }): Promise<ConnectorsAPIResponse<ConnectorType>> {\n    const res = await this._fetchWithError(\n      `${this._url}/connectors/${encodeURIComponent(\n        connectorId\n      )}/configuration`,\n      {\n        method: \"PATCH\",\n        headers: this.getDefaultHeaders(),\n        body: JSON.stringify(\n          configuration satisfies UpdateConnectorConfigurationType\n        ),\n      }\n    );\n\n    return this._resultFromResponse(res);\n  }\n\n  async updateConnector({\n    connectorId,\n    connectionId,\n  }: {\n    connectorId: string;\n    connectionId: string;\n  }): Promise<ConnectorsAPIResponse<{ connectorId: string }>> {\n    const res = await this._fetchWithError(\n      `${this._url}/connectors/update/${encodeURIComponent(connectorId)}`,\n      {\n        method: \"POST\",\n        headers: this.getDefaultHeaders(),\n        body: JSON.stringify({\n          connectionId,\n        } satisfies UpdateConnectorRequestBody),\n      }\n    );\n\n    return this._resultFromResponse(res);\n  }\n\n  async stopConnector(\n    connectorId: string\n  ): Promise<ConnectorsAPIResponse<undefined>> {\n    const res = await this._fetchWithError(\n      `${this._url}/connectors/stop/${encodeURIComponent(connectorId)}`,\n      {\n        method: \"POST\",\n        headers: this.getDefaultHeaders(),\n      }\n    );\n\n    return this._resultFromResponse(res);\n  }\n\n  async pauseConnector(\n    connectorId: string\n  ): Promise<ConnectorsAPIResponse<undefined>> {\n    const res = await this._fetchWithError(\n      `${this._url}/connectors/pause/${encodeURIComponent(connectorId)}`,\n      {\n        method: \"POST\",\n        headers: this.getDefaultHeaders(),\n      }\n    );\n\n    return this._resultFromResponse(res);\n  }\n\n  async unpauseConnector(\n    connectorId: string\n  ): Promise<ConnectorsAPIResponse<undefined>> {\n    const res = await this._fetchWithError(\n      `${this._url}/connectors/unpause/${encodeURIComponent(connectorId)}`,\n      {\n        method: \"POST\",\n        headers: this.getDefaultHeaders(),\n      }\n    );\n\n    return this._resultFromResponse(res);\n  }\n\n  async resumeConnector(\n    connectorId: string\n  ): Promise<ConnectorsAPIResponse<undefined>> {\n    const res = await this._fetchWithError(\n      `${this._url}/connectors/resume/${encodeURIComponent(connectorId)}`,\n      {\n        method: \"POST\",\n        headers: this.getDefaultHeaders(),\n      }\n    );\n\n    return this._resultFromResponse(res);\n  }\n\n  async syncConnector(\n    connectorId: string\n  ): Promise<ConnectorsAPIResponse<{ workflowId: string }>> {\n    const res = await this._fetchWithError(\n      `${this._url}/connectors/sync/${encodeURIComponent(connectorId)}`,\n      {\n        method: \"POST\",\n        headers: this.getDefaultHeaders(),\n      }\n    );\n\n    return this._resultFromResponse(res);\n  }\n\n  async deleteConnector(\n    connectorId: string,\n    force = false\n  ): Promise<ConnectorsAPIResponse<{ success: true }>> {\n    const res = await this._fetchWithError(\n      `${this._url}/connectors/delete/${encodeURIComponent(\n        connectorId\n      )}?force=${force ? \"true\" : \"false\"}`,\n      {\n        method: \"DELETE\",\n        headers: this.getDefaultHeaders(),\n      }\n    );\n\n    return this._resultFromResponse(res);\n  }\n\n  async getConnectorPermissions({\n    connectorId,\n    filterPermission,\n    parentId,\n    viewType = \"document\",\n  }: {\n    connectorId: string;\n    filterPermission?: ConnectorPermission;\n    parentId?: string;\n    viewType?: ContentNodesViewType;\n  }): Promise<GetContentNodesReturnType<\"resources\">> {\n    const queryParams = new URLSearchParams();\n\n    if (parentId) {\n      queryParams.append(\"parentId\", parentId);\n    }\n\n    if (filterPermission) {\n      queryParams.append(\"filterPermission\", filterPermission);\n    }\n\n    const qs = queryParams.toString();\n\n    const url = `${this._url}/connectors/${encodeURIComponent(\n      connectorId\n    )}/permissions?viewType=${viewType}&${qs}`;\n\n    const res = await this._fetchWithError(url, {\n      method: \"GET\",\n      headers: this.getDefaultHeaders(),\n    });\n\n    const response = await this._resultFromResponse(res);\n\n    return response as GetContentNodesReturnType<\"resources\">;\n  }\n\n  async setConnectorPermissions({\n    connectorId,\n    resources,\n  }: {\n    connectorId: string;\n    resources: {\n      internalId: string;\n      permission: ConnectorPermission;\n    }[];\n  }): Promise<ConnectorsAPIResponse<void>> {\n    // Connector permission changes are logged so user actions can be traced\n    this._logger.info(\n      {\n        connectorId,\n        resources,\n      },\n      \"Setting connector permissions\"\n    );\n\n    const res = await this._fetchWithError(\n      `${this._url}/connectors/${encodeURIComponent(connectorId)}/permissions`,\n      {\n        method: \"POST\",\n        headers: this.getDefaultHeaders(),\n        body: JSON.stringify({\n          resources: resources.map(({ internalId, permission }) => ({\n            internal_id: internalId,\n            permission,\n          })),\n        }),\n      }\n    );\n\n    return this._resultFromResponse(res);\n  }\n\n  async getConnector(\n    connectorId: string\n  ): Promise<ConnectorsAPIResponse<ConnectorType>> {\n    const parsedId = parseInt(connectorId, 10);\n    if (isNaN(parsedId)) {\n      const err: ConnectorsAPIError = {\n        type: \"invalid_request_error\",\n        message: \"Invalid connector ID\",\n      };\n      return new Err(err);\n    }\n\n    const res = await this._fetchWithError(\n      `${this._url}/connectors/${encodeURIComponent(connectorId)}`,\n      {\n        method: \"GET\",\n        headers: this.getDefaultHeaders(),\n      }\n    );\n\n    return this._resultFromResponse(res);\n  }\n\n  // TODO(jules): remove after debugging\n  async getConnectorFromDataSource(\n    dataSource: DataSourceType\n  ): Promise<ConnectorsAPIResponse<ConnectorType>> {\n    const res = await this._fetchWithError(\n      `${this._url}/connectors/${encodeURIComponent(\n        dataSource.connectorId ?? \"\"\n      )}?origin=${dataSource.id}`,\n      {\n        method: \"GET\",\n        headers: this.getDefaultHeaders(),\n      }\n    );\n\n    return this._resultFromResponse(res);\n  }\n\n  async getConnectors(\n    provider: ConnectorProvider,\n    connectorIds: string[]\n  ): Promise<ConnectorsAPIResponse<ConnectorType[]>> {\n    if (connectorIds.length === 0) {\n      return new Ok([]);\n    }\n    const res = await this._fetchWithError(\n      `${this._url}/connectors?provider=${encodeURIComponent(\n        provider\n      )}&${connectorIds\n        .map((id) => `connector_id=${encodeURIComponent(id)}`)\n        .join(\"&\")}`,\n      {\n        method: \"GET\",\n        headers: this.getDefaultHeaders(),\n      }\n    );\n\n    return this._resultFromResponse(res);\n  }\n\n  async setConnectorConfig(\n    connectorId: string,\n    configKey: string,\n    configValue: string\n  ): Promise<ConnectorsAPIResponse<void>> {\n    const res = await this._fetchWithError(\n      `${this._url}/connectors/${encodeURIComponent(\n        connectorId\n      )}/config/${encodeURIComponent(configKey)}`,\n      {\n        method: \"POST\",\n        headers: this.getDefaultHeaders(),\n        body: JSON.stringify({\n          configValue,\n        }),\n      }\n    );\n\n    return this._resultFromResponse(res);\n  }\n\n  async getConnectorConfig(\n    connectorId: string,\n    configKey: string\n  ): Promise<\n    ConnectorsAPIResponse<{\n      connectorId: number;\n      configKey: string;\n      configValue: string;\n    }>\n  > {\n    const res = await this._fetchWithError(\n      `${this._url}/connectors/${encodeURIComponent(\n        connectorId\n      )}/config/${encodeURIComponent(configKey)}`,\n      {\n        method: \"GET\",\n        headers: this.getDefaultHeaders(),\n      }\n    );\n\n    return this._resultFromResponse(res);\n  }\n\n  async linkSlackChannelsWithAgent({\n    connectorId,\n    slackChannelInternalIds,\n    agentConfigurationId,\n  }: {\n    connectorId: string;\n    slackChannelInternalIds: string[];\n    agentConfigurationId: string;\n  }): Promise<ConnectorsAPIResponse<{ success: true }>> {\n    const res = await this._fetchWithError(\n      `${this._url}/slack/channels/linked_with_agent`,\n      {\n        method: \"PATCH\",\n        headers: this.getDefaultHeaders(),\n        body: JSON.stringify({\n          connector_id: connectorId,\n          agent_configuration_id: agentConfigurationId,\n          slack_channel_internal_ids: slackChannelInternalIds,\n        }),\n      }\n    );\n\n    return this._resultFromResponse(res);\n  }\n\n  async getSlackChannelsLinkedWithAgent({\n    connectorId,\n  }: {\n    connectorId: string;\n  }): Promise<\n    ConnectorsAPIResponse<{\n      slackChannels: {\n        slackChannelId: string;\n        slackChannelName: string;\n        agentConfigurationId: string;\n      }[];\n    }>\n  > {\n    const res = await this._fetchWithError(\n      `${\n        this._url\n      }/slack/channels/linked_with_agent?connector_id=${encodeURIComponent(\n        connectorId\n      )}`,\n      {\n        method: \"GET\",\n        headers: this.getDefaultHeaders(),\n      }\n    );\n\n    return this._resultFromResponse(res);\n  }\n\n  async admin(\n    adminCommand: AdminCommandType\n  ): Promise<ConnectorsAPIResponse<AdminResponseType>> {\n    const res = await this._fetchWithError(`${this._url}/connectors/admin`, {\n      method: \"POST\",\n      headers: this.getDefaultHeaders(),\n      body: JSON.stringify(adminCommand),\n    });\n\n    return this._resultFromResponse(res);\n  }\n\n  getDefaultHeaders() {\n    return {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${this._secret}`,\n    };\n  }\n\n  private async _fetchWithError(\n    url: string,\n    init?: RequestInit\n  ): Promise<\n    Result<{ response: Response; duration: number }, ConnectorsAPIError>\n  > {\n    const now = Date.now();\n    try {\n      const res = await fetch(url, init);\n      return new Ok({ response: res, duration: Date.now() - now });\n    } catch (e) {\n      const duration = Date.now() - now;\n      const err: ConnectorsAPIError = {\n        type: \"unexpected_network_error\",\n        message: `Unexpected network error from ConnectorsAPI: ${e}`,\n      };\n      this._logger.error(\n        {\n          url,\n          duration,\n          connectorsError: err,\n          error: e,\n        },\n        \"ConnectorsAPI error\"\n      );\n      return new Err(err);\n    }\n  }\n\n  private async _resultFromResponse<T>(\n    res: Result<\n      {\n        response: Response;\n        duration: number;\n      },\n      ConnectorsAPIError\n    >\n  ): Promise<ConnectorsAPIResponse<T>> {\n    if (res.isErr()) {\n      return res;\n    }\n\n    // 204 means no content.\n    if (res.value.response.status === 204) {\n      return new Ok(undefined as T);\n    }\n    // We get the text and attempt to parse so that we can log the raw text in case of error (the\n    // body is already consumed by response.json() if used otherwise).\n    const text = await res.value.response.text();\n\n    let json = null;\n    try {\n      json = JSON.parse(text);\n    } catch (e) {\n      const err: ConnectorsAPIError = {\n        type: \"unexpected_response_format\",\n        message: `Unexpected response format from ConnectorsAPI: ${e}`,\n      };\n      this._logger.error(\n        {\n          connectorsError: err,\n          parseError: e,\n          rawText: text,\n          status: res.value.response.status,\n          url: res.value.response.url,\n          duration: res.value.duration,\n        },\n        \"ConnectorsAPI error\"\n      );\n      return new Err(err);\n    }\n\n    if (!res.value.response.ok) {\n      const err = json?.error;\n      if (isConnectorsAPIError(err)) {\n        this._logger.error(\n          {\n            connectorsError: err,\n            status: res.value.response.status,\n            url: res.value.response.url,\n            duration: res.value.duration,\n          },\n          \"ConnectorsAPI error\"\n        );\n        return new Err(err);\n      } else {\n        const err: ConnectorsAPIError = {\n          type: \"unexpected_error_format\",\n          message: \"Unexpected error format from ConnectorAPI\",\n        };\n        this._logger.error(\n          {\n            connectorsError: err,\n            json,\n            status: res.value.response.status,\n            url: res.value.response.url,\n            duration: res.value.duration,\n          },\n          \"ConnectorsAPI error\"\n        );\n        return new Err(err);\n      }\n    } else {\n      return new Ok(json);\n    }\n  }\n}\n","import { createParser } from \"eventsource-parser\";\nimport * as t from \"io-ts\";\n\nimport { CoreAPIContentNode } from \"../../core/content_node\";\nimport {\n  CoreAPIDataSource,\n  CoreAPIDataSourceConfig,\n  CoreAPIDataSourceDocumentSection,\n  CoreAPIDocument,\n  CoreAPIDocumentBlob,\n  CoreAPIDocumentVersion,\n  CoreAPIFolder,\n  CoreAPILightDocument,\n  CoreAPITableBlob,\n  EmbedderType,\n} from \"../../core/data_source\";\nimport { DustAppSecretType } from \"../../front/dust_app_secret\";\nimport { GroupType } from \"../../front/groups\";\nimport { dustManagedCredentials } from \"../../front/lib/api/credentials\";\nimport { EmbeddingProviderIdType } from \"../../front/lib/assistant\";\nimport { Project } from \"../../front/project\";\nimport { CredentialsType } from \"../../front/provider\";\nimport {\n  BlockType,\n  RunConfig,\n  RunRunType,\n  RunStatus,\n  TraceType,\n} from \"../../front/run\";\nimport { LightWorkspaceType } from \"../../front/user\";\nimport { LoggerInterface } from \"../../shared/logger\";\nimport { Err, Ok, Result } from \"../../shared/result\";\nimport { DataSourceViewType } from \"../data_source_view\";\nimport { ProviderVisibility } from \"./connectors_api\";\n\nexport const MAX_CHUNK_SIZE = 512;\n\nexport const EMBEDDING_CONFIGS: Record<EmbeddingProviderIdType, EmbedderType> =\n  {\n    openai: {\n      model_id: \"text-embedding-3-large-1536\",\n      provider_id: \"openai\",\n      splitter_id: \"base_v0\",\n      max_chunk_size: MAX_CHUNK_SIZE,\n    },\n    mistral: {\n      model_id: \"mistral-embed\",\n      provider_id: \"mistral\",\n      splitter_id: \"base_v0\",\n      max_chunk_size: MAX_CHUNK_SIZE,\n    },\n  } as const;\n\nexport type CoreAPIError = {\n  message: string;\n  code: string;\n};\n\nexport function isCoreAPIError(obj: unknown): obj is CoreAPIError {\n  return (\n    typeof obj === \"object\" &&\n    obj !== null &&\n    \"message\" in obj &&\n    typeof obj.message === \"string\" &&\n    \"code\" in obj &&\n    typeof obj.code === \"string\"\n  );\n}\n\nexport type CoreAPIResponse<T> = Result<T, CoreAPIError>;\n\nexport type CoreAPIDatasetVersion = {\n  hash: string;\n  created: number;\n};\n\nexport type CoreAPIDatasetWithoutData = CoreAPIDatasetVersion & {\n  dataset_id: string;\n  keys: string[];\n};\n\nexport type CoreAPIDataset = CoreAPIDatasetWithoutData & {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  data: { [key: string]: any }[];\n};\n\nexport type CoreAPIRun = {\n  run_id: string;\n  created: number;\n  run_type: RunRunType;\n  app_hash?: string | null;\n  specification_hash?: string | null;\n  config: RunConfig;\n  status: RunStatus;\n  traces: Array<[[BlockType, string], Array<Array<TraceType>>]>;\n};\n\nexport type CoreAPITokenType = [number, string];\n\ntype CoreAPICreateRunParams = {\n  projectId: string;\n  runType: RunRunType;\n  specification?: string | null;\n  specificationHash?: string | null;\n  datasetId?: string | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  inputs?: any[] | null;\n  config: RunConfig;\n  credentials: CredentialsType;\n  secrets: DustAppSecretType[];\n  isSystemKey?: boolean;\n  storeBlocksResults?: boolean;\n};\n\ntype GetDatasetResponse = {\n  dataset: CoreAPIDataset;\n};\n\ntype GetDatasetsResponse = {\n  datasets: { [key: string]: CoreAPIDatasetVersion[] };\n};\n\nexport type CoreAPITableSchema = {\n  name: string;\n  value_type: \"int\" | \"float\" | \"text\" | \"bool\" | \"datetime\";\n  possible_values: string[] | null;\n}[];\n\nexport type CoreAPITable = {\n  table_id: string;\n  name: string;\n  description: string;\n  schema: CoreAPITableSchema | null;\n  timestamp: number;\n  tags: string[];\n  parent_id: string | null;\n  parents: string[];\n  created: number;\n  data_source_id: string;\n  title: string;\n  mime_type: string;\n  remote_database_table_id: string | null;\n  remote_database_secret_id: string | null;\n};\n\nexport type CoreAPIRowValue =\n  | number\n  | string\n  | boolean\n  | { type: \"datetime\"; epoch: number; string_value?: string }\n  | null;\n\nexport type CoreAPIRow = {\n  row_id: string;\n  value: Record<string, CoreAPIRowValue>;\n};\n\nexport function isRowMatchingSchema(\n  row: CoreAPIRow,\n  schema: CoreAPITableSchema\n) {\n  for (const [k, v] of Object.entries(row.value)) {\n    if (v === null) {\n      continue;\n    }\n    if (typeof v === \"string\" && v.trim().length === 0) {\n      continue;\n    }\n    const schemaEntry = schema.find((s) => s.name === k);\n    if (!schemaEntry) {\n      return false;\n    }\n\n    if (schemaEntry.value_type === \"int\" && typeof v !== \"number\") {\n      return false;\n    } else if (schemaEntry.value_type === \"float\" && typeof v !== \"number\") {\n      return false;\n    } else if (schemaEntry.value_type === \"text\" && typeof v !== \"string\") {\n      return false;\n    } else if (schemaEntry.value_type === \"bool\" && typeof v !== \"boolean\") {\n      return false;\n    } else if (\n      schemaEntry.value_type === \"datetime\" &&\n      (typeof v !== \"object\" ||\n        !v ||\n        typeof v.epoch !== \"number\" ||\n        (v.string_value && typeof v.string_value !== \"string\"))\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport type CoreAPIQueryResult = {\n  value: Record<string, unknown>;\n};\n\nexport type CoreAPISearchFilter = {\n  tags: {\n    in: string[] | null;\n    not: string[] | null;\n  } | null;\n  parents: {\n    in: string[] | null;\n    not: string[] | null;\n  } | null;\n  timestamp: {\n    gt: number | null;\n    lt: number | null;\n  } | null;\n};\n\nexport type CoreAPISortSpec = {\n  field: string;\n  direction: \"asc\" | \"desc\";\n};\n\nexport type CoreAPISearchOptions = {\n  limit?: number;\n  cursor?: string;\n  sort?: CoreAPISortSpec[];\n};\n\nexport interface CoreAPISearchCursorRequest {\n  sort?: CoreAPISortSpec[];\n  limit?: number;\n  cursor?: string;\n}\n\nexport type SearchWarningCode = \"truncated-query-clauses\";\n\nexport interface CoreAPISearchNodesResponse {\n  nodes: CoreAPIContentNode[];\n  next_page_cursor: string | null;\n  hit_count: number;\n  hit_count_is_accurate: boolean;\n  warning_code: SearchWarningCode | null;\n}\n\nexport interface CoreAPISearchTagsResponse {\n  tags: {\n    tag: string;\n    match_count: number;\n    data_sources: string[];\n  }[];\n}\n\nexport const CoreAPISearchScopeSchema = t.union([\n  t.literal(\"nodes_titles\"),\n  t.literal(\"data_source_name\"),\n  t.literal(\"both\"),\n]);\n\nexport type CoreAPISearchScope = t.TypeOf<typeof CoreAPISearchScopeSchema>;\n\nexport const CoreAPIDatasourceViewFilterSchema = t.intersection([\n  t.type({\n    data_source_id: t.string,\n    view_filter: t.array(t.string),\n  }),\n  t.partial({\n    search_scope: CoreAPISearchScopeSchema,\n  }),\n]);\n\nexport type CoreAPIDatasourceViewFilter = t.TypeOf<\n  typeof CoreAPIDatasourceViewFilterSchema\n>;\n\n// Edge-ngram starts at 2 characters.\nexport const MIN_SEARCH_QUERY_SIZE = 2;\n\nexport const CoreAPINodesSearchFilterSchema = t.intersection([\n  t.type({\n    data_source_views: t.array(CoreAPIDatasourceViewFilterSchema),\n  }),\n  t.partial({\n    excluded_node_mime_types: t.union([t.readonlyArray(t.string), t.undefined]),\n    node_ids: t.array(t.string),\n    node_types: t.array(t.string),\n    parent_id: t.string,\n    query: t.string,\n  }),\n]);\n\nexport type CoreAPINodesSearchFilter = t.TypeOf<\n  typeof CoreAPINodesSearchFilterSchema\n>;\nexport interface CoreAPIDataSourceStatsResponse {\n  data_source: {\n    data_source_id: string;\n    data_source_internal_id: string;\n    timestamp: number;\n    name: string;\n    text_size: number;\n    document_count: number;\n  };\n}\n\nexport interface CoreAPIUpsertDataSourceDocumentPayload {\n  projectId: string;\n  dataSourceId: string;\n  documentId: string;\n  timestamp?: number | null;\n  tags: string[];\n  parentId: string | null;\n  parents: string[];\n  sourceUrl?: string | null;\n  section: CoreAPIDataSourceDocumentSection;\n  credentials: CredentialsType;\n  lightDocumentOutput?: boolean;\n  title: string;\n  mimeType: string;\n}\n\n// TODO(keyword-search): Until we remove the `managed-` prefix, we need to\n// sanitize the search name.\nfunction formatDataSourceDisplayName(name: string) {\n  return name\n    .replace(/[-_]/g, \" \") // Replace both hyphens and underscores with spaces.\n    .split(\" \")\n    .filter((part) => part !== \"managed\")\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(\" \");\n}\n\nexport class CoreAPI {\n  _url: string;\n  declare _logger: LoggerInterface;\n  _apiKey: string | null;\n\n  constructor(\n    config: {\n      url: string;\n      apiKey: string | null;\n    },\n    logger: LoggerInterface\n  ) {\n    this._url = config.url;\n    this._logger = logger;\n    this._apiKey = config.apiKey;\n  }\n\n  async createProject(): Promise<CoreAPIResponse<{ project: Project }>> {\n    const response = await this._fetchWithError(`${this._url}/projects`, {\n      method: \"POST\",\n    });\n    return this._resultFromResponse(response);\n  }\n\n  async deleteProject({\n    projectId,\n  }: {\n    projectId: string;\n  }): Promise<CoreAPIResponse<{ success: true }>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(projectId)}`,\n      {\n        method: \"DELETE\",\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async getDatasets({\n    projectId,\n  }: {\n    projectId: string;\n  }): Promise<CoreAPIResponse<GetDatasetsResponse>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(projectId)}/datasets`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async getDataset({\n    projectId,\n    datasetName,\n    datasetHash,\n  }: {\n    projectId: string;\n    datasetName: string;\n    datasetHash: string;\n  }): Promise<CoreAPIResponse<GetDatasetResponse>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/datasets/${encodeURIComponent(datasetName)}/${encodeURIComponent(\n        datasetHash\n      )}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async createDataset({\n    projectId,\n    datasetId,\n    data,\n  }: {\n    projectId: string;\n    datasetId: string;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data: any[];\n  }): Promise<CoreAPIResponse<{ dataset: CoreAPIDatasetWithoutData }>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(projectId)}/datasets`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          dataset_id: datasetId,\n          data,\n        }),\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async cloneProject({\n    projectId,\n  }: {\n    projectId: string;\n  }): Promise<CoreAPIResponse<{ project: Project }>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(projectId)}/clone`,\n      {\n        method: \"POST\",\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async createRun(\n    workspace: LightWorkspaceType,\n    groups: GroupType[],\n    {\n      projectId,\n      runType,\n      specification,\n      specificationHash,\n      datasetId,\n      inputs,\n      config,\n      credentials,\n      secrets,\n      isSystemKey,\n      storeBlocksResults = true,\n    }: CoreAPICreateRunParams\n  ): Promise<CoreAPIResponse<{ run: CoreAPIRun }>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(projectId)}/runs`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-Dust-Workspace-Id\": workspace.sId,\n          \"X-Dust-Group-Ids\": groups.map((g) => g.sId).join(\",\"),\n          \"X-Dust-IsSystemRun\": isSystemKey ? \"true\" : \"false\",\n        },\n        body: JSON.stringify({\n          run_type: runType,\n          specification: specification,\n          specification_hash: specificationHash,\n          dataset_id: datasetId,\n          inputs: inputs,\n          config: config,\n          credentials: credentials,\n          secrets: secrets,\n          store_blocks_results: storeBlocksResults,\n        }),\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async createRunStream(\n    workspace: LightWorkspaceType,\n    groups: GroupType[],\n    {\n      projectId,\n      runType,\n      specification,\n      specificationHash,\n      datasetId,\n      inputs,\n      config,\n      credentials,\n      secrets,\n      isSystemKey,\n      storeBlocksResults = true,\n    }: CoreAPICreateRunParams\n  ): Promise<\n    CoreAPIResponse<{\n      chunkStream: AsyncGenerator<Uint8Array, void, unknown>;\n      dustRunId: Promise<string>;\n    }>\n  > {\n    const res = await this._fetchWithError(\n      `${this._url}/projects/${projectId}/runs/stream`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-Dust-Workspace-Id\": workspace.sId,\n          \"X-Dust-Group-Ids\": groups.map((g) => g.sId).join(\",\"),\n          \"X-Dust-IsSystemRun\": isSystemKey ? \"true\" : \"false\",\n        },\n        body: JSON.stringify({\n          run_type: runType,\n          specification: specification,\n          specification_hash: specificationHash,\n          dataset_id: datasetId,\n          inputs: inputs,\n          config: config,\n          credentials: credentials,\n          secrets: secrets,\n          store_blocks_results: storeBlocksResults,\n        }),\n      }\n    );\n\n    if (res.isErr()) {\n      return res;\n    }\n\n    const response = res.value.response;\n\n    if (!response.ok || !response.body) {\n      return this._resultFromResponse(res);\n    }\n\n    let hasRunId = false;\n    let rejectDustRunIdPromise: (err: Error) => void;\n    let resolveDustRunIdPromise: (runId: string) => void;\n    const dustRunIdPromise = new Promise<string>((resolve, reject) => {\n      rejectDustRunIdPromise = reject;\n      resolveDustRunIdPromise = resolve;\n    });\n\n    const parser = createParser((event) => {\n      if (event.type === \"event\") {\n        if (event.data) {\n          try {\n            const data = JSON.parse(event.data);\n            if (data.content?.run_id && !hasRunId) {\n              hasRunId = true;\n              resolveDustRunIdPromise(data.content.run_id);\n            }\n          } catch (err) {\n            this._logger.error(\n              { error: err },\n              \"Failed parsing chunk from Core API\"\n            );\n          }\n        }\n      }\n    });\n\n    const reader = response.body.getReader();\n    const logger = this._logger;\n\n    const streamChunks = async function* () {\n      try {\n        while (true) {\n          const { done, value } = await reader.read();\n          if (done) {\n            break;\n          }\n          parser.feed(new TextDecoder().decode(value));\n          yield value;\n        }\n      } catch (e) {\n        logger.error(\n          {\n            error: e,\n            errorStr: JSON.stringify(e),\n            errorSource: \"createRunStream\",\n          },\n          \"Error streaming chunks\"\n        );\n      } finally {\n        if (!hasRunId) {\n          // once the stream is entirely consumed, if we haven't received a run id, reject the promise\n          setImmediate(() => {\n            logger.error(\n              { projectId, runType, specificationHash },\n              \"No run id received\"\n            );\n            rejectDustRunIdPromise(new Error(\"No run id received\"));\n          });\n        }\n        reader.releaseLock();\n      }\n    };\n\n    return new Ok({ chunkStream: streamChunks(), dustRunId: dustRunIdPromise });\n  }\n\n  async deleteRun({\n    projectId,\n    runId,\n  }: {\n    projectId: string;\n    runId: string;\n  }): Promise<CoreAPIResponse<{ success: true }>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/runs/${encodeURIComponent(runId)}`,\n      {\n        method: \"DELETE\",\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async getRunsBatch({\n    projectId,\n    dustRunIds,\n  }: {\n    projectId: string;\n    dustRunIds: string[];\n  }): Promise<CoreAPIResponse<{ runs: { [key: string]: CoreAPIRun } }>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(projectId)}/runs/batch`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          run_ids: dustRunIds,\n        }),\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async getRun({\n    projectId,\n    runId,\n  }: {\n    projectId: string;\n    runId: string;\n  }): Promise<CoreAPIResponse<{ run: CoreAPIRun }>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/runs/${encodeURIComponent(runId)}`,\n      {\n        method: \"GET\",\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async getRunStatus({\n    projectId,\n    runId,\n  }: {\n    projectId: string;\n    runId: string;\n  }): Promise<CoreAPIResponse<{ run: CoreAPIRun }>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/runs/${encodeURIComponent(runId)}/status`,\n      {\n        method: \"GET\",\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async getSpecificationHashes({\n    projectId,\n  }: {\n    projectId: string;\n  }): Promise<CoreAPIResponse<{ hashes: string[] }>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(projectId)}/specifications`,\n      {\n        method: \"GET\",\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async getSpecification({\n    projectId,\n    specificationHash,\n  }: {\n    projectId: string;\n    specificationHash: string;\n  }): Promise<\n    CoreAPIResponse<{ specification: { created: number; data: string } }>\n  > {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/specifications/${encodeURIComponent(specificationHash)}`,\n      {\n        method: \"GET\",\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async saveSpecification({\n    projectId,\n    specification,\n  }: {\n    projectId: string;\n    specification: string;\n  }): Promise<CoreAPIResponse<{ success: true }>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(projectId)}/specifications`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          specification,\n        }),\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async getRunBlock({\n    projectId,\n    runId,\n    blockType,\n    blockName,\n  }: {\n    projectId: string;\n    runId: string;\n    blockType: BlockType;\n    blockName: string;\n  }): Promise<CoreAPIResponse<{ run: CoreAPIRun }>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/runs/${encodeURIComponent(runId)}/blocks/${encodeURIComponent(\n        blockType\n      )}/${encodeURIComponent(blockName)}`,\n      {\n        method: \"GET\",\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async createDataSource({\n    projectId,\n    config,\n    credentials,\n    name,\n  }: {\n    projectId: string;\n    config: CoreAPIDataSourceConfig;\n    credentials: CredentialsType;\n    name: string;\n  }): Promise<CoreAPIResponse<{ data_source: CoreAPIDataSource }>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(projectId)}/data_sources`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          config,\n          credentials: credentials,\n          name: formatDataSourceDisplayName(name),\n        }),\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async updateDataSource({\n    projectId,\n    dataSourceId,\n    name,\n  }: {\n    projectId: string;\n    dataSourceId: string;\n    name: string;\n  }): Promise<CoreAPIResponse<{ data_source: CoreAPIDataSource }>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/data_sources/${encodeURIComponent(dataSourceId)}`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          name: formatDataSourceDisplayName(name),\n        }),\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async getDataSource({\n    projectId,\n    dataSourceId,\n  }: {\n    projectId: string;\n    dataSourceId: string;\n  }): Promise<CoreAPIResponse<{ data_source: CoreAPIDataSource }>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/data_sources/${encodeURIComponent(dataSourceId)}`,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async deleteDataSource({\n    projectId,\n    dataSourceId,\n  }: {\n    projectId: string;\n    dataSourceId: string;\n  }): Promise<CoreAPIResponse<{ data_source: CoreAPIDataSource }>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/data_sources/${encodeURIComponent(dataSourceId)}`,\n      {\n        method: \"DELETE\",\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async searchDataSource(\n    projectId: string,\n    dataSourceId: string,\n    payload: {\n      query: string;\n      topK: number;\n      filter?: CoreAPISearchFilter | null;\n      view_filter?: CoreAPISearchFilter | null;\n      fullText: boolean;\n      credentials: { [key: string]: string };\n      target_document_tokens?: number | null;\n    }\n  ): Promise<CoreAPIResponse<{ documents: CoreAPIDocument[] }>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/data_sources/${encodeURIComponent(dataSourceId)}/search`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          query: payload.query,\n          top_k: payload.topK,\n          filter: payload.filter,\n          view_filter: payload.view_filter,\n          full_text: payload.fullText,\n          credentials: payload.credentials,\n          target_document_tokens: payload.target_document_tokens,\n        }),\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async getDataSourceDocuments(\n    {\n      dataSourceId,\n      documentIds,\n      projectId,\n      viewFilter,\n    }: {\n      dataSourceId: string;\n      documentIds?: string[];\n      projectId: string;\n      viewFilter?: CoreAPISearchFilter | null;\n    },\n    pagination?: { limit: number; offset: number }\n  ): Promise<\n    CoreAPIResponse<{\n      documents: CoreAPIDocument[];\n      limit: number;\n      offset: number;\n      total: number;\n    }>\n  > {\n    const queryParams = new URLSearchParams();\n\n    if (pagination) {\n      queryParams.append(\"limit\", String(pagination.limit));\n      queryParams.append(\"offset\", String(pagination.offset));\n    }\n\n    if (viewFilter) {\n      queryParams.append(\"view_filter\", JSON.stringify(viewFilter));\n    }\n\n    if (documentIds && documentIds.length > 0) {\n      queryParams.append(\"document_ids\", JSON.stringify(documentIds));\n    }\n\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/data_sources/${encodeURIComponent(\n        dataSourceId\n      )}/documents?${queryParams.toString()}`,\n      {\n        method: \"GET\",\n      }\n    );\n    return this._resultFromResponse(response);\n  }\n\n  async getDataSourceDocument({\n    dataSourceId,\n    documentId,\n    projectId,\n    versionHash,\n    viewFilter,\n  }: {\n    dataSourceId: string;\n    documentId: string;\n    projectId: string;\n    versionHash?: string | null;\n    viewFilter?: CoreAPISearchFilter | null;\n  }): Promise<\n    CoreAPIResponse<{\n      document: CoreAPIDocument;\n      data_source: CoreAPIDataSource;\n    }>\n  > {\n    const queryParams = new URLSearchParams();\n\n    if (versionHash) {\n      queryParams.append(\"version_hash\", versionHash);\n    }\n\n    if (viewFilter) {\n      queryParams.append(\"view_filter\", JSON.stringify(viewFilter));\n    }\n\n    const qs = queryParams.toString();\n\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/data_sources/${encodeURIComponent(\n        dataSourceId\n      )}/documents/${encodeURIComponent(documentId)}${qs ? `?${qs}` : \"\"}`,\n      {\n        method: \"GET\",\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async getDataSourceDocumentVersions({\n    projectId,\n    dataSourceId,\n    documentId,\n    latest_hash,\n    limit = 10,\n    offset = 0,\n  }: {\n    projectId: string;\n    dataSourceId: string;\n    documentId: string;\n    limit: number;\n    offset: number;\n    latest_hash?: string | null;\n  }): Promise<\n    CoreAPIResponse<{\n      versions: CoreAPIDocumentVersion[];\n      offset: number;\n      limit: number;\n      total: number;\n    }>\n  > {\n    const params = new URLSearchParams({\n      limit: String(limit),\n      offset: String(offset),\n    });\n\n    if (latest_hash) {\n      params.append(\"latest_hash\", latest_hash);\n    }\n\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/data_sources/${encodeURIComponent(\n        dataSourceId\n      )}/documents/${encodeURIComponent(\n        documentId\n      )}/versions?${params.toString()}`,\n      {\n        method: \"GET\",\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async upsertDataSourceDocument({\n    projectId,\n    dataSourceId,\n    documentId,\n    timestamp,\n    tags,\n    parentId,\n    parents,\n    sourceUrl,\n    section,\n    credentials,\n    lightDocumentOutput = false,\n    title,\n    mimeType,\n  }: CoreAPIUpsertDataSourceDocumentPayload): Promise<\n    CoreAPIResponse<{\n      document:\n        | CoreAPIDocument\n        // if lightDocumentOutput is true, we return this type\n        | CoreAPILightDocument;\n\n      data_source: CoreAPIDataSource;\n    }>\n  > {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${projectId}/data_sources/${encodeURIComponent(\n        dataSourceId\n      )}/documents`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          document_id: documentId,\n          timestamp,\n          section,\n          tags,\n          parent_id: parentId,\n          parents,\n          source_url: sourceUrl,\n          credentials,\n          light_document_output: lightDocumentOutput,\n          title: title,\n          mime_type: mimeType,\n        }),\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async getDataSourceDocumentBlob({\n    projectId,\n    dataSourceId,\n    documentId,\n  }: {\n    projectId: string;\n    dataSourceId: string;\n    documentId: string;\n  }): Promise<CoreAPIResponse<CoreAPIDocumentBlob>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${projectId}/data_sources/${encodeURIComponent(\n        dataSourceId\n      )}/documents/${encodeURIComponent(documentId)}/blob`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async updateDataSourceDocumentTags({\n    projectId,\n    dataSourceId,\n    documentId,\n    addTags,\n    removeTags,\n  }: {\n    projectId: string;\n    dataSourceId: string;\n    documentId: string;\n    addTags?: string[];\n    removeTags?: string[];\n  }): Promise<\n    CoreAPIResponse<{\n      data_source: CoreAPIDataSource;\n    }>\n  > {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/data_sources/${encodeURIComponent(\n        dataSourceId\n      )}/documents/${encodeURIComponent(documentId)}/tags`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          add_tags: addTags,\n          remove_tags: removeTags,\n        }),\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async updateDataSourceDocumentParents({\n    projectId,\n    dataSourceId,\n    documentId,\n    parentId,\n    parents,\n  }: {\n    projectId: string;\n    dataSourceId: string;\n    documentId: string;\n    parentId: string | null;\n    parents: string[];\n  }): Promise<\n    CoreAPIResponse<{\n      data_source: CoreAPIDataSource;\n    }>\n  > {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/data_sources/${encodeURIComponent(\n        dataSourceId\n      )}/documents/${encodeURIComponent(documentId)}/parents`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          parents: parents,\n          parent_id: parentId,\n        }),\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async deleteDataSourceDocument({\n    projectId,\n    dataSourceId,\n    documentId,\n  }: {\n    projectId: string;\n    dataSourceId: string;\n    documentId: string;\n  }): Promise<CoreAPIResponse<{ data_source: CoreAPIDataSource }>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/data_sources/${encodeURIComponent(\n        dataSourceId\n      )}/documents/${encodeURIComponent(documentId)}`,\n      {\n        method: \"DELETE\",\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async scrubDataSourceDocumentDeletedVersions({\n    projectId,\n    dataSourceId,\n    documentId,\n  }: {\n    projectId: string;\n    dataSourceId: string;\n    documentId: string;\n  }): Promise<\n    CoreAPIResponse<{\n      versions: CoreAPIDocumentVersion[];\n    }>\n  > {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/data_sources/${encodeURIComponent(\n        dataSourceId\n      )}/documents/${encodeURIComponent(documentId)}/scrub_deleted_versions`,\n      {\n        method: \"POST\",\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async tokenize({\n    text,\n    modelId,\n    providerId,\n  }: {\n    text: string;\n    modelId: string;\n    providerId: string;\n  }): Promise<CoreAPIResponse<{ tokens: CoreAPITokenType[] }>> {\n    const credentials = dustManagedCredentials();\n    const response = await this._fetchWithError(`${this._url}/tokenize`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      keepalive: false,\n      body: JSON.stringify({\n        text,\n        model_id: modelId,\n        provider_id: providerId,\n        credentials,\n      }),\n    });\n\n    return this._resultFromResponse(response);\n  }\n\n  async tokenizeBatch({\n    texts,\n    modelId,\n    providerId,\n  }: {\n    texts: string[];\n    modelId: string;\n    providerId: string;\n  }): Promise<CoreAPIResponse<{ tokens: CoreAPITokenType[][] }>> {\n    const credentials = dustManagedCredentials();\n    const response = await this._fetchWithError(`${this._url}/tokenize/batch`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      keepalive: false,\n      body: JSON.stringify({\n        texts,\n        model_id: modelId,\n        provider_id: providerId,\n        credentials,\n      }),\n    });\n\n    return this._resultFromResponse(response);\n  }\n\n  async dataSourceTokenize({\n    text,\n    projectId,\n    dataSourceId,\n  }: {\n    text: string;\n    projectId: string;\n    dataSourceId: string;\n  }): Promise<CoreAPIResponse<{ tokens: CoreAPITokenType[] }>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/data_sources/${encodeURIComponent(dataSourceId)}/tokenize`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ text }),\n      }\n    );\n    return this._resultFromResponse(response);\n  }\n\n  async tableValidateCSVContent({\n    projectId,\n    dataSourceId,\n    bucket,\n    bucketCSVPath,\n  }: {\n    projectId: string;\n    dataSourceId: string;\n    bucket: string;\n    bucketCSVPath: string;\n  }): Promise<\n    CoreAPIResponse<{\n      schema: CoreAPITableSchema;\n    }>\n  > {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/data_sources/${encodeURIComponent(\n        dataSourceId\n      )}/tables/validate_csv_content`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          bucket,\n          bucket_csv_path: bucketCSVPath,\n        }),\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async upsertTable({\n    projectId,\n    dataSourceId,\n    tableId,\n    name,\n    description,\n    timestamp,\n    tags,\n    parentId,\n    parents,\n    remoteDatabaseTableId,\n    remoteDatabaseSecretId,\n    title,\n    mimeType,\n    sourceUrl,\n  }: {\n    projectId: string;\n    dataSourceId: string;\n    tableId: string;\n    name: string;\n    description: string;\n    timestamp: number | null;\n    tags: string[];\n    parentId: string | null;\n    parents: string[];\n    remoteDatabaseTableId?: string | null;\n    remoteDatabaseSecretId?: string | null;\n    title: string;\n    mimeType: string;\n    sourceUrl: string | null;\n  }): Promise<CoreAPIResponse<{ table: CoreAPITable }>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/data_sources/${encodeURIComponent(dataSourceId)}/tables`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          table_id: tableId,\n          name: name,\n          description: description,\n          timestamp,\n          tags,\n          parent_id: parentId,\n          parents,\n          remote_database_table_id: remoteDatabaseTableId ?? null,\n          remote_database_secret_id: remoteDatabaseSecretId ?? null,\n          title,\n          mime_type: mimeType,\n          source_url: sourceUrl,\n        }),\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async getTable({\n    projectId,\n    dataSourceId,\n    tableId,\n    viewFilter,\n  }: {\n    projectId: string;\n    dataSourceId: string;\n    tableId: string;\n    viewFilter?: CoreAPISearchFilter | null;\n  }): Promise<CoreAPIResponse<{ table: CoreAPITable }>> {\n    const queryParams = new URLSearchParams();\n\n    if (viewFilter) {\n      queryParams.append(\"view_filter\", JSON.stringify(viewFilter));\n    }\n\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/data_sources/${encodeURIComponent(\n        dataSourceId\n      )}/tables/${encodeURIComponent(tableId)}?${queryParams.toString()}`,\n      {\n        method: \"GET\",\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async getTables(\n    {\n      dataSourceId,\n      projectId,\n      tableIds,\n      viewFilter,\n    }: {\n      dataSourceId: string;\n      projectId: string;\n      tableIds?: string[];\n      viewFilter?: CoreAPISearchFilter | null;\n    },\n    pagination?: { limit: number; offset: number }\n  ): Promise<\n    CoreAPIResponse<{\n      limit: number;\n      offset: number;\n      tables: CoreAPITable[];\n      total: number;\n    }>\n  > {\n    const queryParams = new URLSearchParams();\n\n    if (viewFilter) {\n      queryParams.append(\"view_filter\", JSON.stringify(viewFilter));\n    }\n\n    if (tableIds && tableIds.length > 0) {\n      queryParams.append(\"table_ids\", JSON.stringify(tableIds));\n    }\n\n    if (pagination) {\n      queryParams.append(\"limit\", String(pagination.limit));\n      queryParams.append(\"offset\", String(pagination.offset));\n    }\n\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/data_sources/${encodeURIComponent(\n        dataSourceId\n      )}/tables?${queryParams.toString()}`,\n      {\n        method: \"GET\",\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async deleteTable({\n    projectId,\n    dataSourceId,\n    tableId,\n  }: {\n    projectId: string;\n    dataSourceId: string;\n    tableId: string;\n  }): Promise<CoreAPIResponse<{ success: true }>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/data_sources/${encodeURIComponent(\n        dataSourceId\n      )}/tables/${encodeURIComponent(tableId)}`,\n      {\n        method: \"DELETE\",\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async updateTableParents({\n    projectId,\n    dataSourceId,\n    tableId,\n    parentId,\n    parents,\n  }: {\n    projectId: string;\n    dataSourceId: string;\n    tableId: string;\n    parentId: string | null;\n    parents: string[];\n  }): Promise<CoreAPIResponse<{ success: true }>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/data_sources/${encodeURIComponent(\n        dataSourceId\n      )}/tables/${encodeURIComponent(tableId)}/parents`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          parent_id: parentId,\n          parents: parents,\n        }),\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async upsertTableRows({\n    projectId,\n    dataSourceId,\n    tableId,\n    rows,\n    truncate,\n  }: {\n    projectId: string;\n    dataSourceId: string;\n    tableId: string;\n    rows: CoreAPIRow[];\n    truncate?: boolean;\n  }): Promise<CoreAPIResponse<{ success: true }>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/data_sources/${encodeURIComponent(\n        dataSourceId\n      )}/tables/${encodeURIComponent(tableId)}/rows`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          rows,\n          truncate: truncate || false,\n        }),\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async tableUpsertCSVContent({\n    projectId,\n    dataSourceId,\n    tableId,\n    bucket,\n    bucketCSVPath,\n    truncate,\n  }: {\n    projectId: string;\n    dataSourceId: string;\n    tableId: string;\n    bucket: string;\n    bucketCSVPath: string;\n    truncate?: boolean;\n  }): Promise<\n    CoreAPIResponse<{\n      schema: CoreAPITableSchema;\n    }>\n  > {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/data_sources/${encodeURIComponent(\n        dataSourceId\n      )}/tables/${encodeURIComponent(tableId)}/csv`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          bucket,\n          bucket_csv_path: bucketCSVPath,\n          truncate: truncate || false,\n        }),\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async getTableRow({\n    projectId,\n    dataSourceId,\n    tableId,\n    rowId,\n    filter,\n  }: {\n    projectId: string;\n    dataSourceId: string;\n    tableId: string;\n    rowId: string;\n    filter?: CoreAPISearchFilter | null;\n  }): Promise<CoreAPIResponse<{ row: CoreAPIRow }>> {\n    const qs = filter\n      ? `?view_filter=${encodeURIComponent(JSON.stringify(filter))}`\n      : \"\";\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/data_sources/${encodeURIComponent(\n        dataSourceId\n      )}/tables/${encodeURIComponent(tableId)}/rows/${encodeURIComponent(\n        rowId\n      )}${qs}`,\n      {\n        method: \"GET\",\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async getTableRows({\n    projectId,\n    dataSourceId,\n    tableId,\n    limit,\n    offset,\n    filter,\n  }: {\n    projectId: string;\n    dataSourceId: string;\n    tableId: string;\n    limit: number;\n    offset: number;\n    filter?: CoreAPISearchFilter | null;\n  }): Promise<\n    CoreAPIResponse<{\n      rows: CoreAPIRow[];\n      offset: number;\n      limit: number;\n      total: number;\n    }>\n  > {\n    const qs = filter\n      ? `&view_filter=${encodeURIComponent(JSON.stringify(filter))}`\n      : \"\";\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/data_sources/${encodeURIComponent(\n        dataSourceId\n      )}/tables/${encodeURIComponent(\n        tableId\n      )}/rows?limit=${limit}&offset=${offset}${qs}`,\n      {\n        method: \"GET\",\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async getDataSourceTableBlob({\n    projectId,\n    dataSourceId,\n    tableId,\n  }: {\n    projectId: string;\n    dataSourceId: string;\n    tableId: string;\n  }): Promise<CoreAPIResponse<CoreAPITableBlob>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${projectId}/data_sources/${encodeURIComponent(\n        dataSourceId\n      )}/tables/${encodeURIComponent(tableId)}/blob`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async deleteTableRow({\n    projectId,\n    dataSourceId,\n    tableId,\n    rowId,\n  }: {\n    projectId: string;\n    dataSourceId: string;\n    tableId: string;\n    rowId: string;\n  }): Promise<CoreAPIResponse<{ success: true }>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/data_sources/${encodeURIComponent(\n        dataSourceId\n      )}/tables/${encodeURIComponent(tableId)}/rows/${encodeURIComponent(\n        rowId\n      )}`,\n      {\n        method: \"DELETE\",\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async queryDatabase({\n    tables,\n    query,\n    filter,\n  }: {\n    tables: Array<{\n      project_id: string;\n      data_source_id: string;\n      table_id: string;\n    }>;\n    query: string;\n    filter?: CoreAPISearchFilter | null;\n  }): Promise<\n    CoreAPIResponse<{\n      schema: CoreAPITableSchema;\n      results: CoreAPIQueryResult[];\n    }>\n  > {\n    const response = await this._fetchWithError(`${this._url}/query_database`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        query,\n        tables,\n        filter,\n      }),\n    });\n\n    return this._resultFromResponse(response);\n  }\n\n  async getDataSourceFolders(\n    {\n      projectId,\n      dataSourceId,\n      folderIds,\n      viewFilter,\n    }: {\n      projectId: string;\n      dataSourceId: string;\n      folderIds?: string[];\n      viewFilter?: CoreAPISearchFilter | null;\n    },\n    pagination?: { limit: number; offset: number }\n  ): Promise<\n    CoreAPIResponse<{\n      folders: CoreAPIFolder[];\n      limit: number;\n      offset: number;\n      total: number;\n    }>\n  > {\n    const queryParams = new URLSearchParams();\n\n    if (pagination) {\n      queryParams.append(\"limit\", String(pagination.limit));\n      queryParams.append(\"offset\", String(pagination.offset));\n    }\n\n    if (viewFilter) {\n      queryParams.append(\"view_filter\", JSON.stringify(viewFilter));\n    }\n\n    if (folderIds && folderIds.length > 0) {\n      queryParams.append(\"document_ids\", JSON.stringify(folderIds));\n    }\n\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/data_sources/${encodeURIComponent(\n        dataSourceId\n      )}/folders?${queryParams.toString()}`,\n      {\n        method: \"GET\",\n      }\n    );\n    return this._resultFromResponse(response);\n  }\n\n  async searchNodes({\n    query,\n    filter,\n    options,\n  }: {\n    query?: string;\n    filter: CoreAPINodesSearchFilter;\n    options?: CoreAPISearchOptions;\n  }): Promise<CoreAPIResponse<CoreAPISearchNodesResponse>> {\n    const response = await this._fetchWithError(`${this._url}/nodes/search`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        query,\n        filter,\n        options,\n      }),\n    });\n\n    return this._resultFromResponse(response);\n  }\n\n  async getDataSourceStats({\n    projectId,\n    dataSourceId,\n  }: {\n    projectId: string;\n    dataSourceId: string;\n  }): Promise<CoreAPIResponse<CoreAPIDataSourceStatsResponse>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/data_sources/${encodeURIComponent(dataSourceId)}/stats`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async searchTags({\n    query,\n    queryType,\n    dataSourceViews,\n    limit,\n  }: {\n    query?: string;\n    queryType?: string;\n    dataSourceViews: DataSourceViewType[];\n    limit?: number;\n  }): Promise<CoreAPIResponse<CoreAPISearchTagsResponse>> {\n    const dataSourceViewsFilter: CoreAPIDatasourceViewFilter[] =\n      dataSourceViews.map((dsv) => ({\n        data_source_id: dsv.dataSource.dustAPIDataSourceId,\n        view_filter: dsv.parentsIn ?? [],\n      }));\n\n    const response = await this._fetchWithError(`${this._url}/tags/search`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        data_source_views: dataSourceViewsFilter,\n        query,\n        query_type: queryType,\n        limit,\n      }),\n    });\n\n    return this._resultFromResponse(response);\n  }\n\n  async getDataSourceFolder({\n    projectId,\n    dataSourceId,\n    folderId,\n  }: {\n    projectId: string;\n    dataSourceId: string;\n    folderId: string;\n    viewFilter?: CoreAPISearchFilter | null;\n  }): Promise<CoreAPIResponse<{ folder: CoreAPIFolder }>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/data_sources/${encodeURIComponent(\n        dataSourceId\n      )}/folders/${encodeURIComponent(folderId)}`,\n      {\n        method: \"GET\",\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async upsertDataSourceFolder({\n    projectId,\n    dataSourceId,\n    folderId,\n    timestamp,\n    parentId,\n    parents,\n    title,\n    mimeType,\n    sourceUrl,\n    providerVisibility,\n  }: {\n    projectId: string;\n    dataSourceId: string;\n    folderId: string;\n    timestamp: number | null;\n    parentId: string | null;\n    parents: string[];\n    title: string;\n    mimeType: string;\n    sourceUrl?: string | null;\n    providerVisibility: ProviderVisibility | null | undefined;\n  }): Promise<CoreAPIResponse<{ folder: CoreAPIFolder }>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${projectId}/data_sources/${encodeURIComponent(\n        dataSourceId\n      )}/folders`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          folder_id: folderId,\n          timestamp,\n          title,\n          parent_id: parentId,\n          parents,\n          mime_type: mimeType,\n          source_url: sourceUrl,\n          provider_visibility: providerVisibility,\n        }),\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n\n  async deleteDataSourceFolder({\n    projectId,\n    dataSourceId,\n    folderId,\n  }: {\n    projectId: string;\n    dataSourceId: string;\n    folderId: string;\n  }): Promise<CoreAPIResponse<{ data_source: CoreAPIDataSource }>> {\n    const response = await this._fetchWithError(\n      `${this._url}/projects/${encodeURIComponent(\n        projectId\n      )}/data_sources/${encodeURIComponent(\n        dataSourceId\n      )}/folders/${encodeURIComponent(folderId)}`,\n      {\n        method: \"DELETE\",\n      }\n    );\n\n    return this._resultFromResponse(response);\n  }\n  private async _fetchWithError(\n    url: string,\n    init?: RequestInit\n  ): Promise<Result<{ response: Response; duration: number }, CoreAPIError>> {\n    const now = Date.now();\n    try {\n      const params = { ...init };\n      if (this._apiKey) {\n        params.headers = {\n          ...params.headers,\n          Authorization: `Bearer ${this._apiKey}`,\n        };\n      }\n      const res = await fetch(url, params);\n      return new Ok({ response: res, duration: Date.now() - now });\n    } catch (e) {\n      const duration = Date.now() - now;\n      const err: CoreAPIError = {\n        code: \"unexpected_network_error\",\n        message: `Unexpected network error from CoreAPI: ${e}`,\n      };\n      this._logger.error(\n        {\n          url,\n          duration,\n          coreError: err,\n          error: e,\n        },\n        \"CoreAPI error\"\n      );\n      return new Err(err);\n    }\n  }\n\n  private async _resultFromResponse<T>(\n    res: Result<\n      {\n        response: Response;\n        duration: number;\n      },\n      CoreAPIError\n    >\n  ): Promise<CoreAPIResponse<T>> {\n    if (res.isErr()) {\n      return res;\n    }\n\n    // We get the text and attempt to parse so that we can log the raw text in case of error (the\n    // body is already consumed by response.json() if used otherwise).\n    const text = await res.value.response.text();\n\n    let json = null;\n    try {\n      json = JSON.parse(text);\n    } catch (e) {\n      const err: CoreAPIError = {\n        code: \"unexpected_response_format\",\n        message: `Unexpected response format from CoreAPI: ${e}`,\n      };\n\n      this._logger.error(\n        {\n          coreError: err,\n          parseError: e,\n          rawText: text,\n          status: res.value.response.status,\n          url: res.value.response.url,\n          duration: res.value.duration,\n        },\n        \"CoreAPI error\"\n      );\n      return new Err(err);\n    }\n\n    if (!res.value.response.ok) {\n      const err = json?.error;\n      if (isCoreAPIError(err)) {\n        this._logger.error(\n          {\n            coreError: err,\n            status: res.value.response.status,\n            url: res.value.response.url,\n            duration: res.value.duration,\n          },\n          \"CoreAPI error\"\n        );\n        return new Err(err);\n      } else {\n        const err: CoreAPIError = {\n          code: \"unexpected_error_format\",\n          message: \"Unexpected error format from CoreAPI\",\n        };\n        this._logger.error(\n          {\n            coreError: err,\n            json,\n            status: res.value.response.status,\n            url: res.value.response.url,\n            duration: res.value.duration,\n          },\n          \"CoreAPI error\"\n        );\n        return new Err(err);\n      }\n    } else {\n      const err = json?.error;\n      const res = json?.response;\n\n      if (err && isCoreAPIError(err)) {\n        this._logger.error(\n          {\n            coreError: err,\n            json,\n            status: res.value.response.status,\n            url: res.value.response.url,\n            duration: res.value.duration,\n          },\n          \"CoreAPI error\"\n        );\n        return new Err(err);\n      } else if (res) {\n        return new Ok(res);\n      } else {\n        const err: CoreAPIError = {\n          code: \"unexpected_response_format\",\n          message: \"Unexpected response format from CoreAPI\",\n        };\n        this._logger.error(\n          {\n            coreError: err,\n            json,\n            status: res.value.response.status,\n            url: res.value.response.url,\n            duration: res.value.duration,\n          },\n          \"CoreAPI error\"\n        );\n        return new Err(err);\n      }\n    }\n  }\n}\n","import * as t from \"io-ts\";\n\nimport { LightWorkspaceType } from \"../../user\";\n\ninterface BaseArgDefinition {\n  description?: string;\n  label: string;\n  redact?: boolean;\n}\n\ntype AtLeastTwoElements<T> = readonly [T, T, ...T[]];\n\ninterface EnumArgDefinition extends BaseArgDefinition {\n  type: \"enum\";\n  values: AtLeastTwoElements<string>;\n}\n\ninterface StringArgDefinition extends BaseArgDefinition {\n  type: \"string\";\n  values?: never;\n}\n\ninterface NumberArgDefinition extends BaseArgDefinition {\n  type: \"number\";\n  values?: never;\n}\n\ninterface TextArgDefinition extends BaseArgDefinition {\n  type: \"text\";\n  values?: never;\n}\n\ninterface BooleanArgDefinition extends BaseArgDefinition {\n  type: \"boolean\";\n  values?: never;\n}\n\nexport type PluginArgDefinition =\n  | EnumArgDefinition\n  | StringArgDefinition\n  | TextArgDefinition\n  | NumberArgDefinition\n  | BooleanArgDefinition;\n\nexport type StrictPluginArgs = {\n  [key: string]: PluginArgDefinition;\n};\n\nexport type PluginArgs = Record<string, PluginArgDefinition>;\n\nexport interface PluginManifest<\n  T extends PluginArgs,\n  R extends SupportedResourceType\n> {\n  args: T;\n  description: string;\n  explanation?: string;\n  id: string;\n  name: string;\n  resourceTypes: R[];\n  warning?: string;\n}\n\ninterface PluginResourceScope {\n  resourceType: SupportedResourceType;\n}\n\ninterface PluginWorkspaceResource extends PluginResourceScope {\n  resourceId: string;\n  workspace: LightWorkspaceType;\n}\n\nexport type PluginResourceTarget =\n  | PluginResourceScope\n  | PluginWorkspaceResource;\n\nexport function createIoTsCodecFromArgs(\n  args: PluginArgs\n): t.TypeC<Record<string, t.Mixed>> {\n  const codecProps: Record<string, t.Mixed> = {};\n\n  for (const [key, arg] of Object.entries(args)) {\n    switch (arg.type) {\n      case \"text\":\n        codecProps[key] = t.string;\n        break;\n      case \"string\":\n        codecProps[key] = t.string;\n        break;\n      case \"number\":\n        codecProps[key] = t.number;\n        break;\n      case \"boolean\":\n        codecProps[key] = t.boolean;\n        break;\n      case \"enum\":\n        if (!Array.isArray(arg.values) || arg.values.length < 2) {\n          throw new Error(\n            `Enum argument \"${key}\" must have at least two values`\n          );\n        }\n        codecProps[key] = t.union([\n          t.literal(arg.values[0]),\n          t.literal(arg.values[1]),\n          ...arg.values.slice(2).map((v) => t.literal(v)),\n        ]);\n    }\n  }\n\n  return t.type(codecProps);\n}\n\nexport const supportedResourceTypes = [\n  \"apps\",\n  \"data_source_views\",\n  \"data_sources\",\n  \"spaces\",\n  \"workspaces\",\n  // Special case for global operations.\n  \"global\",\n] as const;\n\nexport type SupportedResourceType = (typeof supportedResourceTypes)[number];\n\nexport function isSupportedResourceType(\n  resourceType: string\n): resourceType is SupportedResourceType {\n  return supportedResourceTypes.includes(resourceType as SupportedResourceType);\n}\n","export function assertNever(x: never): never {\n  throw new Error(\n    `${\n      typeof x === \"object\" ? JSON.stringify(x) : x\n    } is not of type never. This should never happen.`\n  );\n}\n","import * as t from \"io-ts\";\n\nimport {\n  EmbeddingProviderIdType,\n  ModelProviderIdType,\n} from \"../front/lib/assistant\";\nimport { ModelId } from \"../shared/model_id\";\nimport { assertNever } from \"../shared/utils/assert_never\";\n\nexport type WorkspaceSegmentationType = \"interesting\" | null;\n\nexport const ROLES = [\"admin\", \"builder\", \"user\", \"none\"] as const;\nexport const ACTIVE_ROLES = [\"admin\", \"builder\", \"user\"] as const;\n\nfunction keyObject<T extends readonly string[]>(\n  arr: T\n): { [K in T[number]]: null } {\n  return Object.fromEntries(arr.map((v) => [v, null])) as {\n    [K in T[number]]: null;\n  };\n}\n\nexport const RoleSchema = t.keyof(keyObject(ROLES));\n\nexport type RoleType = t.TypeOf<typeof RoleSchema>;\n\nexport const ActiveRoleSchema = t.keyof(keyObject(ACTIVE_ROLES));\n\nexport type ActiveRoleType = t.TypeOf<typeof ActiveRoleSchema>;\n\nexport function isActiveRoleType(role: string): role is ActiveRoleType {\n  return ACTIVE_ROLES.includes(role as ActiveRoleType);\n}\n\nexport type LightWorkspaceType = {\n  id: ModelId;\n  sId: string;\n  name: string;\n  role: RoleType;\n  segmentation: WorkspaceSegmentationType;\n  whiteListedProviders: ModelProviderIdType[] | null;\n  defaultEmbeddingProvider: EmbeddingProviderIdType | null;\n  metadata: Record<string, string | number | boolean | object> | null;\n};\n\nexport type WorkspaceType = LightWorkspaceType & {\n  ssoEnforced?: boolean;\n};\n\nexport type ExtensionWorkspaceType = WorkspaceType & {\n  blacklistedDomains: string[] | null;\n};\n\nexport type UserProviderType =\n  | \"auth0\"\n  | \"github\"\n  | \"google\"\n  | \"okta\"\n  | \"samlp\"\n  | \"waad\"\n  | null;\n\nexport type UserType = {\n  sId: string;\n  id: ModelId;\n  createdAt: number;\n  provider: UserProviderType;\n  username: string;\n  email: string;\n  firstName: string;\n  lastName: string | null;\n  fullName: string;\n  image: string | null;\n};\n\nexport type UserTypeWithWorkspaces = UserType & {\n  workspaces: WorkspaceType[];\n};\n\nexport type UserTypeWithExtensionWorkspaces = UserType & {\n  workspaces: ExtensionWorkspaceType[];\n};\n\nexport type UserMetadataType = {\n  key: string;\n  value: string;\n};\n\nexport function formatUserFullName(user?: {\n  firstName?: string;\n  lastName?: string | null;\n}) {\n  return user\n    ? [user.firstName, user.lastName].filter(Boolean).join(\" \")\n    : null;\n}\n\nexport function isAdmin(\n  owner: WorkspaceType | null\n): owner is WorkspaceType & { role: \"admin\" } {\n  if (!owner) {\n    return false;\n  }\n  switch (owner.role) {\n    case \"admin\":\n      return true;\n    case \"builder\":\n    case \"user\":\n    case \"none\":\n      return false;\n    default:\n      assertNever(owner.role);\n  }\n}\n\nexport function isBuilder(\n  owner: WorkspaceType | null\n): owner is WorkspaceType & { role: \"builder\" | \"admin\" } {\n  if (!owner) {\n    return false;\n  }\n  switch (owner.role) {\n    case \"admin\":\n    case \"builder\":\n      return true;\n    case \"user\":\n    case \"none\":\n      return false;\n    default:\n      assertNever(owner.role);\n  }\n}\n\nexport function isUser(\n  owner: WorkspaceType | null\n): owner is WorkspaceType & { role: \"user\" | \"builder\" | \"admin\" } {\n  if (!owner) {\n    return false;\n  }\n  switch (owner.role) {\n    case \"admin\":\n    case \"builder\":\n    case \"user\":\n      return true;\n    case \"none\":\n      return false;\n    default:\n      assertNever(owner.role);\n  }\n}\n\nexport function isOnlyUser(\n  owner: WorkspaceType | null\n): owner is WorkspaceType & { role: \"user\" } {\n  if (!owner) {\n    return false;\n  }\n  return owner.role === \"user\";\n}\n\nexport function isOnlyBuilder(\n  owner: WorkspaceType | null\n): owner is WorkspaceType & { role: \"builder\" } {\n  if (!owner) {\n    return false;\n  }\n  return owner.role === \"builder\";\n}\n\nexport function isOnlyAdmin(\n  owner: WorkspaceType | null\n): owner is WorkspaceType & { role: \"admin\" } {\n  if (!owner) {\n    return false;\n  }\n  return owner.role === \"admin\";\n}\n\nconst DustUserEmailHeader = \"x-api-user-email\";\n\nexport function getUserEmailFromHeaders(headers: {\n  [key: string]: string | string[] | undefined;\n}) {\n  const email = headers[DustUserEmailHeader];\n  if (typeof email === \"string\") {\n    return email;\n  }\n\n  return undefined;\n}\n\nexport function getHeaderFromUserEmail(email: string | undefined) {\n  if (!email) {\n    return undefined;\n  }\n\n  return {\n    [DustUserEmailHeader]: email,\n  };\n}\n","import * as t from \"io-ts\";\nimport { NonEmptyString } from \"io-ts-types\";\n\nimport { ModelId } from \"../shared/model_id\";\nimport { ActiveRoleSchema, ActiveRoleType } from \"./user\";\n\nexport type MembershipInvitationType = {\n  sId: string;\n  id: ModelId;\n  status: \"pending\" | \"consumed\" | \"revoked\";\n  inviteEmail: string;\n  inviteLink: string;\n  initialRole: ActiveRoleType;\n  createdAt: number;\n};\n\n// Types for the invite form in Poke.\n\nexport const InviteMemberFormSchema = t.type({\n  email: NonEmptyString,\n  role: ActiveRoleSchema,\n});\n\nexport type InviteMemberFormType = t.TypeOf<typeof InviteMemberFormSchema>;\n","export const MEMBERSHIP_ROLE_TYPES = [\"admin\", \"builder\", \"user\"] as const;\nexport type MembershipRoleType = (typeof MEMBERSHIP_ROLE_TYPES)[number];\nexport function isMembershipRoleType(\n  value: unknown\n): value is MembershipRoleType {\n  return MEMBERSHIP_ROLE_TYPES.includes(value as MembershipRoleType);\n}\n","import * as t from \"io-ts\";\nimport { NonEmptyString } from \"io-ts-types/lib/NonEmptyString\";\nimport { NumberFromString } from \"io-ts-types/lib/NumberFromString\";\n\nexport const MAX_MESSAGE_TIMEFRAMES = [\"day\", \"lifetime\"] as const;\nexport type MaxMessagesTimeframeType = (typeof MAX_MESSAGE_TIMEFRAMES)[number];\n\nexport function isMaxMessagesTimeframeType(\n  value: string\n): value is MaxMessagesTimeframeType {\n  return (MAX_MESSAGE_TIMEFRAMES as unknown as string[]).includes(value);\n}\n\n/**\n *  Expresses limits for usage of the product\n * Any positive number enforces the limit, -1 means no limit.\n * */\nexport type ManageDataSourcesLimitsType = {\n  isConfluenceAllowed: boolean;\n  isSlackAllowed: boolean;\n  isNotionAllowed: boolean;\n  isGoogleDriveAllowed: boolean;\n  isGithubAllowed: boolean;\n  isIntercomAllowed: boolean;\n  isWebCrawlerAllowed: boolean;\n};\nexport type LimitsType = {\n  assistant: {\n    isSlackBotAllowed: boolean;\n    maxMessages: number;\n    maxMessagesTimeframe: MaxMessagesTimeframeType;\n  };\n  connections: ManageDataSourcesLimitsType;\n  dataSources: {\n    count: number;\n    documents: {\n      count: number;\n      sizeMb: number;\n    };\n  };\n  users: {\n    maxUsers: number;\n  };\n  vaults: {\n    maxVaults: number;\n  };\n  canUseProduct: boolean;\n};\n\nexport const SUBSCRIPTION_STATUSES = [\n  \"active\",\n  \"ended\",\n  \"ended_backend_only\", // Ended on the backend but not yet propagated to Stripe\n] as const;\nexport type SubscriptionStatusType = (typeof SUBSCRIPTION_STATUSES)[number];\n\nexport type PlanType = {\n  code: string;\n  name: string;\n  limits: LimitsType;\n  trialPeriodDays: number;\n};\n\nexport type SubscriptionType = {\n  // `null` for FREE_NO_PLAN which is the default plan when there is no Subscription in DB, which\n  // means the workspace is not accessible.\n  sId: string | null;\n  status: SubscriptionStatusType;\n  trialing: boolean;\n  // `null` means that this is a free plan. Otherwise, it's a paid plan.\n  stripeSubscriptionId: string | null;\n  startDate: number | null;\n  endDate: number | null;\n  paymentFailingSince: number | null;\n  plan: PlanType;\n  requestCancelAt: number | null;\n};\n\nexport type BillingPeriod = \"monthly\" | \"yearly\";\n\nexport type SubscriptionPerSeatPricing = {\n  seatPrice: number;\n  seatCurrency: string;\n  billingPeriod: BillingPeriod;\n  quantity: number;\n};\n\nexport const CreatePlanFormSchema = t.type({\n  code: NonEmptyString,\n  name: NonEmptyString,\n  isSlackbotAllowed: t.boolean,\n  isSlackAllowed: t.boolean,\n  isNotionAllowed: t.boolean,\n  isGoogleDriveAllowed: t.boolean,\n  isGithubAllowed: t.boolean,\n  isIntercomAllowed: t.boolean,\n  isConfluenceAllowed: t.boolean,\n  isWebCrawlerAllowed: t.boolean,\n  maxMessages: t.union([t.number, NumberFromString]),\n  maxMessagesTimeframe: t.keyof({\n    day: null,\n    lifetime: null,\n  }),\n  dataSourcesCount: t.union([t.number, NumberFromString]),\n  dataSourcesDocumentsCount: t.union([t.number, NumberFromString]),\n  dataSourcesDocumentsSizeMb: t.union([t.number, NumberFromString]),\n  maxUsers: t.union([t.number, NumberFromString]),\n  maxVaults: t.union([t.number, NumberFromString]),\n});\n\nexport type CreatePlanFormType = t.TypeOf<typeof CreatePlanFormSchema>;\n\nexport const EnterpriseUpgradeFormSchema = t.type({\n  stripeSubscriptionId: NonEmptyString,\n  planCode: NonEmptyString,\n});\n\nexport type EnterpriseUpgradeFormType = t.TypeOf<\n  typeof EnterpriseUpgradeFormSchema\n>;\n","export const UNIQUE_SPACE_KINDS = [\n  \"global\",\n  \"system\",\n  \"conversations\",\n] as const;\n\nconst SPACE_KINDS = [...UNIQUE_SPACE_KINDS, \"public\", \"regular\"] as const;\n\nexport type SpaceKind = (typeof SPACE_KINDS)[number];\n\nexport type UniqueSpaceKind = (typeof UNIQUE_SPACE_KINDS)[number];\nexport type SpaceType = {\n  createdAt: number;\n  groupIds: string[];\n  isRestricted: boolean;\n  kind: SpaceKind;\n  name: string;\n  sId: string;\n  updatedAt: number;\n};\n\nexport function isUniqueSpaceKind(kind: SpaceKind): kind is UniqueSpaceKind {\n  return UNIQUE_SPACE_KINDS.includes(kind as UniqueSpaceKind);\n}\n","import { assertNever } from \"../shared/utils/assert_never\";\n\nexport interface WorkspaceDomain {\n  domain: string;\n  domainAutoJoinEnabled: boolean;\n}\n\nexport interface WorkspaceEnterpriseConnection {\n  name: string;\n  strategy: SupportedEnterpriseConnectionStrategies;\n}\n\nexport type SupportedEnterpriseConnectionStrategies = \"okta\" | \"samlp\" | \"waad\";\nexport const supportedEnterpriseConnectionStrategies: SupportedEnterpriseConnectionStrategies[] =\n  [\"okta\", \"samlp\", \"waad\"];\n\nexport const isSupportedEnterpriseConnectionStrategy = (\n  strategy: string\n): strategy is SupportedEnterpriseConnectionStrategies =>\n  supportedEnterpriseConnectionStrategies.includes(\n    strategy as SupportedEnterpriseConnectionStrategies\n  );\n\nexport function connectionStrategyToHumanReadable(\n  strategy: SupportedEnterpriseConnectionStrategies\n) {\n  switch (strategy) {\n    case \"okta\":\n      return \"Okta\";\n\n    case \"samlp\":\n      return \"SAML\";\n\n    case \"waad\":\n      return \"Microsoft Entra ID\";\n\n    default:\n      assertNever(strategy);\n  }\n}\n","import {\n  ConnectionCredentials,\n  CredentialsProvider,\n  OauthAPIGetCredentialsResponse,\n  OauthAPIPostCredentialsResponse,\n  OAuthConnectionType,\n  OAuthProvider,\n} from \"../oauth/lib\";\nimport { LoggerInterface } from \"../shared/logger\";\nimport { Err, Ok, Result } from \"../shared/result\";\n\nexport type OAuthAPIError = {\n  message: string;\n  code: string;\n};\n\nexport type MigratedCredentialsType = {\n  redirect_uri: string;\n  access_token_expiry?: number;\n  authorization_code?: string;\n  access_token: string;\n  refresh_token?: string;\n  raw_json: unknown;\n};\n\nexport function isOAuthAPIError(obj: unknown): obj is OAuthAPIError {\n  return (\n    typeof obj === \"object\" &&\n    obj !== null &&\n    \"message\" in obj &&\n    typeof obj.message === \"string\" &&\n    \"code\" in obj &&\n    typeof obj.code === \"string\"\n  );\n}\n\nexport type OAuthAPIResponse<T> = Result<T, OAuthAPIError>;\n\nexport class OAuthAPI {\n  _logger: LoggerInterface;\n  _url: string;\n  _apiKey: string | null;\n\n  constructor(\n    config: { url: string; apiKey: string | null },\n    logger: LoggerInterface\n  ) {\n    this._url = config.url;\n    this._logger = logger;\n    this._apiKey = config.apiKey;\n  }\n\n  apiUrl() {\n    return this._url;\n  }\n\n  async createConnection({\n    provider,\n    metadata,\n    migratedCredentials,\n    relatedCredential,\n  }: {\n    provider: OAuthProvider;\n    metadata: Record<string, unknown> | null;\n    migratedCredentials?: MigratedCredentialsType;\n    relatedCredential?: {\n      content: Record<string, unknown>;\n      metadata: {\n        workspace_id: string;\n        user_id: string;\n      };\n    };\n  }): Promise<OAuthAPIResponse<{ connection: OAuthConnectionType }>> {\n    const body: {\n      provider: OAuthProvider;\n      metadata: Record<string, unknown> | null;\n      migrated_credentials?: MigratedCredentialsType;\n      related_credential?: {\n        content: Record<string, unknown>;\n        metadata: {\n          workspace_id: string;\n          user_id: string;\n        };\n      };\n    } = {\n      provider,\n      metadata,\n    };\n\n    if (migratedCredentials) {\n      body.migrated_credentials = migratedCredentials;\n    }\n\n    if (relatedCredential) {\n      body.related_credential = relatedCredential;\n    }\n\n    const response = await this._fetchWithError(`${this._url}/connections`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    });\n    return this._resultFromResponse(response);\n  }\n\n  async finalizeConnection({\n    provider,\n    connectionId,\n    code,\n    redirectUri,\n  }: {\n    provider: OAuthProvider;\n    connectionId: string;\n    code: string;\n    redirectUri: string;\n  }): Promise<OAuthAPIResponse<{ connection: OAuthConnectionType }>> {\n    const response = await this._fetchWithError(\n      `${this._url}/connections/${connectionId}/finalize`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          provider,\n          code,\n          redirect_uri: redirectUri,\n        }),\n      }\n    );\n    return this._resultFromResponse(response);\n  }\n\n  async getAccessToken({\n    provider,\n    connectionId,\n  }: {\n    provider: OAuthProvider;\n    connectionId: string;\n  }): Promise<\n    OAuthAPIResponse<{\n      connection: OAuthConnectionType;\n      access_token: string;\n      access_token_expiry: number | null;\n      scrubbed_raw_json: unknown;\n    }>\n  > {\n    const response = await this._fetchWithError(\n      `${this._url}/connections/${connectionId}/access_token`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          provider,\n        }),\n      }\n    );\n    return this._resultFromResponse(response);\n  }\n\n  async postCredentials({\n    provider,\n    userId,\n    workspaceId,\n    credentials,\n  }: {\n    provider: CredentialsProvider;\n    userId: string;\n    workspaceId: string;\n    credentials: ConnectionCredentials;\n  }): Promise<OAuthAPIResponse<OauthAPIPostCredentialsResponse>> {\n    const response = await this._fetchWithError(`${this._url}/credentials`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        provider,\n        metadata: {\n          user_id: userId,\n          workspace_id: workspaceId,\n        },\n        content: credentials,\n      }),\n    });\n    return this._resultFromResponse(response);\n  }\n\n  async getCredentials({\n    credentialsId,\n  }: {\n    credentialsId: string;\n  }): Promise<OAuthAPIResponse<OauthAPIGetCredentialsResponse>> {\n    const response = await this._fetchWithError(\n      `${this._url}/credentials/${credentialsId}`\n    );\n    return this._resultFromResponse(response);\n  }\n\n  private async _fetchWithError(\n    url: string,\n    init?: RequestInit\n  ): Promise<Result<{ response: Response; duration: number }, OAuthAPIError>> {\n    const now = Date.now();\n    const params = { ...init };\n    if (this._apiKey) {\n      params.headers = {\n        ...params.headers,\n        Authorization: `Bearer ${this._apiKey}`,\n      };\n    }\n    try {\n      const res = await fetch(url, params);\n      return new Ok({ response: res, duration: Date.now() - now });\n    } catch (e) {\n      const duration = Date.now() - now;\n      const err: OAuthAPIError = {\n        code: \"unexpected_network_error\",\n        message: `Unexpected network error from OAuthAPI: ${e}`,\n      };\n      this._logger.error(\n        {\n          url,\n          duration,\n          oAuthError: err,\n          error: e,\n        },\n        \"OAuthAPI error\"\n      );\n      return new Err(err);\n    }\n  }\n\n  private async _resultFromResponse<T>(\n    res: Result<\n      {\n        response: Response;\n        duration: number;\n      },\n      OAuthAPIError\n    >\n  ): Promise<OAuthAPIResponse<T>> {\n    if (res.isErr()) {\n      return res;\n    }\n\n    // We get the text and attempt to parse so that we can log the raw text in case of error (the\n    // body is already consumed by response.json() if used otherwise).\n    const text = await res.value.response.text();\n\n    let json = null;\n    try {\n      json = JSON.parse(text);\n    } catch (e) {\n      const err: OAuthAPIError = {\n        code: \"unexpected_response_format\",\n        message: `Unexpected response format from OAuthAPI: ${e}`,\n      };\n\n      this._logger.error(\n        {\n          oAuthError: err,\n          parseError: e,\n          rawText: text,\n          status: res.value.response.status,\n          url: res.value.response.url,\n          duration: res.value.duration,\n        },\n        \"OAuthAPI error\"\n      );\n      return new Err(err);\n    }\n\n    if (!res.value.response.ok) {\n      const err = json?.error;\n      if (isOAuthAPIError(err)) {\n        this._logger.error(\n          {\n            oAuthError: err,\n            status: res.value.response.status,\n            url: res.value.response.url,\n            duration: res.value.duration,\n          },\n          \"OAuthAPI error\"\n        );\n        return new Err(err);\n      } else {\n        const err: OAuthAPIError = {\n          code: \"unexpected_error_format\",\n          message: \"Unexpected error format from OAuthAPI\",\n        };\n        this._logger.error(\n          {\n            oAuthError: err,\n            json,\n            status: res.value.response.status,\n            url: res.value.response.url,\n            duration: res.value.duration,\n          },\n          \"OAuthAPI error\"\n        );\n        return new Err(err);\n      }\n    } else {\n      const err = json?.error;\n      const res = json?.response;\n\n      if (err && isOAuthAPIError(err)) {\n        this._logger.error(\n          {\n            oauthError: err,\n            json,\n            status: res.value.response.status,\n            url: res.value.response.url,\n            duration: res.value.duration,\n          },\n          \"OAuthAPI error\"\n        );\n        return new Err(err);\n      } else if (res) {\n        return new Ok(res);\n      } else {\n        const err: OAuthAPIError = {\n          code: \"unexpected_response_format\",\n          message: \"Unexpected response format from OAuthAPI\",\n        };\n        this._logger.error(\n          {\n            oAuthError: err,\n            json,\n            status: res.value.response.status,\n            url: res.value.response.url,\n            duration: res.value.duration,\n          },\n          \"OAuthAPI error\"\n        );\n        return new Err(err);\n      }\n    }\n  }\n}\n","import { OAuthConnectionType, OAuthProvider } from \"../../oauth/lib\";\nimport { OAuthAPI, OAuthAPIError } from \"../../oauth/oauth_api\";\nimport { LoggerInterface } from \"../../shared/logger\";\nimport { Ok, Result } from \"../../shared/result\";\n\nconst OAUTH_ACCESS_TOKEN_CACHE_TTL = 1000 * 60 * 5;\n\nconst CACHE = new Map<\n  string,\n  {\n    connection: OAuthConnectionType;\n    access_token: string;\n    access_token_expiry: number | null;\n    scrubbed_raw_json: unknown;\n    local_expiry: number;\n  }\n>();\n\nexport async function getOAuthConnectionAccessToken({\n  config,\n  logger,\n  provider,\n  connectionId,\n}: {\n  config: { url: string; apiKey: string | null };\n  logger: LoggerInterface;\n  provider: OAuthProvider;\n  connectionId: string;\n}): Promise<\n  Result<\n    {\n      connection: OAuthConnectionType;\n      access_token: string;\n      access_token_expiry: number | null;\n      scrubbed_raw_json: unknown;\n    },\n    OAuthAPIError\n  >\n> {\n  const cached = CACHE.get(connectionId);\n\n  if (cached && cached.local_expiry > Date.now()) {\n    return new Ok(cached);\n  }\n\n  const res = await new OAuthAPI(config, logger).getAccessToken({\n    provider,\n    connectionId,\n  });\n\n  if (res.isErr()) {\n    return res;\n  }\n\n  CACHE.set(connectionId, {\n    local_expiry: Date.now() + OAUTH_ACCESS_TOKEN_CACHE_TTL,\n    ...res.value,\n  });\n\n  return res;\n}\n","import { LoggerInterface } from \"../../shared/logger\";\nimport { Result } from \"../../shared/result\";\nimport { OauthAPIGetCredentialsResponse } from \"../lib\";\nimport { OAuthAPI, OAuthAPIError } from \"../oauth_api\";\n\nexport async function getConnectionCredentials({\n  config,\n  logger,\n  credentialsId,\n}: {\n  config: { url: string; apiKey: string | null };\n  logger: LoggerInterface;\n  credentialsId: string;\n}): Promise<Result<OauthAPIGetCredentialsResponse, OAuthAPIError>> {\n  const res = await new OAuthAPI(config, logger).getCredentials({\n    credentialsId,\n  });\n\n  if (res.isErr()) {\n    return res;\n  }\n\n  return res;\n}\n","import * as t from \"io-ts\";\n\nexport const OAUTH_USE_CASES = [\n  \"connection\",\n  \"labs_transcripts\",\n  \"platform_actions\",\n] as const;\n\nexport type OAuthUseCase = (typeof OAUTH_USE_CASES)[number];\n\nexport function isOAuthUseCase(obj: unknown): obj is OAuthUseCase {\n  return OAUTH_USE_CASES.includes(obj as OAuthUseCase);\n}\n\nexport const OAUTH_PROVIDERS = [\n  \"confluence\",\n  \"github\",\n  \"google_drive\",\n  \"intercom\",\n  \"notion\",\n  \"slack\",\n  \"gong\",\n  \"microsoft\",\n  \"zendesk\",\n  \"salesforce\",\n] as const;\n\nexport type OAuthProvider = (typeof OAUTH_PROVIDERS)[number];\n\nexport function isOAuthProvider(obj: unknown): obj is OAuthProvider {\n  return OAUTH_PROVIDERS.includes(obj as OAuthProvider);\n}\n\nexport type OAuthConnectionType = {\n  connection_id: string;\n  created: number;\n  metadata: Record<string, unknown>;\n  provider: OAuthProvider;\n  status: \"pending\" | \"finalized\";\n};\n\nexport function isOAuthConnectionType(\n  obj: unknown\n): obj is OAuthConnectionType {\n  const connection = obj as OAuthConnectionType;\n  return (\n    typeof connection.connection_id === \"string\" &&\n    typeof connection.created === \"number\" &&\n    isOAuthProvider(connection.provider) &&\n    (connection.status === \"pending\" || connection.status === \"finalized\")\n  );\n}\n\n// OAuth Providers utils\n\nexport function isValidZendeskSubdomain(s: unknown): s is string {\n  return (\n    typeof s === \"string\" && /^[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?$/.test(s)\n  );\n}\n\nexport function isValidSalesforceDomain(s: unknown): s is string {\n  return (\n    typeof s === \"string\" &&\n    s.startsWith(\"https://\") &&\n    s.endsWith(\".salesforce.com\")\n  );\n}\n\nexport function isValidSalesforceClientId(s: unknown): s is string {\n  return typeof s === \"string\" && s.trim().length > 0;\n}\n\nexport function isValidSalesforceClientSecret(s: unknown): s is string {\n  return typeof s === \"string\" && s.trim().length > 0;\n}\n\n// Credentials Providers\n\nexport const PROVIDERS_WITH_WORKSPACE_CONFIGURATIONS = [\n  \"gong\",\n  \"modjo\",\n] as const;\n\nexport type ProvidersWithWorkspaceConfigurations =\n  (typeof PROVIDERS_WITH_WORKSPACE_CONFIGURATIONS)[number];\n\nexport const CREDENTIALS_PROVIDERS = [\n  \"snowflake\",\n  \"modjo\",\n  \"bigquery\",\n  \"salesforce\",\n] as const;\nexport type CredentialsProvider = (typeof CREDENTIALS_PROVIDERS)[number];\n\nexport function isCredentialProvider(obj: unknown): obj is CredentialsProvider {\n  return CREDENTIALS_PROVIDERS.includes(obj as CredentialsProvider);\n}\n\nexport function isProviderWithWorkspaceConfiguration(\n  obj: unknown\n): obj is ProvidersWithWorkspaceConfigurations {\n  return PROVIDERS_WITH_WORKSPACE_CONFIGURATIONS.includes(\n    obj as ProvidersWithWorkspaceConfigurations\n  );\n}\n\n// Credentials\n\nexport const SnowflakeCredentialsSchema = t.type({\n  username: t.string,\n  password: t.string,\n  account: t.string,\n  role: t.string,\n  warehouse: t.string,\n});\nexport type SnowflakeCredentials = t.TypeOf<typeof SnowflakeCredentialsSchema>;\n\nexport const CheckBigQueryCredentialsSchema = t.type({\n  type: t.string,\n  project_id: t.string,\n  private_key_id: t.string,\n  private_key: t.string,\n  client_email: t.string,\n  client_id: t.string,\n  auth_uri: t.string,\n  token_uri: t.string,\n  auth_provider_x509_cert_url: t.string,\n  client_x509_cert_url: t.string,\n  universe_domain: t.string,\n});\n\nexport type CheckBigQueryCredentials = t.TypeOf<\n  typeof CheckBigQueryCredentialsSchema\n>;\n\nexport const BigQueryCredentialsWithLocationSchema = t.type({\n  type: t.string,\n  project_id: t.string,\n  private_key_id: t.string,\n  private_key: t.string,\n  client_email: t.string,\n  client_id: t.string,\n  auth_uri: t.string,\n  token_uri: t.string,\n  auth_provider_x509_cert_url: t.string,\n  client_x509_cert_url: t.string,\n  universe_domain: t.string,\n  location: t.string,\n});\n\nexport type BigQueryCredentialsWithLocation = t.TypeOf<\n  typeof BigQueryCredentialsWithLocationSchema\n>;\n\nexport const ApiKeyCredentialsSchema = t.type({\n  api_key: t.string,\n});\nexport type ModjoCredentials = t.TypeOf<typeof ApiKeyCredentialsSchema>;\n\nexport const SalesforceCredentialsSchema = t.type({\n  client_id: t.string,\n  client_secret: t.string,\n});\nexport type SalesforceCredentials = t.TypeOf<\n  typeof SalesforceCredentialsSchema\n>;\n\nexport type ConnectionCredentials =\n  | SnowflakeCredentials\n  | ModjoCredentials\n  | BigQueryCredentialsWithLocation\n  | SalesforceCredentials;\n\nexport function isSnowflakeCredentials(\n  credentials: ConnectionCredentials\n): credentials is SnowflakeCredentials {\n  return \"username\" in credentials && \"password\" in credentials;\n}\n\nexport function isModjoCredentials(\n  credentials: ConnectionCredentials\n): credentials is ModjoCredentials {\n  return \"api_key\" in credentials;\n}\n\nexport function isBigQueryWithLocationCredentials(\n  credentials: ConnectionCredentials\n): credentials is BigQueryCredentialsWithLocation {\n  return (\n    \"type\" in credentials &&\n    \"project_id\" in credentials &&\n    \"location\" in credentials\n  );\n}\n\nexport function isSalesforceCredentials(\n  credentials: ConnectionCredentials\n): credentials is SalesforceCredentials {\n  return \"client_id\" in credentials && \"client_secret\" in credentials;\n}\n\nexport type OauthAPIPostCredentialsResponse = {\n  credential: {\n    credential_id: string;\n    provider: CredentialsProvider;\n    created: number;\n  };\n};\n\nexport type OauthAPIGetCredentialsResponse = {\n  credential: {\n    credential_id: string;\n    created: number;\n    provider: CredentialsProvider;\n    metadata: {\n      workspace_id: string;\n      user_id: string;\n    };\n    content: ConnectionCredentials;\n  };\n};\n","import { LightWorkspaceType } from \"../../front/user\";\nimport {\n  isOAuthConnectionType,\n  OAuthConnectionType,\n  OAuthProvider,\n  OAuthUseCase,\n} from \"../../oauth/lib\";\nimport { Err, Ok, Result } from \"../../shared/result\";\n\nexport async function setupOAuthConnection({\n  dustClientFacingUrl,\n  owner,\n  provider,\n  useCase,\n  extraConfig,\n}: {\n  dustClientFacingUrl: string;\n  owner: LightWorkspaceType;\n  provider: OAuthProvider;\n  useCase: OAuthUseCase;\n  extraConfig: Record<string, string>;\n}): Promise<Result<OAuthConnectionType, Error>> {\n  return new Promise((resolve) => {\n    let url = `${dustClientFacingUrl}/w/${owner.sId}/oauth/${provider}/setup?useCase=${useCase}`;\n    if (extraConfig) {\n      url += `&extraConfig=${encodeURIComponent(JSON.stringify(extraConfig))}`;\n    }\n    const oauthPopup = window.open(url);\n    let authComplete = false;\n\n    const popupMessageEventListener = (event: MessageEvent) => {\n      if (event.origin !== window.location.origin) {\n        return;\n      }\n\n      if (event.data.type === \"connection_finalized\") {\n        authComplete = true;\n        const connection = event.data.connection;\n        if (isOAuthConnectionType(connection)) {\n          resolve(new Ok(connection));\n        } else {\n          resolve(\n            new Err(\n              new Error(\"Invalid connection data received from auth window\")\n            )\n          );\n        }\n        window.removeEventListener(\"message\", popupMessageEventListener);\n        oauthPopup?.close();\n      }\n    };\n\n    window.addEventListener(\"message\", popupMessageEventListener);\n\n    const checkPopupStatus = setInterval(() => {\n      if (oauthPopup && oauthPopup.closed) {\n        window.removeEventListener(\"message\", popupMessageEventListener);\n        clearInterval(checkPopupStatus);\n        setTimeout(() => {\n          if (!authComplete) {\n            resolve(\n              new Err(new Error(\"User closed the window before auth completed\"))\n            );\n          }\n        }, 100);\n      }\n    }, 100);\n  });\n}\n","import { StatsD } from \"hot-shots\";\n\nlet statsDClient: StatsD | undefined = undefined;\n\nexport function getStatsDClient(): StatsD {\n  if (!statsDClient) {\n    statsDClient = new StatsD();\n  }\n  return statsDClient;\n}\n","import { createClient } from \"redis\";\n\nimport { getStatsDClient } from \"./statsd\";\n\nexport type RedisUsageTagsType = \"cache_with_redis\" | \"rate_limiter\";\n\nexport async function redisClient({\n  origin,\n  redisUri,\n}: {\n  origin: RedisUsageTagsType;\n  redisUri: string;\n}) {\n  const statsDClient = getStatsDClient();\n\n  const client = createClient({\n    url: redisUri,\n  });\n  client.on(\"error\", (err) => console.log(\"Redis Client Error\", err));\n  client.on(\"connect\", () => {\n    statsDClient.increment(\"redis.connection.count\", 1, [origin]);\n  });\n  client.on(\"end\", () => {\n    statsDClient.decrement(\"redis.connection.count\", 1, [origin]);\n  });\n\n  await client.connect();\n\n  return client;\n}\n","import { redisClient } from \"../shared/redis_client\";\n\n// JSON-serializable primitive types.\ntype JsonPrimitive = string | number | boolean | null;\n\n// Recursive type to check if a type is JSON-serializable.\ntype RecursiveJsonSerializable<T> = T extends JsonPrimitive\n  ? T\n  : T extends Array<infer U>\n  ? RecursiveJsonSerializable<U>[]\n  : T extends object\n  ? { [K in keyof T]: RecursiveJsonSerializable<T[K]> }\n  : never;\n\n// Helper type to check if a type is 'never'.\ntype IsNever<T> = [T] extends [never] ? true : false;\n\n/**\n * Ensures that a type is strictly JSON-serializable.\n * If T is not JSON-serializable, this type resolves to 'never'.\n */\nexport type JsonSerializable<T> = IsNever<\n  Exclude<RecursiveJsonSerializable<T>, T>\n> extends true\n  ? T\n  : never;\n\ntype CacheableFunction<T, Args extends unknown[]> = (\n  ...args: Args\n) => Promise<T>;\n\ntype KeyResolver<Args extends unknown[]> = (...args: Args) => string;\n\n// Wrapper function to cache the result of a function with Redis.\n// Usage:\n// const cachedFn = cacheWithRedis(fn, (fnArg1, fnArg2, ...) => `${fnArg1}-${fnArg2}`, 60 * 10 * 1000);\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n// if caching big objects, there is a possible race condition (mulitple calls to\n// caching), therefore, we use a lock\nexport function cacheWithRedis<T, Args extends unknown[]>(\n  fn: CacheableFunction<JsonSerializable<T>, Args>,\n  resolver: KeyResolver<Args>,\n  ttlMs: number,\n  redisUri?: string\n): (...args: Args) => Promise<JsonSerializable<T>> {\n  if (ttlMs > 60 * 60 * 24 * 1000) {\n    throw new Error(\"ttlMs should be less than 24 hours\");\n  }\n\n  return async function (...args: Args): Promise<JsonSerializable<T>> {\n    if (!redisUri) {\n      const REDIS_CACHE_URI = process.env.REDIS_CACHE_URI;\n      if (!REDIS_CACHE_URI) {\n        throw new Error(\"REDIS_CACHE_URI is not set\");\n      }\n      redisUri = REDIS_CACHE_URI;\n    }\n    let redisCli: Awaited<ReturnType<typeof redisClient>> | undefined =\n      undefined;\n\n    const key = `cacheWithRedis-${fn.name}-${resolver(...args)}`;\n\n    try {\n      redisCli = await redisClient({\n        origin: \"cache_with_redis\",\n        redisUri,\n      });\n      let cacheVal = await redisCli.get(key);\n      if (cacheVal) {\n        return JSON.parse(cacheVal) as JsonSerializable<T>;\n      }\n\n      // specific try-finally to ensure unlock is called only after lock\n      try {\n        // if value not found, lock, recheck and set\n        // we avoid locking for the first read to allow parallel calls to redis if the value is set\n        await lock(key);\n        cacheVal = await redisCli.get(key);\n        if (cacheVal) {\n          return JSON.parse(cacheVal) as JsonSerializable<T>;\n        }\n\n        const result = await fn(...args);\n        await redisCli.set(key, JSON.stringify(result), {\n          PX: ttlMs,\n        });\n        return result;\n      } finally {\n        unlock(key);\n      }\n    } finally {\n      if (redisCli) {\n        await redisCli.quit();\n      }\n    }\n  };\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nconst locks: Record<string, (() => void)[]> = {};\n\nasync function lock(key: string) {\n  return new Promise<void>((resolve) => {\n    if (locks[key]) {\n      locks[key].push(resolve);\n    } else {\n      // use array to allow multiple locks\n      // array set to empty indicates first lock\n      locks[key] = [];\n      resolve();\n    }\n  });\n}\n\nfunction unlock(key: string) {\n  if (locks[key] === undefined) {\n    throw new Error(\"Unreachable: unlock called without lock\");\n  }\n\n  if (locks[key].length === 0) {\n    delete locks[key];\n    return;\n  }\n\n  const unlockFn = locks[key].pop();\n  if (!unlockFn) {\n    throw new Error(\"Unreachable: unlock called without lock\");\n  }\n  unlockFn();\n}\n","import * as child_process from \"child_process\";\n\nimport { LoggerInterface } from \"./logger\";\n\nconst { SLACK_USER_OPERATION_BOT_TOKEN, NODE_ENV } = process.env;\n\n// We might want to delete this, once we make progress out of Sequelize synchronisation.\nexport async function sendInitDbMessage({\n  service,\n  logger,\n}: {\n  service: string;\n  logger: LoggerInterface;\n}) {\n  if (NODE_ENV !== \"production\") {\n    return;\n  }\n\n  if (!SLACK_USER_OPERATION_BOT_TOKEN) {\n    logger.info({}, \"SLACK_USER_OPERATION_BOT_TOKEN is not set\");\n    return;\n  }\n\n  // get the current commit id\n  let commitId = \"unknown\";\n\n  try {\n    commitId = child_process.execSync(\"git rev-parse HEAD\").toString().trim();\n  } catch (error) {\n    logger.error({}, \"Failed to get commit id\");\n  }\n\n  const message = `papertrail: \\`initdb\\` has been initiated. Service: \\`${service}\\`. CommitId: \\`${commitId}\\``;\n\n  try {\n    const res = await fetch(\"https://slack.com/api/chat.postMessage\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${SLACK_USER_OPERATION_BOT_TOKEN}`,\n      },\n      body: JSON.stringify({\n        channel: \"deployments\",\n        text: \"\",\n        blocks: [\n          {\n            type: \"section\",\n            text: {\n              type: \"mrkdwn\",\n              text: message,\n            },\n          },\n        ],\n        mrkdown: true,\n      }),\n    });\n\n    const jsonRes = await res.json();\n    if (!jsonRes.ok) {\n      logger.error(\n        { error: jsonRes.error },\n        \"Failed to send slack message(1).\"\n      );\n    }\n  } catch (error) {\n    logger.error({ error: error }, \"Failed to send slack message(2).\");\n  }\n}\n","export const WHITELISTABLE_FEATURES = [\n  \"usage_data_api\",\n  \"okta_enterprise_connection\",\n  \"labs_transcripts\",\n  \"labs_transcripts_full_storage\",\n  \"document_tracker\",\n  \"openai_o1_feature\",\n  \"openai_o1_mini_feature\",\n  \"openai_o1_high_reasoning_feature\",\n  \"openai_o1_custom_assistants_feature\",\n  \"openai_o1_high_reasoning_custom_assistants_feature\",\n  \"deepseek_feature\",\n  \"google_ai_studio_experimental_models_feature\",\n  \"index_private_slack_channel\",\n  \"disable_run_logs\",\n  \"labs_trackers\",\n  \"show_debug_tools\",\n  \"labs_github_actions\",\n  \"deepseek_r1_global_agent_feature\",\n  \"salesforce_feature\",\n  \"advanced_notion_management\",\n  \"attach_from_datasources\",\n  \"force_gdrive_labels_scope\",\n] as const;\nexport type WhitelistableFeature = (typeof WHITELISTABLE_FEATURES)[number];\nexport function isWhitelistableFeature(\n  feature: unknown\n): feature is WhitelistableFeature {\n  return WHITELISTABLE_FEATURES.includes(feature as WhitelistableFeature);\n}\n","import { ConnectorProvider } from \"../front/data_source\";\n\n/**\n * This is a utility type that indicates that we removed all underscores from a string.\n * This is used because we don't want underscores in mime types and remove them from connector providers.\n */\ntype WithoutUnderscores<T extends string> = T extends `${infer A}_${infer B}`\n  ? WithoutUnderscores<`${A}${B}`> // operates recursively to remove all underscores\n  : T;\n\n/**\n * This is a utility type that indicates that we replaced all underscores with dashes in a string.\n * We don't want underscores in mime types but want to type out the type with one: MIME_TYPE.CAT.SOU_PI_NOU\n */\ntype UnderscoreToDash<T extends string> = T extends `${infer A}_${infer B}`\n  ? UnderscoreToDash<`${A}-${B}`> // operates recursively to replace all underscores\n  : T;\n\n/**\n * This function generates mime types for a given provider and resource types.\n * The mime types are in the format `application/vnd.dust.PROVIDER.RESOURCE_TYPE`.\n * Notes:\n * - The underscores in the provider name are stripped in the generated mime type.\n * - The underscores in the resource type are replaced with dashes in the generated mime type.\n */\nfunction generateMimeTypes<\n  P extends ConnectorProvider,\n  T extends Uppercase<string>[]\n>({\n  provider,\n  resourceTypes,\n}: {\n  provider: P;\n  resourceTypes: T;\n}): {\n  [K in T[number]]: `application/vnd.dust.${WithoutUnderscores<P>}.${Lowercase<\n    UnderscoreToDash<K>\n  >}`;\n} {\n  return resourceTypes.reduce(\n    (acc, s) => ({\n      ...acc,\n      [s]: `application/vnd.dust.${provider.replace(\"_\", \"\")}.${s\n        .replace(\"_\", \"-\")\n        .toLowerCase()}`,\n    }),\n    {} as {\n      [K in T[number]]: `application/vnd.dust.${WithoutUnderscores<P>}.${Lowercase<\n        UnderscoreToDash<K>\n      >}`;\n    }\n  );\n}\n\nexport const MIME_TYPES = {\n  CONFLUENCE: generateMimeTypes({\n    provider: \"confluence\",\n    resourceTypes: [\"SPACE\", \"PAGE\"],\n  }),\n  GITHUB: generateMimeTypes({\n    provider: \"github\",\n    resourceTypes: [\n      \"REPOSITORY\",\n      \"CODE_ROOT\",\n      \"CODE_DIRECTORY\",\n      \"CODE_FILE\",\n      // ISSUES is the folder containing all issues.\n      \"ISSUES\",\n      // ISSUE is a single issue.\n      \"ISSUE\",\n      // DISCUSSIONS is the folder containing all discussions.\n      \"DISCUSSIONS\",\n      // DISCUSSION is a single discussion.\n      \"DISCUSSION\",\n    ],\n  }),\n  GOOGLE_DRIVE: generateMimeTypes({\n    provider: \"google_drive\",\n    // Spreadsheets may contain many sheets, thus resemble folders and are\n    // stored as such, but with the special mimeType below.\n    // For files and sheets, we keep Google's mime types.\n    resourceTypes: [\"SHARED_WITH_ME\", \"FOLDER\", \"SPREADSHEET\"],\n  }),\n  INTERCOM: generateMimeTypes({\n    provider: \"intercom\",\n    resourceTypes: [\n      \"COLLECTION\",\n      \"TEAMS_FOLDER\",\n      \"CONVERSATION\",\n      \"TEAM\",\n      \"ARTICLE\",\n      \"HELP_CENTER\",\n    ],\n  }),\n  MICROSOFT: generateMimeTypes({\n    provider: \"microsoft\",\n    // Spreadsheets may contain many sheets, thus resemble folders and are\n    // stored as such, but with the special mimeType below.\n    // For files and sheets, we keep Microsoft's mime types.\n    resourceTypes: [\"FOLDER\", \"SPREADSHEET\"],\n  }),\n  NOTION: generateMimeTypes({\n    provider: \"notion\",\n    resourceTypes: [\"UNKNOWN_FOLDER\", \"SYNCING_FOLDER\", \"DATABASE\", \"PAGE\"],\n  }),\n  SLACK: generateMimeTypes({\n    provider: \"slack\",\n    resourceTypes: [\"CHANNEL\", \"THREAD\", \"MESSAGES\"],\n  }),\n  SNOWFLAKE: generateMimeTypes({\n    provider: \"snowflake\",\n    resourceTypes: [\"DATABASE\", \"SCHEMA\", \"TABLE\"],\n  }),\n  WEBCRAWLER: generateMimeTypes({\n    provider: \"webcrawler\",\n    resourceTypes: [\"FOLDER\"], // pages are upserted as text/html, not an internal mime type\n  }),\n  ZENDESK: generateMimeTypes({\n    provider: \"zendesk\",\n    resourceTypes: [\n      \"BRAND\",\n      \"HELP_CENTER\",\n      \"CATEGORY\",\n      \"ARTICLE\",\n      // TICKETS is the folder containing all tickets.\n      \"TICKETS\",\n      // TICKET is a single ticket.\n      \"TICKET\",\n    ],\n  }),\n  BIGQUERY: generateMimeTypes({\n    provider: \"bigquery\",\n    resourceTypes: [\"DATABASE\", \"SCHEMA\", \"TABLE\"],\n  }),\n  SALESFORCE: generateMimeTypes({\n    provider: \"salesforce\",\n    resourceTypes: [\"DATABASE\", \"SCHEMA\", \"TABLE\"],\n  }),\n  GONG: generateMimeTypes({\n    provider: \"gong\",\n    resourceTypes: [\"TRANSCRIPT\", \"TRANSCRIPT_FOLDER\"],\n  }),\n};\n\nexport type BigQueryMimeType =\n  (typeof MIME_TYPES.BIGQUERY)[keyof typeof MIME_TYPES.BIGQUERY];\n\nexport type ConfluenceMimeType =\n  (typeof MIME_TYPES.CONFLUENCE)[keyof typeof MIME_TYPES.CONFLUENCE];\n\nexport type GithubMimeType =\n  (typeof MIME_TYPES.GITHUB)[keyof typeof MIME_TYPES.GITHUB];\n\nexport type GoogleDriveMimeType =\n  (typeof MIME_TYPES.GOOGLE_DRIVE)[keyof typeof MIME_TYPES.GOOGLE_DRIVE];\n\nexport type IntercomMimeType =\n  (typeof MIME_TYPES.INTERCOM)[keyof typeof MIME_TYPES.INTERCOM];\n\nexport type MicrosoftMimeType =\n  (typeof MIME_TYPES.MICROSOFT)[keyof typeof MIME_TYPES.MICROSOFT];\n\nexport type NotionMimeType =\n  (typeof MIME_TYPES.NOTION)[keyof typeof MIME_TYPES.NOTION];\n\nexport type SlackMimeType =\n  (typeof MIME_TYPES.SLACK)[keyof typeof MIME_TYPES.SLACK];\n\nexport type SnowflakeMimeType =\n  (typeof MIME_TYPES.SNOWFLAKE)[keyof typeof MIME_TYPES.SNOWFLAKE];\n\nexport type WebcrawlerMimeType =\n  (typeof MIME_TYPES.WEBCRAWLER)[keyof typeof MIME_TYPES.WEBCRAWLER];\n\nexport type ZendeskMimeType =\n  (typeof MIME_TYPES.ZENDESK)[keyof typeof MIME_TYPES.ZENDESK];\n\nexport type SalesforceMimeType =\n  (typeof MIME_TYPES.SALESFORCE)[keyof typeof MIME_TYPES.SALESFORCE];\n\nexport type DustMimeType =\n  | BigQueryMimeType\n  | ConfluenceMimeType\n  | GithubMimeType\n  | GoogleDriveMimeType\n  | IntercomMimeType\n  | MicrosoftMimeType\n  | NotionMimeType\n  | SlackMimeType\n  | SnowflakeMimeType\n  | WebcrawlerMimeType\n  | ZendeskMimeType\n  | SalesforceMimeType;\n","import { v4 as uuidv4 } from \"uuid\";\n\nimport { MaxMessagesTimeframeType } from \"../front/plan\";\nimport { LoggerInterface } from \"../shared/logger\";\nimport { redisClient, RedisUsageTagsType } from \"../shared/redis_client\";\nimport { Err, Ok, Result } from \"./result\";\nimport { getStatsDClient } from \"./statsd\";\n\nexport class RateLimitError extends Error {}\n\nlet rateLimiterRedisClient: Awaited<ReturnType<typeof redisClient>> | undefined;\n\nasync function getRedisClient({\n  origin,\n  redisUri,\n}: {\n  origin: RedisUsageTagsType;\n  redisUri?: string;\n}) {\n  const REDIS_URI = redisUri || process.env.REDIS_URI;\n  if (!REDIS_URI) {\n    throw new Error(\"REDIS_URI is not defined\");\n  }\n\n  if (!rateLimiterRedisClient) {\n    rateLimiterRedisClient = await redisClient({\n      origin,\n      redisUri: REDIS_URI,\n    });\n  }\n\n  return rateLimiterRedisClient;\n}\n\nexport const RATE_LIMITER_PREFIX = \"rate_limiter\";\n\nconst makeRateLimiterKey = (key: string) => `${RATE_LIMITER_PREFIX}:${key}`;\n\ninterface RateLimiterOptionsBase {\n  key: string;\n  redisUri?: string;\n}\n\nexport async function rateLimiter({\n  key,\n  maxPerTimeframe,\n  timeframeSeconds,\n  logger,\n  redisUri,\n}: {\n  logger: LoggerInterface;\n  maxPerTimeframe: number;\n  timeframeSeconds: number;\n} & RateLimiterOptionsBase): Promise<number> {\n  const statsDClient = getStatsDClient();\n\n  const now = new Date();\n  const redisKey = makeRateLimiterKey(key);\n  const tags: string[] = [];\n\n  let redis: undefined | Awaited<ReturnType<typeof redisClient>> = undefined;\n  try {\n    redis = await getRedisClient({ origin: \"rate_limiter\", redisUri });\n\n    const zcountRes = await redis.zCount(\n      redisKey,\n      new Date().getTime() - timeframeSeconds * 1000,\n      \"+inf\"\n    );\n    const remaining = maxPerTimeframe - zcountRes;\n    if (remaining > 0) {\n      await redis.zAdd(redisKey, {\n        score: new Date().getTime(),\n        value: uuidv4(),\n      });\n      await redis.expire(redisKey, timeframeSeconds * 2);\n    } else {\n      statsDClient.increment(\"ratelimiter.exceeded.count\", 1, tags);\n    }\n    const totalTimeMs = new Date().getTime() - now.getTime();\n\n    statsDClient.distribution(\n      \"ratelimiter.latency.distribution\",\n      totalTimeMs,\n      tags\n    );\n\n    return remaining > 0 ? remaining : 0;\n  } catch (e) {\n    statsDClient.increment(\"ratelimiter.error.count\", 1, tags);\n    logger.error(\n      {\n        key,\n        maxPerTimeframe,\n        timeframeSeconds,\n        error: e,\n      },\n      `RateLimiter error`\n    );\n\n    // In case of error on our side, we allow the request.\n    return 1;\n  }\n}\n\nexport async function expireRateLimiterKey({\n  key,\n  redisUri,\n}: RateLimiterOptionsBase): Promise<Result<boolean, Error>> {\n  let redis: undefined | Awaited<ReturnType<typeof redisClient>> = undefined;\n\n  try {\n    redis = await getRedisClient({ origin: \"rate_limiter\", redisUri });\n    const redisKey = makeRateLimiterKey(key);\n\n    const isExpired = await redis.expire(redisKey, 0);\n\n    return new Ok(isExpired);\n  } catch (err) {\n    return new Err(err as Error);\n  }\n}\n\nexport function getTimeframeSecondsFromLiteral(\n  timeframeLiteral: MaxMessagesTimeframeType\n): number {\n  switch (timeframeLiteral) {\n    case \"day\":\n      return 60 * 60 * 24; // 1 day.\n\n    // Lifetime is intentionally mapped to a 30-day period.\n    case \"lifetime\":\n      return 60 * 60 * 24 * 30; // 30 days.\n\n    default:\n      return 0;\n  }\n}\n","import { LoggerInterface } from \"./logger\";\n\ntype RetryOptions = {\n  retries?: number;\n  delayBetweenRetriesMs?: number;\n};\n\nexport function withRetries<T, U>(\n  logger: LoggerInterface,\n  fn: (arg: T) => Promise<U>,\n  { retries = 10, delayBetweenRetriesMs = 1000 }: RetryOptions = {}\n): (arg: T & RetryOptions) => Promise<U> {\n  if (retries < 1) {\n    throw new Error(\"retries must be >= 1\");\n  }\n  return async (arg) => {\n    const errors = [];\n    for (let i = 0; i < retries; i++) {\n      try {\n        return await fn(arg);\n      } catch (e) {\n        const sleepTime = delayBetweenRetriesMs * (i + 1) ** 2;\n        logger.warn(\n          {\n            error: e,\n            attempt: i + 1,\n            retries: retries,\n            sleepTime: sleepTime,\n          },\n          \"Error while executing retriable function. Retrying...\"\n        );\n        await new Promise((resolve) => setTimeout(resolve, sleepTime));\n        errors.push(e);\n      }\n    }\n\n    throw new Error(errors.join(\"\\n\"));\n  };\n}\n","import { Parser } from \"htmlparser2\";\nimport { Readable, Transform } from \"stream\";\n\ninterface ParserState {\n  insidePage: boolean;\n  pageDepth: number;\n  pageNumber: number;\n  currentPageBuffer: string;\n}\n\nexport function createPageMetadataPrefix({\n  pageNumber,\n  prefix,\n}: {\n  pageNumber: number;\n  prefix: string;\n}): string {\n  return `${prefix}: ${pageNumber}`;\n}\n\n/**\n * A Transform stream that processes HTML data from a Readable stream, extracts text from specific\n * \"page\" <div> elements (identified by a known CSS class), and prefixes each extracted page's text\n * with some custom metadata. Each complete page is pushed downstream as it is encountered.\n *\n * @param input - A Node.js Readable stream containing HTML\n * @param prefix - A prefix string included in the page metadata\n * @param pageSelector - The CSS class on <div> that identifies a page boundary\n * @returns A new Readable stream that emits text for each page, prefixed by metadata\n *\n * How it works:\n * 1. We create a single HTML parser (Parser) instance that listens to events:\n *    - onopentag: Detects when we enter a <div class=\"pageSelector\"> (or nested)\n *    - ontext: Accumulates text if we are currently inside a page div\n *    - onclosetag: Detects when we leave a page div; if that ends the page div,\n *      we emit the stored text plus metadata\n *    - onerror: Destroys the transform if a parsing error occurs\n *\n * 2. We wrap this parser in a Node Transform stream so we can:\n *    - pipe HTML input into it (input.pipe(htmlParsingTransform))\n *    - feed data chunks into the parser\n *    - flush final content in _flush if the stream ends while still inside a page\n *\n * 3. Each completed page is emitted downstream in text form with a custom prefix block\n */\nexport function transformStream(\n  input: Readable,\n  prefix: string,\n  pageSelector: string\n): Readable {\n  // Track parser state.\n  const state: ParserState = {\n    insidePage: false,\n    pageDepth: 0,\n    pageNumber: 0,\n    currentPageBuffer: \"\",\n  };\n\n  // Create a single parser instance for the entire stream.\n  const parser = new Parser(\n    {\n      onopentag(name, attribs) {\n        // If this open tag is <div class=\"pageSelector\">, we've encountered a new page.\n        // We'll track nested divs in case they exist inside the page container.\n        if (name === \"div\" && attribs.class === pageSelector) {\n          if (!state.insidePage) {\n            state.insidePage = true;\n            state.pageDepth = 1;\n          } else {\n            state.pageDepth++;\n          }\n        } else if (state.insidePage) {\n          // If we're already inside a page, any new tag increases the nesting depth.\n          state.pageDepth++;\n        }\n      },\n\n      ontext(text) {\n        // If in the page region, accumulate the text, removing or replacing artifacts\n        if (state.insidePage) {\n          // Replaces &#13; (carriage return) with nothing, and trims the text.\n          // Append a space to keep some spacing between tokens\n          state.currentPageBuffer += text.replace(\"&#13;\", \"\").trim() + \" \";\n        }\n      },\n\n      onclosetag() {\n        // If we're inside a page, decrement the nesting depth each time a tag closes.\n        if (state.insidePage) {\n          state.pageDepth--;\n\n          // If pageDepth==0, we've closed the outermost page div => a page is complete.\n          if (state.pageDepth === 0) {\n            state.insidePage = false;\n\n            // If there's any text in the buffer, emit it as a new chunk prefixed with metadata.\n            if (state.currentPageBuffer.trim()) {\n              htmlParsingTransform.push(\n                `\\n${createPageMetadataPrefix({\n                  pageNumber: state.pageNumber,\n                  prefix,\n                })}\\n${state.currentPageBuffer.trim()}\\n`\n              );\n            }\n\n            // Reset for next page.\n            state.pageNumber++;\n            state.currentPageBuffer = \"\";\n          }\n        }\n      },\n\n      onerror(err) {\n        // If we encounter a parser error, destroy the transform with that error.\n        htmlParsingTransform.destroy(err);\n      },\n    },\n    { decodeEntities: true } // Instruct parser to decode HTML entities like &amp.\n  );\n\n  // Create transform stream.\n  const htmlParsingTransform = new Transform({\n    objectMode: true,\n\n    transform(chunk: Buffer, _encoding, callback) {\n      try {\n        parser.write(chunk.toString());\n        callback();\n      } catch (error) {\n        if (error instanceof Error) {\n          callback(error);\n        } else {\n          callback(\n            new Error(\n              typeof error === \"string\"\n                ? error\n                : \"Unknown error in htmlParsingTransform.transform()\"\n            )\n          );\n        }\n      }\n    },\n\n    flush(callback) {\n      try {\n        // Signal to the parser that we're done (end of the HTML input).\n        parser.end();\n\n        // If we ended the stream while still inside a page, emit any leftover text.\n        if (state.insidePage && state.currentPageBuffer.trim()) {\n          this.push(\n            `\\n${createPageMetadataPrefix({\n              pageNumber: state.pageNumber,\n              prefix,\n            })}\\n${state.currentPageBuffer.trim()}\\n`\n          );\n        }\n\n        callback();\n      } catch (error) {\n        if (error instanceof Error) {\n          callback(error);\n        } else {\n          callback(\n            new Error(\n              typeof error === \"string\"\n                ? error\n                : \"Unknown error in htmlParsingTransform.flush()\"\n            )\n          );\n        }\n      }\n    },\n  });\n\n  // Handle errors on both streams.\n  input.on(\"error\", (error) => htmlParsingTransform.destroy(error));\n  htmlParsingTransform.on(\"error\", (error) => input.destroy(error));\n\n  // Pipe the input HTML stream through our transform and return the result\n  return input.pipe(htmlParsingTransform);\n}\n","import { stringify } from \"csv-stringify/sync\";\nimport { Parser } from \"htmlparser2\";\nimport { Readable, Transform } from \"stream\";\n\nimport { TABLE_PREFIX } from \"../../front/files\";\n\ninterface ParserState {\n  tags: string[];\n  currentRow: string[];\n}\n\nconst HTML_TAGS = {\n  ROW: \"tr\",\n  CELL: \"td\",\n} as const;\n\n/**\n * A Transform stream that processes HTML data from a Readable stream, extracts text from tables\n * and converts it to CSV format. It handles two specific cases:\n * 1. Text within elements matching the selector, which gets prefixed with TABLE_PREFIX\n * 2. Content within table cells (<td>), which gets converted to CSV format\n *\n * @param input - A Node.js Readable stream containing HTML\n * @param selector - A tag name to match for direct text extraction (prefixed with TABLE_PREFIX)\n * @returns A new Readable stream that emits the processed text in CSV format\n *\n * How it works:\n * 1. We create a single HTML parser (Parser) instance that listens to events:\n *    - onopentag: Tracks the current tag stack\n *    - ontext:\n *      * If inside selector-matched element: adds text with TABLE_PREFIX\n *      * If inside <td>: collects text for current row\n *    - onclosetag: When a </tr> is encountered, converts the collected row to CSV\n *    - onerror: Destroys the transform if a parsing error occurs\n *\n * 2. We wrap this parser in a Node Transform stream to:\n *    - pipe HTML input into it\n *    - process data chunks through the parser\n *    - handle proper stream cleanup in flush\n */\nexport function transformStreamToCSV(\n  input: Readable,\n  selector: string\n): Readable {\n  // Track parser state.\n  const state: ParserState = {\n    tags: [],\n    currentRow: [],\n  };\n\n  // Create a single parser instance for the entire stream.\n  const parser = new Parser(\n    {\n      onopentag(name) {\n        state.tags.push(name);\n      },\n\n      ontext(text) {\n        const currentTag = state.tags[state.tags.length - 1];\n\n        if (currentTag === selector) {\n          htmlParsingTransform.push(`${TABLE_PREFIX}${text}\\n`);\n        } else if (currentTag === HTML_TAGS.CELL) {\n          state.currentRow.push(text);\n        }\n      },\n\n      onclosetag(name) {\n        const lastTag = state.tags.pop();\n        if (name !== lastTag) {\n          throw new Error(\"Invalid tag order\");\n        } else {\n          if (lastTag === HTML_TAGS.ROW) {\n            const csv = stringify([state.currentRow]);\n            htmlParsingTransform.push(csv);\n            state.currentRow = [];\n          }\n        }\n      },\n\n      onerror(err) {\n        // If we encounter a parser error, destroy the transform with that error.\n        htmlParsingTransform.destroy(err);\n      },\n    },\n    { decodeEntities: true } // Instruct parser to decode HTML entities like &amp.\n  );\n\n  // Create transform stream.\n  const htmlParsingTransform = new Transform({\n    objectMode: true,\n\n    transform(chunk: Buffer, _encoding, callback) {\n      try {\n        parser.write(chunk.toString());\n        callback();\n      } catch (error) {\n        if (error instanceof Error) {\n          callback(error);\n        } else {\n          callback(\n            new Error(\n              typeof error === \"string\"\n                ? error\n                : \"Unknown error in htmlParsingTransform.transform()\"\n            )\n          );\n        }\n      }\n    },\n\n    flush(callback) {\n      try {\n        // Signal to the parser that we're done (end of the HTML input).\n        parser.end();\n\n        callback();\n      } catch (error) {\n        if (error instanceof Error) {\n          callback(error);\n        } else {\n          callback(\n            new Error(\n              typeof error === \"string\"\n                ? error\n                : \"Unknown error in htmlParsingTransform.flush()\"\n            )\n          );\n        }\n      }\n    },\n  });\n\n  // Handle errors on both streams.\n  input.on(\"error\", (error) => htmlParsingTransform.destroy(error));\n  htmlParsingTransform.on(\"error\", (error) => input.destroy(error));\n\n  // Pipe the input HTML stream through our transform and return the result\n  return input.pipe(htmlParsingTransform);\n}\n","//import { PassThrough, Transform } from \"node:stream\";\n\nimport { isLeft } from \"fp-ts/Either\";\nimport { Parser } from \"htmlparser2\";\nimport * as t from \"io-ts\";\nimport * as reporter from \"io-ts-reporters\";\nimport { Readable } from \"stream\";\n\nimport { LoggerInterface } from \"../logger\";\nimport { Err, Ok, Result } from \"../result\";\nimport { withRetries } from \"../retries\";\nimport { assertNever } from \"../utils/assert_never\";\nimport {\n  readableStreamToReadable,\n  RequestInitWithDuplex,\n} from \"../utils/streams\";\nimport { transformStream } from \"./transform\";\nimport { transformStreamToCSV } from \"./transformToCSV\";\n\n// Define the codec for the response.\nconst TikaResponseCodec = t.type({\n  \"Content-Type\": t.string,\n  \"X-TIKA:content\": t.string,\n});\n\n// Define the type for the decoded response\ntype TikaResponse = t.TypeOf<typeof TikaResponseCodec>;\n\ninterface PageContent {\n  pageNumber: number;\n  content: string;\n}\n\nexport const pagePrefixesPerMimeType: Record<string, string> = {\n  \"application/pdf\": \"$pdfPage\",\n  \"application/vnd.openxmlformats-officedocument.presentationml.presentation\":\n    \"$slideNumber\",\n};\n\n// All those content types are supported by the Tika server.\n// Before adding a new content type, make sure to test it.\nconst supportedContentTypes = [\n  \"application/pdf\",\n  \"application/msword\",\n  \"application/vnd.ms-powerpoint\",\n  \"application/vnd.openxmlformats-officedocument.presentationml.presentation\",\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n  \"application/vnd.ms-excel\",\n] as const;\n\ntype SupportedContentTypes = (typeof supportedContentTypes)[number];\n\ntype ContentTypeConfig = {\n  [key in SupportedContentTypes]?: {\n    handler: \"html\" | \"text\";\n    transformer: \"document\" | \"csv\";\n    selector: string;\n  };\n};\n\nconst contentTypeConfig: ContentTypeConfig = {\n  \"application/pdf\": {\n    handler: \"html\",\n    selector: \"page\",\n    transformer: \"document\",\n  },\n  \"application/vnd.ms-powerpoint\": {\n    handler: \"html\",\n    selector: \"slide-content\",\n    transformer: \"document\",\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.presentation\": {\n    handler: \"html\",\n    selector: \"slide-content\",\n    transformer: \"document\",\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\": {\n    handler: \"html\",\n    selector: \"h1\",\n    transformer: \"csv\",\n  },\n  \"application/vnd.ms-excel\": {\n    handler: \"html\",\n    selector: \"h1\",\n    transformer: \"csv\",\n  },\n};\n\nexport function isTextExtractionSupportedContentType(\n  contentType: string\n): contentType is SupportedContentTypes {\n  return supportedContentTypes.includes(contentType as SupportedContentTypes);\n}\n\nconst DEFAULT_HANDLER = \"text\";\nconst DEFAULT_TIMEOUT_IN_MS = 60000;\n\nexport class TextExtraction {\n  constructor(\n    readonly url: string,\n    readonly options: {\n      enableOcr: boolean;\n      logger: LoggerInterface;\n    }\n  ) {}\n\n  getAdditionalHeaders(): HeadersInit {\n    return {\n      \"X-Tika-PDFOcrStrategy\": this.options.enableOcr ? \"auto\" : \"no_ocr\",\n      \"X-Tika-Timeout-Millis\": DEFAULT_TIMEOUT_IN_MS.toString(),\n    };\n  }\n\n  // Method to extract text from a buffer.\n  async fromBuffer(\n    fileBuffer: Buffer,\n    contentType: SupportedContentTypes\n  ): Promise<Result<PageContent[], Error>> {\n    const response = await this.queryTika(fileBuffer, contentType);\n    if (response.isErr()) {\n      return response;\n    }\n\n    return this.processResponse(response.value);\n  }\n\n  // Method to extract text from a stream.\n  async fromStream(\n    fileStream: Readable,\n    contentType: SupportedContentTypes\n  ): Promise<Readable> {\n    const response = await withRetries(\n      this.options.logger,\n      ({\n        url,\n        additionalHeaders,\n        contentType,\n        fileStream,\n      }: {\n        url: string;\n        additionalHeaders: HeadersInit;\n        contentType: SupportedContentTypes;\n        fileStream: Readable;\n      }) =>\n        fetch(`${url}/tika/`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": contentType,\n            ...additionalHeaders,\n          },\n          body: Readable.toWeb(fileStream),\n          duplex: \"half\",\n        } as RequestInitWithDuplex),\n      {\n        retries: 3,\n        delayBetweenRetriesMs: 1000,\n      }\n    )({\n      url: this.url,\n      additionalHeaders: this.getAdditionalHeaders(),\n      contentType,\n      fileStream,\n    });\n\n    if (!response.body) {\n      throw new Error(\"Response body is null\");\n    }\n\n    const responseStream = readableStreamToReadable(response.body);\n\n    const config = contentTypeConfig[contentType];\n\n    if (config) {\n      const { transformer, selector } = config;\n      switch (transformer) {\n        case \"document\": {\n          const prefix = pagePrefixesPerMimeType[contentType];\n          return transformStream(responseStream, prefix, selector);\n        }\n        case \"csv\": {\n          return transformStreamToCSV(responseStream, selector);\n        }\n        default:\n          assertNever(transformer);\n      }\n    }\n\n    return responseStream;\n  }\n\n  // Query the Tika server and return the response data.\n  private async queryTika(\n    fileBuffer: Buffer,\n    contentType: SupportedContentTypes\n  ): Promise<Result<TikaResponse, Error>> {\n    // Determine the handler type based on the content type.\n    // The HTML handler preserves the structural information of the document\n    // like page structure, etc. The text handler does not.\n    const handlerType =\n      contentTypeConfig[contentType]?.handler ?? DEFAULT_HANDLER;\n\n    try {\n      const response = await withRetries(\n        this.options.logger,\n        ({\n          url,\n          additionalHeaders,\n          handlerType,\n          contentType,\n          fileBuffer,\n        }: {\n          url: string;\n          additionalHeaders: HeadersInit;\n          handlerType: string;\n          contentType: SupportedContentTypes;\n          fileBuffer: Buffer;\n        }) =>\n          fetch(`${url}/tika/${handlerType}`, {\n            method: \"PUT\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": contentType,\n              ...additionalHeaders,\n            },\n            body: fileBuffer,\n          }),\n        {\n          retries: 3,\n          delayBetweenRetriesMs: 1000,\n        }\n      )({\n        url: this.url,\n        additionalHeaders: this.getAdditionalHeaders(),\n        handlerType,\n        contentType,\n        fileBuffer,\n      });\n\n      if (!response.ok) {\n        return new Err(new Error(`HTTP error status: ${response.status}`));\n      }\n\n      const data = await response.json();\n      const decodedReponse = TikaResponseCodec.decode(data);\n      if (isLeft(decodedReponse)) {\n        const pathError = reporter.formatValidationErrors(decodedReponse.left);\n        return new Err(new Error(`Invalid response format: ${pathError}`));\n      }\n\n      return new Ok(decodedReponse.right);\n    } catch (err) {\n      this.options.logger.error({ error: err }, \"Error while extracting text\");\n\n      const errorMessage =\n        err instanceof Error ? err.message : \"Unexpected error\";\n\n      return new Err(new Error(`Failed extracting text: ${errorMessage}`));\n    }\n  }\n\n  // Process the Tika response and return an array of PageContent.\n  private processResponse(\n    response: TikaResponse\n  ): Promise<Result<PageContent[], Error>> {\n    const contentType = response[\"Content-Type\"];\n\n    const pageSelector =\n      contentTypeConfig[contentType as SupportedContentTypes]?.selector;\n    if (pageSelector) {\n      return this.processContentBySelector(response, pageSelector);\n    }\n\n    return this.processDefaultResponse(response);\n  }\n\n  // Generic function to process response using a page selector.\n  private processContentBySelector(\n    response: TikaResponse,\n    contentSelector: string\n  ): Promise<Result<PageContent[], Error>> {\n    const html = response[\"X-TIKA:content\"];\n\n    const stream = Readable.from(html);\n\n    // This logic extract the content of the page based on the selector.\n    // We use a streaming parser to avoid loading the entire content in memory.\n    return new Promise<Result<PageContent[], Error>>((resolve) => {\n      const contentDivs: PageContent[] = [];\n      let currentPageContent = \"\";\n      let insidePage = false;\n      let pageNumber = 0;\n      let pageDepth = 0;\n\n      const parser = new Parser(\n        {\n          onopentag(name, attribs) {\n            // Check if the current tag is the page selector.\n            // If it is, we are inside a page.\n            // This assumes that we don't have nested pages.\n            if (name === \"div\" && attribs.class === contentSelector) {\n              insidePage = true;\n              pageNumber++;\n              currentPageContent = \"\";\n              pageDepth = 1;\n            } else if (insidePage) {\n              // If we are inside a page, increment the page depth to handle nested divs.\n              // This is required to know when we are done with the page.\n              pageDepth++;\n            }\n          },\n          ontext(text) {\n            // If we are inside a page, append the text to the current page content.\n            if (insidePage) {\n              currentPageContent += text.trim() + \" \";\n            }\n          },\n          onclosetag() {\n            // If we are inside a page, decrement the page depth.\n            if (insidePage) {\n              pageDepth--;\n              // If the page depth is 0, we are done with the page.\n              if (pageDepth === 0) {\n                insidePage = false;\n                if (currentPageContent.trim()) {\n                  contentDivs.push({\n                    pageNumber: pageNumber,\n                    content: currentPageContent.trim(),\n                  });\n                }\n                currentPageContent = \"\";\n              }\n            }\n          },\n          onerror(err) {\n            return resolve(new Err(err));\n          },\n        },\n        { decodeEntities: true }\n      );\n\n      stream.on(\"data\", (chunk: Buffer) => {\n        parser.write(chunk.toString());\n      });\n\n      stream.on(\"end\", () => {\n        parser.end();\n        return resolve(new Ok(contentDivs));\n      });\n\n      stream.on(\"error\", (err) => {\n        return resolve(new Err(err));\n      });\n    });\n  }\n\n  // Process default response.\n  private processDefaultResponse(\n    response: TikaResponse\n  ): Promise<Result<PageContent[], Error>> {\n    const content = response[\"X-TIKA:content\"];\n\n    // Treat the entire content as a single page.\n    return Promise.resolve(\n      new Ok([{ pageNumber: 1, content: content.trim() }])\n    );\n  }\n}\n","import { Readable } from \"stream\";\nimport type { ReadableStream as NodeReadableStream } from \"stream/web\";\n\n// Define a type for the RequestInit object with duplex set to \"half\" because the official types are\n// lagging behind.\nexport interface RequestInitWithDuplex extends RequestInit {\n  duplex: \"half\";\n}\n\nexport function readableStreamToReadable<T = unknown>(\n  webStream: ReadableStream<T>\n): Readable {\n  return Readable.fromWeb(webStream as NodeReadableStream<T>);\n}\n","import { LoggerInterface } from \"./logger\";\n\nexport async function sendUserOperationMessage({\n  message,\n  logger,\n  channel,\n}: {\n  message: string;\n  logger: LoggerInterface;\n  channel?: string;\n}) {\n  const { SLACK_USER_OPERATION_BOT_TOKEN, SLACK_USER_OPERATION_CHANNEL_ID } =\n    process.env;\n\n  if (!SLACK_USER_OPERATION_BOT_TOKEN || !SLACK_USER_OPERATION_CHANNEL_ID) {\n    logger.info(\n      {},\n      \"SLACK_USER_OPERATION_BOT_TOKEN or SLACK_USER_OPERATION_CHANNEL_ID is not set\"\n    );\n    return;\n  }\n\n  try {\n    const res = await fetch(\"https://slack.com/api/chat.postMessage\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${SLACK_USER_OPERATION_BOT_TOKEN}`,\n      },\n      body: JSON.stringify({\n        channel: channel ?? SLACK_USER_OPERATION_CHANNEL_ID,\n        text: message,\n      }),\n    });\n\n    const jsonRes = await res.json();\n    if (!jsonRes.ok) {\n      logger.error(\n        { error: jsonRes.error },\n        \"Failed to send slack message to user operation channel (1).\"\n      );\n    }\n\n    // Log the result\n  } catch (error) {\n    logger.error(\n      { error: error },\n      \"Failed to send slack message to user operation channel (2).\"\n    );\n  }\n}\n","/**\n * Executes an array of tasks concurrently with controlled parallelism.\n *\n * This function processes a list of items concurrently while maintaining a maximum\n * number of parallel executions. It uses a shared queue approach where multiple\n * workers pull items to process, ensuring each item is processed exactly once\n * and results are maintained in the original order.\n *\n * @param items - Array of items to be processed\n * @param iterator - Async function that processes each item. Receives the item and its index\n * @param options.concurrency - Maximum number of parallel executions (default: 8)\n * @returns Promise resolving to array of results in the same order as input items.\n */\nexport async function concurrentExecutor<T, V>(\n  items: T[],\n  iterator: (item: T, idx: number) => Promise<V>,\n  { concurrency = 8 }: { concurrency: number }\n) {\n  const results: V[] = new Array(items.length);\n\n  // Initialize queue with work items, preserving original index.\n  // This queue is shared between all workers.\n  const queue = items.map((item, index) => ({ item, index }));\n\n  /**\n   * Worker function that continuously processes items from the shared queue.\n   * Multiple instances of this worker run concurrently, each competing\n   * for the next available item in the queue. When the queue is empty,\n   * the worker terminates.\n   *\n   * The queue.shift() operation is atomic in JavaScript, ensuring\n   * each item is processed exactly once across all workers.\n   */\n  async function worker() {\n    let work;\n\n    // Continue processing while there are items in the queue.\n    while ((work = queue.shift())) {\n      const result = await iterator(work.item, work.index);\n      results[work.index] = result;\n    }\n  }\n\n  // Create and start workers, limiting the number to either the concurrency\n  // limit or the number of items, whichever is smaller. All workers share\n  // the same queue and results array.\n  await Promise.all(\n    Array.from({ length: Math.min(concurrency, items.length) }, () => worker())\n  );\n\n  return results;\n}\n","export class EnvironmentConfig {\n  private static cache: Record<string, string> = {};\n\n  static getEnvVariable(key: string): string {\n    const cachedValue = this.cache[key];\n\n    if (!cachedValue) {\n      const value = process.env[key];\n      if (value === undefined) {\n        throw new Error(`${key} is required but not set`);\n      }\n      this.cache[key] = value;\n\n      return value;\n    }\n\n    return cachedValue;\n  }\n\n  static getOptionalEnvVariable(key: string): string | undefined {\n    if (!this.cache[key]) {\n      const value = process.env[key];\n      if (value) {\n        this.cache[key] = value;\n      }\n    }\n    return this.cache[key];\n  }\n}\n","export function errorToString(error: unknown): string {\n  if (error instanceof Error) {\n    return error.message;\n  } else if (typeof error === \"string\") {\n    return error;\n  }\n\n  return JSON.stringify(error);\n}\n\nexport function normalizeError(error: unknown): Error {\n  if (error instanceof Error) {\n    return error;\n  }\n\n  return new Error(errorToString(error));\n}\n","import { v4 as uuidv4 } from \"uuid\";\n\nimport { LoggerInterface } from \"../logger\";\n\nlet once = false;\n\nexport function setupGlobalErrorHandler(logger: LoggerInterface) {\n  if (once) {\n    logger.info({}, \"Global error handler already setup\");\n    return;\n  }\n  once = true;\n  process.on(\"unhandledRejection\", (reason, promise) => {\n    // uuid here serves as a correlation id for the console.error and the logger.error.\n    const uuid = uuidv4();\n    // console.log here is important because the promise.catch() below could fail.\n    console.error(\"unhandledRejection\", promise, reason, uuid);\n\n    promise.catch((error) => {\n      // We'll get the call stack from error only if the promise was rejected with an error object.\n      // Example: new Promise((_, reject) => reject(new Error(\"Some error\")))\n      logger.error({ error, panic: true, uuid, reason }, \"Unhandled Rejection\");\n    });\n  });\n\n  process.on(\"uncaughtException\", (error) => {\n    logger.error({ error, panic: true }, \"Uncaught Exception\");\n  });\n}\n","import crypto from \"crypto\";\n\nexport function md5(str: string): string {\n  return crypto.createHash(\"md5\").update(str).digest(\"hex\");\n}\n\nfunction saltedKey(key: string, size = 32): string {\n  const { DUST_DEVELOPERS_SECRETS_SECRET } = process.env;\n  return crypto\n    .createHash(\"sha256\")\n    .update(DUST_DEVELOPERS_SECRETS_SECRET + key)\n    .digest(\"base64\")\n    .substring(0, size);\n}\n\nexport function encrypt(text: string, key: string): string {\n  const iv = md5(key).substring(0, 16);\n  const cipher = crypto.createCipheriv(\"aes-256-cbc\", saltedKey(key), iv);\n  let encrypted = cipher.update(text, \"utf8\", \"hex\");\n  encrypted += cipher.final(\"hex\");\n  return encrypted;\n}\n\nexport function decrypt(encrypted: string, key: string): string {\n  const iv = md5(key).substring(0, 16);\n  const decipher = crypto.createDecipheriv(\"aes-256-cbc\", saltedKey(key), iv);\n  let decrypted = decipher.update(encrypted, \"hex\", \"utf8\");\n  decrypted += decipher.final(\"utf8\");\n  return decrypted;\n}\n","import { Err, Ok, Result } from \"../result\";\n\n/**\n * Substring that ensures we don't cut a string in the middle of a unicode\n * character.\n *\n * The split characters are removed from the result. As such the\n * result may be shorter than the requested length. As a consequence,\n * safeSubstring(0,K) + safeSubstring(K) may not be equal to the original\n * string.\n *\n * Read more:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String#utf-16_characters_unicode_code_points_and_grapheme_clusters\n */\nexport function safeSubstring(\n  str: string,\n  start: number,\n  end?: number\n): string {\n  while (isTrailingLoneSurrogate(str.charCodeAt(start))) {\n    start++;\n  }\n  if (end === undefined) {\n    end = str.length;\n  }\n  while (isLeadingLoneSurrogate(str.charCodeAt(end - 1))) {\n    end--;\n  }\n  return str.substring(start, end);\n}\n\nfunction isLeadingLoneSurrogate(code: number): boolean {\n  return code >= 0xd800 && code <= 0xdbff;\n}\n\nfunction isTrailingLoneSurrogate(code: number): boolean {\n  return code >= 0xdc00 && code <= 0xdfff;\n}\n\nexport function pluralize(count: number) {\n  return count !== 1 ? \"s\" : \"\";\n}\n\nexport function sanitizeString(rawString: string) {\n  return rawString.trim().toLowerCase();\n}\n\nexport function slugify(text: string) {\n  return text\n    .normalize(\"NFKD\") // Normalize to decomposed form.\n    .replace(/[\\u0300-\\u036f]/g, \"\") // Remove diacritics.\n    .replace(/([a-z])([A-Z0-9])/g, \"$1_$2\") // Get all lowercase letters that are near to uppercase ones and replace with _.\n    .toLowerCase()\n    .trim()\n    .replace(/\\s+/g, \"_\") // Replace spaces with _.\n    .replace(/[\\W]+/g, \"_\") // Replace all non-word characters with _.\n    .replace(/__+/g, \"_\"); // Replace multiple _ with single _.\n}\n\nexport function isSlugified(text: string) {\n  return /^[a-z0-9_]+$/.test(text);\n}\n\nexport function redactString(str: string, n: number) {\n  if (typeof str !== \"string\") {\n    return str;\n  }\n\n  if (str.length <= n) {\n    return str;\n  }\n\n  const redacted = \"•\".repeat(str.length - n) + str.slice(-n);\n  return redacted;\n}\n\nexport function truncate(text: string, length: number, omission = \"...\") {\n  return text.length > length\n    ? `${text.substring(0, length - omission.length)}${omission}`\n    : text;\n}\n\nexport function safeParseJSON(str: string): Result<object | null, Error> {\n  try {\n    const res = JSON.parse(str);\n\n    return new Ok(res);\n  } catch (err) {\n    if (err instanceof Error) {\n      return new Err(err);\n    }\n\n    return new Err(new Error(\"Unexpected error: JSON parsing failed.\"));\n  }\n}\n\nexport function stripNullBytes(text: string): string {\n  return text.replace(/\\0/g, \"\");\n}\n","import { CsvError, parse } from \"csv-parse\";\nimport { stringify } from \"csv-stringify\";\n\nimport { Err, Ok, Result } from \"../result\";\nimport { slugify } from \"./string_utils\";\n\nexport class InvalidStructuredDataHeaderError extends Error {}\nclass ParsingCsvError extends Error {}\n\nexport function getSanitizedHeaders(\n  rawHeaders: string[]\n): Result<string[], Error> {\n  try {\n    const value = rawHeaders.reduce<string[]>((acc, curr) => {\n      // Special case for __dust_id, which is a reserved header name that we use\n      // to assign unique row_id to make incremental row updates possible.\n      const slugifiedName = curr === \"__dust_id\" ? curr : slugify(curr);\n\n      if (!acc.includes(slugifiedName) || !slugifiedName.length) {\n        acc.push(slugifiedName);\n      } else {\n        let conflictResolved = false;\n        for (let i = 2; i < 64; i++) {\n          if (!acc.includes(slugify(`${slugifiedName}_${i}`))) {\n            acc.push(slugify(`${slugifiedName}_${i}`));\n            conflictResolved = true;\n            break;\n          }\n        }\n\n        if (!conflictResolved) {\n          throw new InvalidStructuredDataHeaderError(\n            `Failed to generate unique slugified name for header \"${curr}\" after multiple attempts.`\n          );\n        }\n      }\n      return acc;\n    }, []);\n    return new Ok(value);\n  } catch (e) {\n    if (e instanceof Error) {\n      return new Err(e);\n    } else {\n      return new Err(new Error(\"An unknown error occurred\"));\n    }\n  }\n}\n\nexport async function guessDelimiter(csv: string): Promise<string | undefined> {\n  // Detect the delimiter: try to parse the first 2 lines with different delimiters,\n  // keep the one that works for both lines and has the most columns.\n  let delimiter: string | undefined = undefined;\n  let delimiterColsCount = 0;\n  for (const d of [\",\", \";\", \"\\t\"]) {\n    const records: unknown[][] = [];\n    try {\n      // We parse at most 8 lines with skipEmptyLines with the goal of getting 2 valid ones,\n      // otherwise let's consider the file as broken beyond repair.\n      const parser = parse(csv, { delimiter: d, to: 8, skipEmptyLines: true });\n      for await (const record of parser) {\n        records.push(record);\n        if (records.length === 2) {\n          break;\n        }\n      }\n    } catch (e) {\n      // Ignore error.\n      continue;\n    }\n\n    const [firstRecord, secondRecord] = records;\n    // Check for more than one line to ensure sufficient data for accurate delimiter detection.\n    if (!secondRecord) {\n      continue;\n    }\n\n    if (!!firstRecord.length && firstRecord.length === secondRecord.length) {\n      if (firstRecord.length > delimiterColsCount) {\n        delimiterColsCount = firstRecord.length;\n        delimiter = d;\n      }\n    }\n  }\n\n  return delimiter;\n}\n\n// This function is used by connectors to turn a , ; \\t separated file into a comma separated file.\n// It also will raise if the file can't be parsed.\nexport async function parseAndStringifyCsv(tableCsv: string): Promise<string> {\n  const delimiter = await guessDelimiter(tableCsv);\n  const records: unknown[] = [];\n\n  try {\n    const parser = parse(tableCsv, {\n      delimiter,\n      skipEmptyLines: true,\n      columns: (c) => c,\n    });\n\n    for await (const record of parser) {\n      records.push(record);\n    }\n  } catch (err) {\n    throw new ParsingCsvError(\n      err instanceof CsvError\n        ? `Unable to parse CSV string : ${err.message}`\n        : \"Unable to parse CSV string\"\n    );\n  }\n\n  return new Promise((resolve, reject) => {\n    stringify(records, { header: true }, (err, output) => {\n      if (err) {\n        reject(new ParsingCsvError(\"Unable to stringify parsed CSV data\"));\n      } else {\n        resolve(output);\n      }\n    });\n  });\n}\n","import {\n  BrowseConfigurationType,\n  BrowseParamsEvent,\n} from \"../../front/assistant/actions/browse\";\nimport {\n  ConversationIncludeFileConfigurationType,\n  ConversationIncludeFileParamsEvent,\n} from \"../../front/assistant/actions/conversation/include_file\";\nimport {\n  DustAppRunBlockEvent,\n  DustAppRunConfigurationType,\n  DustAppRunParamsEvent,\n} from \"../../front/assistant/actions/dust_app_run\";\nimport {\n  GithubCreateIssueConfigurationType,\n  GithubCreateIssueParamsEvent,\n  GithubGetPullRequestConfigurationType,\n  GithubGetPullRequestParamsEvent,\n} from \"../../front/assistant/actions/github\";\nimport {\n  ProcessConfigurationType,\n  ProcessParamsEvent,\n} from \"../../front/assistant/actions/process\";\nimport {\n  RetrievalConfigurationType,\n  RetrievalParamsEvent,\n} from \"../../front/assistant/actions/retrieval\";\nimport {\n  TablesQueryConfigurationType,\n  TablesQueryModelOutputEvent,\n  TablesQueryOutputEvent,\n  TablesQueryStartedEvent,\n} from \"../../front/assistant/actions/tables_query\";\nimport {\n  WebsearchConfigurationType,\n  WebsearchParamsEvent,\n} from \"../../front/assistant/actions/websearch\";\nimport {\n  AgentActionType,\n  AgentMessageType,\n} from \"../../front/assistant/conversation\";\nimport { ModelIdType, ModelProviderIdType } from \"../../front/lib/assistant\";\nimport { ModelId } from \"../../shared/model_id\";\nimport {\n  ReasoningConfigurationType,\n  ReasoningStartedEvent,\n  ReasoningThinkingEvent,\n  ReasoningTokensEvent,\n} from \"./actions/reasoning\";\nimport {\n  SearchLabelsConfigurationType,\n  SearchLabelsParamsEvent,\n} from \"./actions/search_labels\";\n\n/**\n * Agent Action configuration\n */\n\ntype GithubAgentActionConfigurationType =\n  | GithubGetPullRequestConfigurationType\n  | GithubCreateIssueConfigurationType;\n\nexport type AgentActionConfigurationType =\n  | BrowseConfigurationType\n  | DustAppRunConfigurationType\n  | GithubAgentActionConfigurationType\n  | ProcessConfigurationType\n  | ReasoningConfigurationType\n  | RetrievalConfigurationType\n  | TablesQueryConfigurationType\n  | WebsearchConfigurationType;\n\ntype ConversationAgentActionConfigurationType =\n  ConversationIncludeFileConfigurationType;\n\ntype SearchLabelsAgentActionConfigurationType = SearchLabelsConfigurationType;\n\nexport type ActionConfigurationType =\n  | AgentActionConfigurationType\n  | ConversationAgentActionConfigurationType\n  | SearchLabelsAgentActionConfigurationType;\n\ntype UnsavedConfiguration<T> = Omit<T, \"id\" | \"sId\">;\n\n// We need to apply Omit to each member of the union separately rather than the whole union\n// because Omit<A | B, \"k\"> is different from Omit<A, \"k\"> | Omit<B, \"k\">.\n// The first form loses the discriminated union properties needed for type narrowing.\nexport type UnsavedAgentActionConfigurationType =\n  | UnsavedConfiguration<TablesQueryConfigurationType>\n  | UnsavedConfiguration<RetrievalConfigurationType>\n  | UnsavedConfiguration<DustAppRunConfigurationType>\n  | UnsavedConfiguration<ProcessConfigurationType>\n  | UnsavedConfiguration<WebsearchConfigurationType>\n  | UnsavedConfiguration<BrowseConfigurationType>\n  | UnsavedConfiguration<GithubAgentActionConfigurationType>\n  | UnsavedConfiguration<ReasoningConfigurationType>;\n\nexport type AgentAction =\n  | AgentActionConfigurationType[\"type\"]\n  | ConversationAgentActionConfigurationType[\"type\"]\n  | GithubAgentActionConfigurationType[\"type\"];\n\n// Each AgentActionConfigurationType is capable of generating this type at runtime to specify which\n// inputs should be generated by the model. As an example, to run the retrieval action for which the\n// `relativeTimeFrame` has been specified in the configuration but for which the `query` is \"auto\",\n// it would generate:\n//\n// ```\n// { inputs: [{ name: \"query\", description: \"...\", type: \"string\" }]\n// ```\n//\n// The params generator model for this action would be tasked to generate that query. If the\n// retrieval configuration sets `relativeTimeFrame` to \"auto\" as well we would get:\n//\n// ```\n// {\n//   inputs: [\n//     { name: \"query\", description: \"...\", type: \"string\" },\n//     { name: \"relativeTimeFrame\", description: \"...\", type: \"string\" },\n//   ]\n// }\n// ```\nexport type AgentActionSpecification = {\n  name: string;\n  description: string;\n  inputs: {\n    name: string;\n    description: string;\n    type: \"string\" | \"number\" | \"boolean\" | \"array\";\n    items?: {\n      type: \"string\" | \"number\" | \"boolean\";\n    };\n  }[];\n};\n\n/**\n * Agent configuration\n */\n\nexport type GlobalAgentStatus =\n  | \"active\"\n  | \"disabled_by_admin\"\n  | \"disabled_missing_datasource\"\n  | \"disabled_free_workspace\";\n\n/**\n * Agent statuses:\n * - \"active\" means the agent can be used directly\n * - \"archived\" means the agent was either deleted, or that there is a newer\n *   version\n * - \"draft\" is used for the \"try\" button in builder, when the agent is not yet\n *   fully created / updated\n */\nexport type AgentStatus = \"active\" | \"archived\" | \"draft\";\nexport type AgentConfigurationStatus = AgentStatus | GlobalAgentStatus;\n\n/**\n * Agent configuration scope\n * - 'global' scope are Dust agents, not editable, inside-list for all, cannot be overriden\n * - 'workspace' scope are editable by builders only,  inside-list by default but user can change it\n * - 'published' scope are editable by everybody, outside-list by default\n * - 'private' scope are editable by author only, inside-list for author, cannot be overriden (so no\n *   entry in the table\n */\nexport const AGENT_CONFIGURATION_SCOPES = [\n  \"global\",\n  \"workspace\",\n  \"published\",\n  \"private\",\n] as const;\nexport type AgentConfigurationScope =\n  (typeof AGENT_CONFIGURATION_SCOPES)[number];\n\n/**\n * Defines strategies for fetching agent configurations based on various\n * 'views':\n * - 'current_user': Retrieves agents created or edited by the current user.\n * - 'list': Retrieves all active agents accessible to the user\n * - {agentIds: string}: Retrieves specific agents by their sIds.\n * - 'all': All non-private agents (so combines workspace, published and global\n *   agents); used e.g. for non-user calls such as API\n * - 'workspace': Retrieves all agents exclusively with a 'workspace' scope.\n * - 'published': Retrieves all agents exclusively with a 'published' scope.\n * - 'global': Retrieves all agents exclusively with a 'global' scope.\n * - 'admin_internal': Grants access to all agents, including private ones.\n * - 'archived': Retrieves all agents that are archived. Only available to super\n *   users. Intended strictly for internal use with necessary superuser or admin\n *   authorization.\n */\nexport type AgentsGetViewType =\n  | { agentIds: string[]; allVersions?: boolean }\n  | \"current_user\"\n  | \"list\"\n  | \"all\"\n  | \"workspace\"\n  | \"published\"\n  | \"global\"\n  | \"admin_internal\"\n  | \"archived\"\n  | \"favorites\";\n\nexport type AgentUsageType = {\n  messageCount: number;\n  conversationCount: number;\n  userCount: number;\n  timePeriodSec: number;\n};\n\nexport type AgentRecentAuthors = readonly string[];\n\nexport type AgentReasoningEffort = \"low\" | \"medium\" | \"high\";\n\nexport type AgentModelConfigurationType = {\n  providerId: ModelProviderIdType;\n  modelId: ModelIdType;\n  temperature: number;\n  reasoningEffort?: AgentReasoningEffort;\n};\n\nexport type LightAgentConfigurationType = {\n  id: ModelId;\n\n  versionCreatedAt: string | null;\n\n  sId: string;\n  version: number;\n  // Global agents have a null authorId, others have a non-null authorId\n  versionAuthorId: ModelId | null;\n\n  instructions: string | null;\n\n  model: AgentModelConfigurationType;\n\n  status: AgentConfigurationStatus;\n  scope: AgentConfigurationScope;\n\n  // always false if not in the context of a user (API query)\n  userFavorite: boolean;\n\n  name: string;\n  description: string;\n  pictureUrl: string;\n\n  // `lastAuthors` is expensive to compute, so we only compute it when needed.\n  lastAuthors?: AgentRecentAuthors;\n  usage?: AgentUsageType;\n  feedbacks?: { up: number; down: number };\n\n  maxStepsPerRun: number;\n  visualizationEnabled: boolean;\n\n  templateId: string | null;\n\n  // Group restrictions for accessing the agent/conversation.\n  // The array of arrays represents permission requirements:\n  // - If empty, no restrictions apply\n  // - Each sub-array represents an OR condition (user must belong to AT LEAST ONE group)\n  // - Sub-arrays are combined with AND logic (user must satisfy ALL sub-arrays)\n  //\n  // Example: [[1,2], [3,4]] means (1 OR 2) AND (3 OR 4)\n  requestedGroupIds: string[][];\n\n  // TODO(2025-01-15) `groupId` clean-up. Remove once Chrome extension uses optional.\n  groupIds?: string[];\n\n  reasoningEffort?: AgentReasoningEffort;\n};\n\nexport type AgentConfigurationType = LightAgentConfigurationType & {\n  // If empty, no actions are performed, otherwise the actions are performed.\n  actions: AgentActionConfigurationType[];\n};\n\nexport interface TemplateAgentConfigurationType {\n  name: string;\n  pictureUrl: string;\n\n  scope: AgentConfigurationScope;\n  description: string;\n  model: AgentModelConfigurationType;\n  actions: AgentActionConfigurationType[];\n  instructions: string | null;\n  isTemplate: true;\n  maxStepsPerRun?: number;\n  visualizationEnabled: boolean;\n}\n\nexport const DEFAULT_MAX_STEPS_USE_PER_RUN = 8;\nexport const MAX_STEPS_USE_PER_RUN_LIMIT = 12;\n\n/**\n * Agent events\n */\n\n// Event sent when an agent error occured before we have a agent message in the database.\nexport type AgentMessageErrorEvent = {\n  type: \"agent_message_error\";\n  created: number;\n  configurationId: string;\n  error: {\n    code: string;\n    message: string;\n  };\n};\n\n// Generic event sent when an error occured (whether it's during the action or the message generation).\nexport type AgentErrorEvent = {\n  type: \"agent_error\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n  error: {\n    code: string;\n    message: string;\n  };\n};\n\nexport type AgentDisabledErrorEvent = {\n  type: \"agent_disabled_error\";\n  created: number;\n  configurationId: string;\n  error: {\n    code: string;\n    message: string;\n  };\n};\n\n// Event sent during the execution of an action. These are action specific.\nexport type AgentActionSpecificEvent =\n  | BrowseParamsEvent\n  | ConversationIncludeFileParamsEvent\n  | DustAppRunBlockEvent\n  | DustAppRunParamsEvent\n  | GithubCreateIssueParamsEvent\n  | GithubGetPullRequestParamsEvent\n  | ProcessParamsEvent\n  | ReasoningStartedEvent\n  | ReasoningThinkingEvent\n  | ReasoningTokensEvent\n  | RetrievalParamsEvent\n  | SearchLabelsParamsEvent\n  | TablesQueryModelOutputEvent\n  | TablesQueryOutputEvent\n  | TablesQueryStartedEvent\n  | WebsearchParamsEvent;\n\n// Event sent once the action is completed, we're moving to generating a message if applicable.\nexport type AgentActionSuccessEvent = {\n  type: \"agent_action_success\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n  action: AgentActionType;\n};\n\n// Event sent to stop the generation.\nexport type AgentGenerationCancelledEvent = {\n  type: \"agent_generation_cancelled\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n};\n\n// Event sent once the message is completed and successful.\nexport type AgentMessageSuccessEvent = {\n  type: \"agent_message_success\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n  message: AgentMessageType;\n  runIds: string[];\n};\n\nexport type AgentActionsEvent = {\n  type: \"agent_actions\";\n  created: number;\n  runId: string;\n  actions: Array<{\n    action: ActionConfigurationType;\n    inputs: Record<string, string | boolean | number>;\n    specification: AgentActionSpecification | null;\n    functionCallId: string | null;\n  }>;\n};\n\nexport type AgentChainOfThoughtEvent = {\n  type: \"agent_chain_of_thought\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n  message: AgentMessageType;\n  chainOfThought: string;\n};\n\nexport type AgentContentEvent = {\n  type: \"agent_message_content\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n  content: string;\n  processedContent: string;\n};\n","import { ProviderVisibility } from \"../front/lib/connectors_api\";\nimport { CoreAPIRow } from \"../front/lib/core_api\";\n\nexport type QdrantCluster = \"cluster-0\";\nexport const DEFAULT_QDRANT_CLUSTER: QdrantCluster = \"cluster-0\";\n\nexport interface EmbedderType {\n  provider_id: string;\n  model_id: string;\n  splitter_id: string;\n  max_chunk_size: number;\n}\n\ninterface EmbedderConfigType {\n  embedder: EmbedderType;\n}\n\nexport type CoreAPIDataSourceConfig = {\n  embedder_config: EmbedderConfigType;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  qdrant_config: {\n    cluster: QdrantCluster;\n    shadow_write_cluster: QdrantCluster | null;\n  } | null;\n};\n\nexport type CoreAPIDataSource = {\n  config: CoreAPIDataSourceConfig;\n  created: number;\n  data_source_id: string;\n  data_source_internal_id: string;\n  name: string;\n};\n\nexport type CoreAPIDataSourceDocumentSection = {\n  prefix: string | null;\n  content: string | null;\n  sections: CoreAPIDataSourceDocumentSection[];\n};\n\nexport function sectionFullText(\n  section: CoreAPIDataSourceDocumentSection\n): string {\n  return (\n    `${section.prefix || \"\"}${section.content || \"\"}` +\n    section.sections.map(sectionFullText).join(\"\")\n  );\n}\n\nexport type CoreAPIDocument = {\n  data_source_id: string;\n  created: number;\n  document_id: string;\n  parents: string[];\n  parent_id: string | null;\n  timestamp: number;\n  tags: string[];\n  source_url?: string | null;\n  hash: string;\n  text_size: number;\n  chunk_count: number;\n  chunks: {\n    text: string;\n    hash: string;\n    offset: number;\n    vector?: number[] | null;\n    score?: number | null;\n  }[];\n  title: string | null;\n  mime_type: string | null;\n  text?: string | null;\n};\n\nexport type CoreAPIDocumentBlob = {\n  document_id: string;\n  timestamp: number;\n  tags: string[];\n  parent_id: string | null;\n  parents: string[];\n  source_url: string | null;\n  section: CoreAPIDataSourceDocumentSection;\n  title: string;\n  mime_type: string;\n  provider_visibility: ProviderVisibility | null;\n};\n\nexport type CoreAPITableBlob = {\n  table_id: string;\n  name: string;\n  description: string;\n  timestamp: number;\n  tags: string[];\n  parent_id?: string;\n  parents: string[];\n  source_url?: string;\n\n  // Remote DB specifics.\n  remote_database_table_id?: string;\n  remote_database_secret_id?: string;\n\n  // Node meta.\n  title: string;\n  mime_type: string;\n  provider_visibility?: ProviderVisibility;\n\n  // Rows.\n  rows: CoreAPIRow[];\n};\n\nexport type CoreAPILightDocument = {\n  hash: string;\n  text_size: number;\n  chunk_count: number;\n  token_count: number;\n  created: number;\n};\n\nexport type CoreAPIFolder = {\n  data_source_id: string;\n  folder_id: string;\n  timestamp: number;\n  title: string;\n  parent_id: string | null;\n  parents: string[];\n};\n\nexport type CoreAPIDocumentVersionStatus = \"latest\" | \"superseded\" | \"deleted\";\n\nexport type CoreAPIDocumentVersion = {\n  hash: string;\n  created: number;\n  status: CoreAPIDocumentVersionStatus;\n};\n","import {\n  CrawlingFrequency,\n  DepthOption,\n  WebCrawlerConfigurationType,\n} from \"../connectors/webcrawler\";\n\nexport type WebsiteFormState = {\n  url: string;\n  name: string;\n  maxPages: number | null;\n  depth: DepthOption;\n  crawlMode: \"child\" | \"website\";\n  crawlFrequency: CrawlingFrequency;\n  headers: { key: string; value: string }[];\n  errors?: {\n    url?: string;\n    name?: string;\n  };\n};\n\nexport type WebsiteFormAction =\n  | {\n      [K in keyof Omit<WebsiteFormState, \"errors\">]: {\n        type: \"SET_FIELD\";\n        field: K;\n        value: WebsiteFormState[K];\n      };\n    }[keyof Omit<WebsiteFormState, \"errors\">]\n  | {\n      type: \"SET_ERROR\";\n      field: keyof WebsiteFormState[\"errors\"];\n      value: string | undefined;\n    }\n  | {\n      type: \"RESET\";\n      config?: WebCrawlerConfigurationType | null;\n      name?: string;\n    }\n  | { type: \"VALIDATE\" };\n\nexport const FREQUENCY_DISPLAY_TEXT: Record<CrawlingFrequency, string> = {\n  never: \"Never\",\n  daily: \"Every day\",\n  weekly: \"Every week\",\n  monthly: \"Every month\",\n};\n\nexport const DEPTH_DISPLAY_TEXT: Record<DepthOption, string> = {\n  0: \"0 level\",\n  1: \"1 level\",\n  2: \"2 levels\",\n  3: \"3 levels\",\n  4: \"4 levels\",\n  5: \"5 levels\",\n};\n","/**\n * Some databases and schemas are not useful to show in the content tree.\n * We exclude them here.\n */\nexport const EXCLUDE_DATABASES = [\"SNOWFLAKE\", \"SNOWFLAKE_SAMPLE_DATA\"];\nexport const EXCLUDE_SCHEMAS = [\"INFORMATION_SCHEMA\"];\n","import { BaseAction } from \"../../../front/assistant/actions/index\";\nimport {\n  DataSourceConfiguration,\n  RetrievalTimeframe,\n  TimeFrame,\n} from \"../../../front/assistant/actions/retrieval\";\nimport { ModelId } from \"../../../shared/model_id\";\n\nexport const PROCESS_SCHEMA_ALLOWED_TYPES = [\n  \"string\",\n  \"number\",\n  \"boolean\",\n] as const;\n\n// Properties in the process configuration table are stored as an array of objects.\nexport type ProcessSchemaPropertyType = {\n  name: string;\n  type: (typeof PROCESS_SCHEMA_ALLOWED_TYPES)[number];\n  description: string;\n};\n\nexport function renderSchemaPropertiesAsJSONSchema(\n  schema: ProcessSchemaPropertyType[]\n): { [name: string]: { type: string; description: string } } {\n  let jsonSchema: { [name: string]: { type: string; description: string } } =\n    {};\n\n  if (schema.length > 0) {\n    schema.forEach((f) => {\n      jsonSchema[f.name] = {\n        type: f.type,\n        description: f.description,\n      };\n    });\n  } else {\n    // Default schema for extraction.\n    jsonSchema = {\n      required_data: {\n        type: \"string\",\n        description:\n          \"Minimal (short and concise) piece of information extracted to follow instructions\",\n      },\n    };\n  }\n\n  return jsonSchema;\n}\n\nexport type ProcessTagsFilter = {\n  in: string[];\n};\n\nexport type ProcessConfigurationType = {\n  id: ModelId;\n  sId: string;\n\n  type: \"process_configuration\";\n\n  dataSources: DataSourceConfiguration[];\n  relativeTimeFrame: RetrievalTimeframe;\n  schema: ProcessSchemaPropertyType[];\n\n  name: string;\n  description: string | null;\n};\n\nexport type ProcessActionOutputsType = {\n  data: unknown[];\n  min_timestamp: number;\n  total_documents: number;\n  total_chunks: number;\n  total_tokens: number;\n};\n\n// Use top_k of 768 as 512 worked really smoothly during initial tests. Might update to 1024 in the\n// future based on user feedback.\nexport const PROCESS_ACTION_TOP_K = 768;\n\nexport interface ProcessActionType extends BaseAction {\n  id: ModelId; // AgentProcessAction\n  agentMessageId: ModelId; // AgentMessage\n\n  params: {\n    relativeTimeFrame: TimeFrame | null;\n    tagsIn: string[] | null;\n    tagsNot: string[] | null;\n  };\n  schema: ProcessSchemaPropertyType[];\n  outputs: ProcessActionOutputsType | null;\n  functionCallId: string | null;\n  functionCallName: string | null;\n  step: number;\n  type: \"process_action\";\n}\n\n/**\n * Process Action Events\n */\n\n// Event sent before the execution with the finalized params to be used.\nexport type ProcessParamsEvent = {\n  type: \"process_params\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n  dataSources: DataSourceConfiguration[];\n  action: ProcessActionType;\n};\n\nexport type ProcessErrorEvent = {\n  type: \"process_error\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n  error: {\n    code: string;\n    message: string;\n  };\n};\n\nexport type ProcessSuccessEvent = {\n  type: \"process_success\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n  action: ProcessActionType;\n};\n","import { ModelId } from \"../shared/model_id\";\nimport { RoleType } from \"./user\";\n\n// Supported operations for resource permissions.\nexport const SUPPORTED_OPERATIONS = [\"admin\", \"read\", \"write\"] as const;\n\nexport type PermissionType = (typeof SUPPORTED_OPERATIONS)[number];\n\n/**\n * Represents permissions assigned to a specific group.\n *\n * @property id - Unique identifier for the group (ModelId type)\n * @property permissions - Array of permissions granted to the group\n */\ntype GroupPermission = {\n  id: ModelId;\n  permissions: PermissionType[];\n};\n\n/**\n * Represents permissions assigned to a specific role.\n *\n * @property role - The type of role (RoleType)\n * @property permissions - Array of permissions granted to the role\n */\ntype RolePermission = {\n  role: RoleType;\n  permissions: PermissionType[];\n};\n\n/**\n * Defines group-based permissions for a resource.\n * Used when access control is managed through group assignments.\n */\nexport type GroupResourcePermissions = {\n  groups: GroupPermission[];\n};\n\n/**\n * Defines combined group and role-based permissions for a resource.\n */\nexport type CombinedResourcePermissions = {\n  groups: GroupPermission[];\n  roles: RolePermission[];\n  workspaceId: ModelId;\n};\n\n/**\n * Represents the complete permission configuration for a resource.\n * Can be either:\n * - Group-based permissions only\n * - Both group and role-based permissions combined\n */\nexport type ResourcePermission =\n  | GroupResourcePermissions\n  | CombinedResourcePermissions;\n\n/**\n * Type guard to determine if a permission configuration includes role-based access control.\n *\n * @param resourcePermission - The resource permission configuration to check\n * @returns True if the configuration includes role-based permissions\n */\nexport function hasRolePermissions(\n  resourcePermission: ResourcePermission\n): resourcePermission is CombinedResourcePermissions {\n  return \"roles\" in resourcePermission;\n}\n","import { ModelId } from \"../shared/model_id\";\nimport { DataSourceViewSelectionConfigurations } from \"./data_source_view\";\nimport { ModelIdType, ModelProviderIdType } from \"./lib/assistant\";\nimport { SpaceType } from \"./space\";\n\ntype TrackerStatus = \"active\" | \"inactive\";\n\nexport type TrackerConfigurationType = {\n  id: ModelId;\n  sId: string;\n  name: string;\n  status: TrackerStatus;\n  description: string | null;\n  modelId: ModelIdType;\n  providerId: ModelProviderIdType;\n  temperature: number;\n  prompt: string | null;\n  frequency: string;\n  skipEmptyEmails: boolean;\n  recipients: string[];\n  space: SpaceType;\n  maintainedDataSources: TrackerDataSourceConfigurationType[];\n  watchedDataSources: TrackerDataSourceConfigurationType[];\n  generations?: TrackerGenerationToProcess[];\n  createdAt: number;\n};\n\nexport type TrackerDataSourceConfigurationType = {\n  dataSourceViewId: string;\n  filter: {\n    parents: {\n      in: string[];\n      not: string[];\n    } | null;\n  };\n};\n\nexport type TrackerConfigurationStateType = {\n  name: string | null;\n  status: TrackerStatus;\n  nameError: string | null;\n  description: string | null;\n  descriptionError: string | null;\n  prompt: string | null;\n  promptError: string | null;\n  frequency: string;\n  frequencyError: string | null;\n  skipEmptyEmails: boolean;\n  recipients: string | null;\n  recipientsError: string | null;\n  modelId: ModelIdType;\n  providerId: ModelProviderIdType;\n  temperature: number;\n  maintainedDataSources: DataSourceViewSelectionConfigurations;\n  watchedDataSources: DataSourceViewSelectionConfigurations;\n};\n\nexport const TRACKER_FREQUENCIES = [\n  { label: \"Daily (Mon-Fri)\", value: \"0 17 * * 1-5\" },\n  { label: \"Weekly on Monday\", value: \"0 17 * * 1\" },\n  { label: \"Weekly on Tuesday\", value: \"0 17 * * 2\" },\n  { label: \"Weekly on Wednesday\", value: \"0 17 * * 3\" },\n  { label: \"Weekly on Thursday\", value: \"0 17 * * 4\" },\n  { label: \"Weekly on Friday\", value: \"0 17 * * 5\" },\n];\n\nexport type TrackerIdWorkspaceId = {\n  trackerId: number;\n  workspaceId: string;\n};\n\nexport type TrackerDataSource = {\n  id: ModelId;\n  name: string;\n  dustAPIProjectId: string;\n  dustAPIDataSourceId: string;\n};\n\nexport type TrackerGenerationToProcess = {\n  id: ModelId;\n  content: string;\n  thinking: string | null;\n  documentId: string;\n  dataSource: TrackerDataSource;\n  maintainedDocumentDataSource: TrackerDataSource | null;\n  maintainedDocumentId: string | null;\n};\n","import { ModelId } from \"../shared/model_id\";\nimport { DataSourceViewCategory } from \"./api_handlers/public/spaces\";\nimport {\n  ConnectorStatusDetails,\n  DataSourceType,\n  DataSourceWithAgentsUsageType,\n  EditedByUser,\n} from \"./data_source\";\nimport { ContentNodeWithParent } from \"./lib/connectors_api\";\n\nexport interface DataSourceViewType {\n  category: DataSourceViewCategory;\n  createdAt: number;\n  dataSource: DataSourceType;\n  editedByUser?: EditedByUser | null;\n  id: ModelId;\n  kind: DataSourceViewKind;\n  parentsIn: string[] | null;\n  sId: string;\n  updatedAt: number;\n  spaceId: string;\n}\n\nexport type DataSourceViewsWithDetails = DataSourceViewType & {\n  dataSource: DataSourceType & ConnectorStatusDetails;\n  usage: DataSourceWithAgentsUsageType;\n};\n\nexport type DataSourceViewContentNode = ContentNodeWithParent & {\n  dataSourceView: DataSourceViewType;\n};\n\nexport type DataSourceViewSelectionConfiguration = {\n  dataSourceView: DataSourceViewType;\n  selectedResources: DataSourceViewContentNode[];\n  isSelectAll: boolean;\n  tagsFilter: TagsFilter;\n};\n\nexport type TagsFilter = {\n  in: string[];\n  not: string[];\n  mode: \"custom\" | \"auto\";\n} | null;\n\nexport function defaultSelectionConfiguration(\n  dataSourceView: DataSourceViewType\n): DataSourceViewSelectionConfiguration {\n  return {\n    dataSourceView,\n    isSelectAll: false,\n    selectedResources: [],\n    tagsFilter: null,\n  };\n}\n\nexport type DataSourceViewSelectionConfigurations = Record<\n  string, // DataSourceView.sId\n  DataSourceViewSelectionConfiguration\n>;\n\nconst DATA_SOURCE_VIEW_KINDS = [\"default\", \"custom\"] as const;\nexport type DataSourceViewKind = (typeof DATA_SOURCE_VIEW_KINDS)[number];\n","import { BaseAction } from \"../../../front/assistant/actions/index\";\nimport { ModelId } from \"../../../shared/model_id\";\nimport { SupportedFileContentType } from \"../../files\";\n\nexport type DustAppRunConfigurationType = {\n  id: ModelId;\n  sId: string;\n\n  type: \"dust_app_run_configuration\";\n\n  appWorkspaceId: string;\n  appId: string;\n\n  name: string;\n  description: string | null;\n};\n\nexport type DustAppParameters = {\n  [key: string]: string | number | boolean;\n};\n\nexport interface DustAppRunActionType extends BaseAction {\n  agentMessageId: ModelId;\n  appWorkspaceId: string;\n  appId: string;\n  appName: string;\n  params: DustAppParameters;\n  runningBlock: {\n    type: string;\n    name: string;\n    status: \"running\" | \"succeeded\" | \"errored\";\n  } | null;\n  output: unknown | null;\n  functionCallId: string | null;\n  functionCallName: string | null;\n  step: number;\n  resultsFileId: string | null;\n  resultsFileSnippet: string | null;\n  resultsFileContentType: SupportedFileContentType | null;\n  type: \"dust_app_run_action\";\n}\n\n/**\n * DustAppRun Action Events\n */\n\n// Event sent before the execution of a dust app run with the finalized params to be used.\nexport type DustAppRunParamsEvent = {\n  type: \"dust_app_run_params\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n  action: DustAppRunActionType;\n};\n\nexport type DustAppRunErrorEvent = {\n  type: \"dust_app_run_error\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n  error: {\n    code: string;\n    message: string;\n  };\n};\n\nexport type DustAppRunBlockEvent = {\n  type: \"dust_app_run_block\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n  action: DustAppRunActionType;\n};\n\nexport type DustAppRunSuccessEvent = {\n  type: \"dust_app_run_success\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n  action: DustAppRunActionType;\n};\n\nexport function getDustAppRunResultsFileTitle({\n  appName,\n  resultsFileContentType,\n}: {\n  appName: string;\n  resultsFileContentType: SupportedFileContentType;\n}): string {\n  const extension = resultsFileContentType.split(\"/\").pop();\n  let title = `${appName}_output`;\n  if (extension) {\n    title += `.${extension}`;\n  }\n  return title;\n}\n","import { ModelId } from \"../shared/model_id\";\n\nexport function getIntercomSyncWorkflowId(connectorId: ModelId) {\n  return `intercom-sync-${connectorId}`;\n}\n","import { ModelId } from \"../shared/model_id\";\n\nexport function getZendeskSyncWorkflowId(connectorId: ModelId): string {\n  return `zendesk-sync-${connectorId}`;\n}\n\nexport function getZendeskGarbageCollectionWorkflowId(\n  connectorId: ModelId\n): string {\n  return `zendesk-gc-${connectorId}`;\n}\n","import { ConnectorsAPIError } from \"../../connectors/api\";\nimport { ConversationErrorType } from \"../assistant/conversation\";\nimport { CoreAPIError } from \"./core_api\";\n\nexport type InternalErrorWithStatusCode = {\n  status_code: number;\n};\n\nexport type APIErrorType =\n  | \"not_authenticated\"\n  | \"sso_enforced\"\n  | \"missing_authorization_header_error\"\n  | \"malformed_authorization_header_error\"\n  | \"invalid_basic_authorization_error\"\n  | \"invalid_oauth_token_error\"\n  | \"expired_oauth_token_error\"\n  | \"invalid_api_key_error\"\n  | \"internal_server_error\"\n  | \"invalid_request_error\"\n  | \"invalid_rows_request_error\"\n  | \"user_not_found\"\n  | \"content_too_large\"\n  | \"data_source_error\"\n  | \"data_source_not_found\"\n  | \"data_source_view_not_found\"\n  | \"data_source_auth_error\"\n  | \"data_source_quota_error\"\n  | \"data_source_document_not_found\"\n  | \"data_source_not_managed\"\n  | \"run_error\"\n  | \"app_not_found\"\n  | \"app_auth_error\"\n  | \"provider_auth_error\"\n  | \"provider_not_found\"\n  | \"dataset_not_found\"\n  | \"workspace_not_found\"\n  | \"workspace_auth_error\"\n  | \"workspace_user_not_found\"\n  | \"method_not_supported_error\"\n  | \"personal_workspace_not_found\"\n  | \"action_unknown_error\"\n  | \"action_api_error\"\n  | \"membership_not_found\"\n  | \"invitation_not_found\"\n  | \"plan_limit_error\"\n  | \"template_not_found\"\n  | \"chat_message_not_found\"\n  | \"connector_not_found_error\"\n  | \"connector_update_error\"\n  | \"connector_update_unauthorized\"\n  | \"connector_oauth_target_mismatch\"\n  | \"connector_provider_not_supported\"\n  | \"connector_credentials_error\"\n  | \"agent_configuration_not_found\"\n  | \"agent_message_error\"\n  | \"message_not_found\"\n  | \"plan_message_limit_exceeded\"\n  | \"global_agent_error\"\n  | \"stripe_invalid_product_id_error\"\n  | \"rate_limit_error\"\n  | \"subscription_payment_failed\"\n  | \"subscription_not_found\"\n  | \"subscription_state_invalid\"\n  | \"service_unavailable\"\n  // Use by agent creation / update\n  | \"assistant_saving_error\"\n  // Used in the DustAPI client:\n  | \"unexpected_error_format\"\n  | \"unexpected_response_format\"\n  | \"unexpected_network_error\"\n  // Used by callAction client:\n  | \"action_failed\"\n  | \"unexpected_action_response\"\n  | \"feature_flag_not_found\"\n  | \"feature_flag_already_exists\"\n  // Pagination:\n  | \"invalid_pagination_parameters\"\n  | \"table_not_found\"\n  // Templates:\n  | \"template_not_found\"\n  // Invitations:\n  | \"invitation_already_sent_recently\"\n  // DustAppSecrets:\n  | \"dust_app_secret_not_found\"\n  // Key:\n  | \"key_not_found\"\n  // Labs:\n  | \"transcripts_configuration_not_found\"\n  | \"transcripts_configuration_default_not_allowed\"\n  | \"transcripts_configuration_already_exists\"\n  // Files:\n  | \"file_not_found\"\n  | \"file_too_large\"\n  | \"file_type_not_supported\"\n  | \"file_is_empty\"\n  // Runs:\n  | \"run_not_found\"\n  // Spaces:\n  | \"space_already_exists\"\n  | \"space_not_found\"\n  // Groups:\n  | \"group_not_found\"\n  // Conversations:\n  | ConversationErrorType\n  // Plugins:\n  | \"plugin_not_found\"\n  | \"plugin_execution_failed\"\n  // Trackers:\n  | \"tracker_not_found\";\n\nexport type APIError = {\n  type: APIErrorType;\n  message: string;\n  data_source_error?: CoreAPIError;\n  run_error?: CoreAPIError;\n  app_error?: CoreAPIError;\n  connectors_error?: ConnectorsAPIError;\n};\n\nfunction isAPIError(obj: unknown): obj is APIError {\n  return (\n    typeof obj === \"object\" &&\n    obj !== null &&\n    \"message\" in obj &&\n    typeof obj.message === \"string\" &&\n    \"type\" in obj &&\n    typeof obj.type === \"string\"\n    // TODO(spolu): check type is a valid APIErrorType\n  );\n}\n\n/**\n * Type to transport a HTTP error with its http status code (eg: 404)\n * and the error object returned by our public API endpoints (api/v1/*)\n */\nexport type APIErrorWithStatusCode = {\n  api_error: APIError;\n  status_code: number;\n};\n\nexport type APIErrorResponse = {\n  error: APIError;\n};\n\nexport function isAPIErrorResponse(obj: unknown): obj is APIErrorResponse {\n  return (\n    typeof obj === \"object\" &&\n    obj !== null &&\n    \"error\" in obj &&\n    isAPIError(obj.error)\n  );\n}\n\nexport type WithAPIErrorResponse<T> = T | APIErrorResponse;\n","/**\n * Model rendering of conversations.\n */\n\nexport interface ModelMessageType {\n  role: \"action\" | \"agent\" | \"user\" | \"content_fragment\";\n  name: string;\n  content: string;\n}\n\nexport interface ModelConversationType {\n  messages: ModelMessageType[];\n}\n\nexport interface ImageContent {\n  type: \"image_url\";\n  image_url: {\n    url: string;\n  };\n}\n\ninterface TextContent {\n  type: \"text\";\n  text: string;\n}\n\ntype Content = TextContent | ImageContent;\n\nexport function isTextContent(content: Content): content is TextContent {\n  return content.type === \"text\";\n}\n\nexport interface ContentFragmentMessageTypeModel {\n  role: \"content_fragment\";\n  name: string;\n  content: Content[];\n}\n\nexport interface UserMessageTypeModel {\n  role: \"user\";\n  name: string;\n  content: Content[];\n}\nexport interface FunctionCallType {\n  id: string;\n  name: string;\n  arguments: string; // Empty is not valid, should be at least \"{}\"\n}\n\n// Assistant requiring usage of function(s) call(s)\nexport interface AssistantFunctionCallMessageTypeModel {\n  role: \"assistant\";\n  content?: string;\n  function_calls: FunctionCallType[];\n}\n\nexport interface AssistantContentMessageTypeModel {\n  role: \"assistant\";\n  name: string;\n  content: string;\n}\n\n// This is the output of one function call\nexport interface FunctionMessageTypeModel {\n  role: \"function\";\n  name: string;\n  function_call_id: string;\n  content: string;\n}\n\nexport type ModelMessageTypeMultiActions =\n  | ContentFragmentMessageTypeModel\n  | UserMessageTypeModel\n  | AssistantFunctionCallMessageTypeModel\n  | AssistantContentMessageTypeModel\n  | FunctionMessageTypeModel;\n\nexport function isContentFragmentMessageTypeModel(\n  contentFragment: ModelMessageTypeMultiActions\n): contentFragment is ContentFragmentMessageTypeModel {\n  return contentFragment.role === \"content_fragment\";\n}\n\nexport function isUserMessageTypeModel(\n  userMessage: ModelMessageTypeMultiActions\n): userMessage is UserMessageTypeModel {\n  return userMessage.role === \"user\";\n}\n\nexport type ModelConversationTypeMultiActions = {\n  messages: ModelMessageTypeMultiActions[];\n};\n\n/**\n * Generation execution.\n */\n\n// Event sent when tokens are streamed as the the agent is generating a message.\nexport type TokensClassification = \"tokens\" | \"chain_of_thought\";\nexport type GenerationTokensEvent = {\n  type: \"generation_tokens\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n  text: string;\n} & (\n  | {\n      classification: TokensClassification;\n    }\n  | {\n      classification: \"opening_delimiter\" | \"closing_delimiter\";\n      delimiterClassification: TokensClassification;\n    }\n);\n\nexport type GenerationErrorEvent = {\n  type: \"generation_error\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n  error: {\n    code: string;\n    message: string;\n  };\n};\n\nexport type GenerationSuccessEvent = {\n  type: \"generation_success\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n  text: string;\n  chainOfThought: string;\n  runId: string;\n};\n\nexport type GenerationCancelEvent = {\n  type: \"generation_cancel\";\n  created: number;\n  configurationId: string;\n  messageId: string;\n};\n","import { ModelId } from \"../shared/model_id\";\nimport { MessageType, MessageVisibility } from \"./assistant/conversation\";\nimport { SupportedFileContentType } from \"./files\";\n\nexport type ContentFragmentContextType = {\n  username: string | null;\n  fullName: string | null;\n  email: string | null;\n  profilePictureUrl: string | null;\n};\n\nexport type ContentFragmentVersion = \"superseded\" | \"latest\";\n\nexport type SupportedContentFragmentType =\n  | SupportedFileContentType\n  | \"dust-application/slack\"; // Legacy\n\nexport type ContentFragmentType = {\n  id: ModelId;\n  sId: string;\n  fileId: string | null;\n  snippet: string | null;\n  generatedTables: string[];\n  created: number;\n  type: \"content_fragment\";\n  visibility: MessageVisibility;\n  version: number;\n  sourceUrl: string | null;\n  textUrl: string;\n  textBytes: number | null;\n  title: string;\n  contentType: SupportedContentFragmentType;\n  context: ContentFragmentContextType;\n  contentFragmentId: string;\n  contentFragmentVersion: ContentFragmentVersion;\n};\n\nexport type UploadedContentFragment = {\n  fileId: string;\n  title: string;\n};\n\nexport function isContentFragmentType(\n  arg: MessageType\n): arg is ContentFragmentType {\n  return arg.type === \"content_fragment\";\n}\n","import { WorkspaceType } from \"../front/user\";\n\nexport function isDevelopment() {\n  return process.env.NODE_ENV === \"development\";\n}\nexport function isDustWorkspace(w: WorkspaceType) {\n  return w.sId === process.env.PRODUCTION_DUST_WORKSPACE_ID;\n}\n","export function isValidDate(date: Date) {\n  return !isNaN(date.valueOf());\n}\n","import { SlackConfigurationType } from \"../connectors/slack\";\nimport { WebCrawlerConfigurationType } from \"../connectors/webcrawler\";\n\nexport type ConnectorConfiguration =\n  | WebCrawlerConfigurationType\n  | SlackConfigurationType\n  | null;\n\nexport function isWebCrawlerConfiguration(\n  config: ConnectorConfiguration | null\n): config is WebCrawlerConfigurationType {\n  const maybeWebCrawlerConfig = config as WebCrawlerConfigurationType;\n\n  return (\n    maybeWebCrawlerConfig?.url !== undefined &&\n    maybeWebCrawlerConfig?.depth !== undefined &&\n    maybeWebCrawlerConfig?.maxPageToCrawl !== undefined &&\n    maybeWebCrawlerConfig?.crawlMode !== undefined &&\n    maybeWebCrawlerConfig?.crawlFrequency !== undefined &&\n    maybeWebCrawlerConfig?.headers !== undefined\n  );\n}\n\nexport type ConnectorConfigurations = {\n  webcrawler: WebCrawlerConfigurationType;\n  notion: null;\n  slack: SlackConfigurationType;\n  google_drive: null;\n  github: null;\n  confluence: null;\n  microsoft: null;\n  intercom: null;\n};\n","// TRANSCRIPTS\nexport const labsTranscriptsProviders = [\n  \"google_drive\",\n  \"gong\",\n  \"modjo\",\n] as const;\nexport type LabsTranscriptsProviderType =\n  (typeof labsTranscriptsProviders)[number];\n","import { ModelId } from \"../shared/model_id\";\n\nexport function microsoftIncrementalSyncWorkflowId(connectorId: ModelId) {\n  return `microsoft-incrementalSync-${connectorId}`;\n}\n\nexport function microsoftGarbageCollectionWorkflowId(connectorId: ModelId) {\n  return `microsoft-garbageCollection-${connectorId}`;\n}\n"],"names":["Ok","value","this","_proto","prototype","isOk","isErr","Err","error","_proto2","ioTsEnum","enumValues","enumName","isEnumValue","input","includes","t","Type","uuidv4","v4","context","success","failure","identity","createRangeCodec","min","max","brand","number","n","SlugifiedString","string","s","test","NumberAsStringCodec","u","c","toString","ConnectorsCommandSchema","type","majorCommand","literal","command","union","args","record","undefined","ConfluenceCommandSchema","connectorId","pageId","spaceId","file","keyInFile","ConfluenceMeResponseSchema","me","UnknownRecord","ConfluenceUpsertPageResponseSchema","workflowId","workflowUrl","GithubCommandSchema","NotionCommandSchema","GoogleDriveCommandSchema","SlackCommandSchema","BatchCommandSchema","WebcrawlerCommandSchema","BatchAllResponseSchema","succeeded","failed","TemporalCommandSchema","IntercomCommandSchema","force","conversationId","day","helpCenterId","IntercomCheckConversationResponseSchema","isConversationOnIntercom","isConversationOnDB","conversationTeamIdOnIntercom","conversationTeamIdOnDB","IntercomFetchConversationResponseSchema","conversation","IntercomFetchArticlesResponseSchema","articles","array","IntercomCheckTeamsResponseSchema","teams","teamId","name","isTeamOnDB","IntercomCheckMissingConversationsResponseSchema","missingConversations","open","createdAt","IntercomForceResyncArticlesResponseSchema","affectedCount","ZendeskCommandSchema","wId","dsId","brandId","query","forceResync","ticketId","ticketUrl","ZendeskCheckIsAdminResponseSchema","userRole","userActive","userIsAdmin","ZendeskCountTicketsResponseSchema","ticketCount","ZendeskFetchTicketResponseSchema","ticket","isTicketOnDb","ZendeskFetchBrandResponseSchema","brandOnDb","MicrosoftCommandSchema","AdminCommandSchema","AdminSuccessResponseSchema","CheckFileGenericResponseSchema","status","content","unknown","GetParentsResponseSchema","parents","NotionUpsertResponseSchema","NotionSearchPagesResponseSchema","pages","id","title","isSkipped","isFull","NotionCheckUrlResponseSchema","page","db","NotionDeleteUrlResponseSchema","deletedPage","deletedDb","NotionFindUrlResponseSchema","NotionMeResponseSchema","botOwner","TemporalCheckQueueResponseSchema","taskQueue","TemporalUnprocessedWorkflowsResponseSchema","queuesAndPollers","queue","pollers","unprocessedQueues","AdminResponseSchema","isConnectorsAPIError","obj","message","SlackAutoReadPatternsSchema","pattern","SlackConfigurationTypeSchema","botEnabled","whitelistedDomains","autoReadChannelPatterns","DepthOptions","WebCrawlerConfigurationTypeSchema","url","depth","maxPageToCrawl","crawlMode","crawlFrequency","headers","ConnectorConfigurationTypeSchema","UpdateConnectorConfigurationTypeSchema","configuration","ConnectorCreateRequestBodySchema","workspaceAPIKey","dataSourceId","workspaceId","connectionId","UpdateConnectorRequestBodySchema","ConfluenceClientError","_Error","error_data","_this","call","data","_inheritsLoose","_wrapNativeSuper","Error","ContentNodesViewTypeCodec","getGoogleSheetTableId","googleFileId","googleSheetId","ParsedNotionDatabaseSchema","parentType","parentId","archived","getNotionDatabaseTableId","notionDatabaseId","TIME_FRAME_UNITS","TimeframeUnitCodec","getProviderFromRetrievedDocument","document","dataSourceView","dataSource","connectorProvider","MODEL_PROVIDER_IDS","REASONING_EFFORT_IDS","DEFAULT_EMBEDDING_PROVIDER_ID","EMBEDDING_PROVIDER_IDS","ModelProviderIdCodec","ReasoningEffortCodec","EmbeddingProviderCodec","isProviderWhitelisted","owner","providerId","_owner$whiteListedPro","whiteListedProviders","GLOBAL_AGENTS_SID","GPT_3_5_TURBO_MODEL_ID","GPT_4_TURBO_MODEL_ID","GPT_4O_MODEL_ID","GPT_4O_20240806_MODEL_ID","GPT_4O_MINI_MODEL_ID","O1_MODEL_ID","O1_MINI_MODEL_ID","O3_MINI_MODEL_ID","CLAUDE_3_OPUS_2024029_MODEL_ID","CLAUDE_3_5_SONNET_20240620_MODEL_ID","CLAUDE_3_5_SONNET_20241022_MODEL_ID","CLAUDE_3_7_SONNET_20250219_MODEL_ID","CLAUDE_3_HAIKU_20240307_MODEL_ID","CLAUDE_3_5_HAIKU_20241022_MODEL_ID","CLAUDE_2_1_MODEL_ID","CLAUDE_INSTANT_1_2_MODEL_ID","MISTRAL_LARGE_MODEL_ID","MISTRAL_MEDIUM_MODEL_ID","MISTRAL_SMALL_MODEL_ID","MISTRAL_CODESTRAL_MODEL_ID","GEMINI_1_5_PRO_LATEST_MODEL_ID","GEMINI_1_5_FLASH_LATEST_MODEL_ID","GEMINI_2_FLASH_PREVIEW_MODEL_ID","GEMINI_2_FLASH_THINKING_PREVIEW_MODEL_ID","GEMINI_2_FLASH_MODEL_ID","GEMINI_2_FLASH_LITE_PREVIEW_MODEL_ID","GEMINI_2_PRO_PREVIEW_MODEL_ID","TOGETHERAI_LLAMA_3_3_70B_INSTRUCT_TURBO_MODEL_ID","TOGETHERAI_QWEN_2_5_CODER_32B_INSTRUCT_MODEL_ID","TOGETHERAI_QWEN_QWQ_32B_PREVIEW_MODEL_ID","TOGETHERAI_QWEN_72B_INSTRUCT_MODEL_ID","TOGETHERAI_DEEPSEEK_V3_MODEL_ID","TOGETHERAI_DEEPSEEK_R1_MODEL_ID","DEEPSEEK_CHAT_MODEL_ID","DEEPSEEK_REASONER_MODEL_ID","FIREWORKS_DEEPSEEK_R1_MODEL_ID","MODEL_IDS","ModelIdCodec","LEGACY_OPEN_AI_TOOL_USE_META_PROMPT","GPT_3_5_TURBO_MODEL_CONFIG","modelId","displayName","contextSize","recommendedTopK","recommendedExhaustiveTopK","largeModel","description","shortDescription","isLegacy","toolUseMetaPrompt","generationTokensCount","supportsVision","GPT_4_TURBO_MODEL_CONFIG","GPT_4O_MODEL_CONFIG","GPT_4O_20240806_MODEL_CONFIG","GPT_4O_MINI_MODEL_CONFIG","O1_MODEL_CONFIG","featureFlag","customAssistantFeatureFlag","O1_HIGH_REASONING_MODEL_CONFIG","reasoningEffort","O1_MINI_MODEL_CONFIG","O3_MINI_MODEL_CONFIG","O3_MINI_HIGH_REASONING_MODEL_CONFIG","ANTHROPIC_DELIMITERS_CONFIGURATION","incompleteDelimiterPatterns","delimiters","openingPattern","closingPattern","classification","swallow","ANTHROPIC_TOOL_USE_META_PROMPT","CLAUDE_3_OPUS_DEFAULT_MODEL_CONFIG","delimitersConfiguration","tokenCountAdjustment","CLAUDE_3_5_SONNET_20240620_DEPRECATED_MODEL_CONFIG","CLAUDE_3_5_SONNET_DEFAULT_MODEL_CONFIG","CLAUDE_3_7_SONNET_DEFAULT_MODEL_CONFIG","CLAUDE_3_5_HAIKU_DEFAULT_MODEL_CONFIG","CLAUDE_3_HAIKU_DEFAULT_MODEL_CONFIG","CLAUDE_2_DEFAULT_MODEL_CONFIG","CLAUDE_INSTANT_DEFAULT_MODEL_CONFIG","MISTRAL_LARGE_MODEL_CONFIG","MISTRAL_MEDIUM_MODEL_CONFIG","MISTRAL_SMALL_MODEL_CONFIG","MISTRAL_CODESTRAL_MODEL_CONFIG","GEMINI_PRO_DEFAULT_MODEL_CONFIG","GEMINI_FLASH_DEFAULT_MODEL_CONFIG","GEMINI_2_FLASH_PREVIEW_MODEL_CONFIG","GEMINI_2_FLASH_THINKING_PREVIEW_MODEL_CONFIG","GEMINI_2_FLASH_MODEL_CONFIG","GEMINI_2_FLASH_LITE_PREVIEW_MODEL_CONFIG","GEMINI_2_PRO_PREVIEW_MODEL_CONFIG","TOGETHERAI_LLAMA_3_3_70B_INSTRUCT_TURBO_MODEL_CONFIG","TOGETHERAI_QWEN_2_5_CODER_32B_INSTRUCT_MODEL_CONFIG","TOGETHERAI_QWEN_QWQ_32B_PREVIEW_MODEL_CONFIG","TOGETHERAI_QWEN_72B_INSTRUCT_MODEL_CONFIG","TOGETHERAI_DEEPSEEK_V3_MODEL_CONFIG","TOGETHERAI_DEEPSEEK_R1_MODEL_CONFIG","DEEPSEEK_CHAT_MODEL_CONFIG","DEEPSEEK_REASONER_MODEL_CONFIG","FIREWORKS_DEEPSEEK_R1_MODEL_CONFIG","SUPPORTED_MODEL_CONFIGS","isSupportedModel","model","maybeSupportedModel","some","m","CUSTOM_ORDER","DUST","GPT4","O3_MINI","SLACK","NOTION","GOOGLE_DRIVE","GITHUB","INTERCOM","CLAUDE_3_OPUS","CLAUDE_3_SONNET","CLAUDE_3_HAIKU","CLAUDE_3_7_SONNET","CLAUDE_2","CLAUDE_INSTANT","MISTRAL_LARGE","MISTRAL_MEDIUM","MISTRAL_SMALL","GEMINI_PRO","HELPER","LimitCodec","GetAgentConfigurationsQuerySchema","view","withUsage","withAuthors","withFeedbacks","limit","sort","GetAgentConfigurationsHistoryQuerySchema","GetAgentConfigurationsLeaderboardQuerySchema","DataSourceFilterParentsCodec","in","not","OptionalDataSourceFilterTagsCodec","partial","tags","mode","DataSourceFilterCodec","intersection","RetrievalActionConfigurationSchema","relativeTimeFrame","duration","unit","topK","dataSources","dataSourceViewId","filter","DustAppRunActionConfigurationSchema","appWorkspaceId","appId","TablesQueryActionConfigurationSchema","tables","tableId","WebsearchActionConfigurationSchema","BrowseActionConfigurationSchema","GithubGetPullRequestActionConfigurationSchema","GithubCreateIssueActionConfigurationSchema","ReasoningActionConfigurationSchema","temperature","ProcessActionConfigurationSchema","schema","multiActionsCommonFields","requiredMultiActionsCommonFields","ActionConfigurationSchema","ModelConfigurationSchema","IsSupportedModelSchema","i","PostOrPatchAgentConfigurationRequestBodySchema","assistant","instructions","pictureUrl","scope","actions","templateId","maxStepsPerRun","visualizationEnabled","removeNulls","arr","v","uniq","Array","from","Set","TABLE_PREFIX","MAX_FILE_SIZES","code","delimited","image","FILE_FORMATS","cat","exts","supportedUploadableContentType","Object","keys","isSupportedFileContentType","contentType","getFileFormat","format","getSupportedNonImageMimeTypes","entries","map","_ref2","InternalPostMessagesRequestBodySchema","mentions","configurationId","timezone","profilePictureUrl","ContentFragmentInputWithFileIdSchema","supersededContentFragmentId","fileId","InternalPostContentFragmentRequestBodySchema","InternalPostConversationsRequestBodySchema","visibility","contentFragments","InternalPostBuilderSuggestionsRequestBodySchema","inputs","current_instructions","former_suggestions","BuilderSuggestionsResponseBodySchema","suggestions","reason","BuilderEmojiSuggestionsResponseBodySchema","emoji","backgroundColor","InternalPostBuilderProcessActionGenerateSchemaRequestBodySchema","PostRestrictedSpace","memberIds","isRestricted","PostUnrestrictedSpace","PostSpaceRequestBodySchema","PatchSpaceMembersRequestBodySchema","ContentSchema","parentsIn","PatchSpaceRequestBodySchema","PostDataSourceViewSchema","PostNotionSyncPayloadSchema","urls","method","GetPostNotionSyncResponseBodySchema","syncResults","timestamp","error_message","UpsertContextSchema","sync_type","FrontDataSourceDocumentSection","recursion","prefix","sections","PostDataSourceDocumentRequestBodySchema","Int","parent_id","source_url","upsert_context","text","section","light_document_output","async","mime_type","PostDataSourceWithNameDocumentRequestBodySchema","PatchDataSourceTableRequestBodySchema","truncate","mimeType","sourceUrl","PatchDataSourceViewSchema","parentsToAdd","parentsToRemove","DATA_SOURCE_VIEW_CATEGORIES","isValidDataSourceViewCategory","category","BrowseResultSchema","requestedUrl","browsedUrl","responseCode","errorMessage","BrowseActionOutputSchema","results","BaseAction","generatedFiles","getGeneratedFiles","isProcessConfiguration","arg","getTablesQueryResultsFileTitle","_ref","output","query_title","WebsearchAppResultSchema","snippet","link","WebsearchAppActionOutputSchema","WebsearchResultSchema","reference","WebsearchActionOutputSchema","TAILWIND_COLOR_NAMES","TAILWIND_COLOR_SHADES","ASSISTANT_CREATIVITY_LEVELS","AssistantCreativityLevelCodec","ConversationError","TEMPLATES_TAG_CODES","TEMPLATES_TAGS_CONFIG","CONTENT","label","DATA","DESIGN","ENGINEERING","FINANCE","HIRING","KNOWLEDGE","MARKETING","OPERATIONS","PRODUCT","PRODUCT_MANAGEMENT","PRODUCTIVITY","SALES","UX_DESIGN","UX_RESEARCH","WRITING","TemplateTagCodeTypeCodec","keyof","_extends","MULTI_ACTION_PRESETS","DUST_APP_RUN","RETRIEVAL_SEARCH","TABLES_QUERY","PROCESS","WEB_NAVIGATION","MultiActionPresetCodec","TemplateActionsPreset","NonEmptyString","help","TEMPLATE_VISIBILITIES","TemplateVisibilityCodec","CreateTemplateFormSchema","handle","timeFrameDuration","timeFrameUnit","helpActions","helpInstructions","presetActions","presetInstructions","presetModelId","presetTemperature","nonEmptyArray","isGetFileRequest","identifier","messageUniqueId","params","isGetCodeToExecuteRequest","isSetContentHeightRequest","height","isSetErrorMessageRequest","isDownloadFileRequest","blob","Blob","isDisplayCodeRequest","CONNECTOR_PROVIDERS","GROUP_KINDS","DustGroupIdsHeader","ActionResponseBaseSchema","run_id","created","Integer","run_type","config","run","blocks","block_type","success_count","error_count","traces","UnknownArray","specification_hash","_process$env","process","env","_process$env$DUST_MAN","DUST_MANAGED_ANTHROPIC_API_KEY","_process$env$DUST_MAN2","DUST_MANAGED_AZURE_OPENAI_API_KEY","_process$env$DUST_MAN3","DUST_MANAGED_AZURE_OPENAI_ENDPOINT","_process$env$DUST_MAN4","DUST_MANAGED_OPENAI_API_KEY","_process$env$DUST_MAN5","DUST_MANAGED_TEXTSYNTH_API_KEY","_process$env$DUST_MAN6","DUST_MANAGED_MISTRAL_API_KEY","_process$env$DUST_MAN7","DUST_MANAGED_GOOGLE_AI_STUDIO_API_KEY","_process$env$DUST_MAN8","DUST_MANAGED_SERP_API_KEY","_process$env$DUST_MAN9","DUST_MANAGED_BROWSERLESS_API_KEY","_process$env$DUST_MAN10","DUST_MANAGED_TOGETHERAI_API_KEY","_process$env$DUST_MAN11","DUST_MANAGED_DEEPSEEK_API_KEY","_process$env$DUST_MAN12","DUST_MANAGED_FIREWORKS_API_KEY","dustManagedCredentials","ANTHROPIC_API_KEY","AZURE_OPENAI_API_KEY","AZURE_OPENAI_ENDPOINT","MISTRAL_API_KEY","OPENAI_API_KEY","TEXTSYNTH_API_KEY","GOOGLE_AI_STUDIO_API_KEY","SERP_API_KEY","BROWSERLESS_API_KEY","TOGETHERAI_API_KEY","DEEPSEEK_API_KEY","FIREWORKS_API_KEY","CONNECTORS_ERROR_TYPES","ConnectorsAPI","logger","_url","_secret","_logger","secret","createConnector","_createConnector","_asyncToGenerator","_regeneratorRuntime","mark","_callee","provider","wrap","_context","prev","next","_fetchWithError","encodeURIComponent","getDefaultHeaders","body","JSON","stringify","abrupt","_resultFromResponse","sent","stop","_x","apply","arguments","updateConfiguration","_updateConfiguration","_callee2","_context2","_x2","updateConnector","_updateConnector","_callee3","_ref3","_context3","_x3","stopConnector","_stopConnector","_callee4","_context4","_x4","pauseConnector","_pauseConnector","_callee5","_context5","_x5","unpauseConnector","_unpauseConnector","_callee6","_context6","_x6","resumeConnector","_resumeConnector","_callee7","_context7","_x7","syncConnector","_syncConnector","_callee8","_context8","_x8","deleteConnector","_deleteConnector","_callee9","_context9","_x9","_x10","getConnectorPermissions","_getConnectorPermissions","_callee10","_ref4","filterPermission","_ref4$viewType","viewType","queryParams","qs","res","_context10","URLSearchParams","append","_x11","setConnectorPermissions","_setConnectorPermissions","_callee11","_ref5","resources","_context11","info","_ref6","internal_id","internalId","permission","_x12","getConnector","_getConnector","_callee12","parsedId","_context12","parseInt","isNaN","_x13","getConnectorFromDataSource","_getConnectorFromDataSource","_callee13","_dataSource$connector","_context13","_x14","getConnectors","_getConnectors","_callee14","connectorIds","_context14","length","join","_x15","_x16","setConnectorConfig","_setConnectorConfig","_callee15","configKey","configValue","_context15","_x17","_x18","_x19","getConnectorConfig","_getConnectorConfig","_callee16","_context16","_x20","_x21","linkSlackChannelsWithAgent","_linkSlackChannelsWithAgent","_callee17","_ref7","slackChannelInternalIds","agentConfigurationId","_context17","connector_id","agent_configuration_id","slack_channel_internal_ids","_x22","getSlackChannelsLinkedWithAgent","_getSlackChannelsLinkedWithAgent","_callee18","_ref8","_context18","_x23","admin","_admin","_callee19","adminCommand","_context19","_x24","Authorization","_fetchWithError2","_callee20","init","now","err","_context20","Date","fetch","response","t0","connectorsError","_x25","_x26","_resultFromResponse2","_callee21","json","_json","_err","_err2","_context21","parse","parseError","rawText","ok","_x27","isCoreAPIError","CoreAPISearchScopeSchema","CoreAPIDatasourceViewFilterSchema","data_source_id","view_filter","search_scope","CoreAPINodesSearchFilterSchema","data_source_views","excluded_node_mime_types","readonlyArray","node_ids","node_types","formatDataSourceDisplayName","replace","split","part","word","charAt","toUpperCase","slice","CoreAPI","_apiKey","apiKey","createProject","_createProject","deleteProject","_deleteProject","projectId","getDatasets","_getDatasets","getDataset","_getDataset","datasetName","datasetHash","createDataset","_createDataset","datasetId","dataset_id","cloneProject","_cloneProject","createRun","_createRun","workspace","groups","runType","specification","specificationHash","credentials","secrets","isSystemKey","_ref7$storeBlocksResu","storeBlocksResults","sId","g","store_blocks_results","createRunStream","_createRunStream","_ref8$storeBlocksResu","hasRunId","rejectDustRunIdPromise","resolveDustRunIdPromise","dustRunIdPromise","parser","reader","streamChunks","Promise","resolve","reject","createParser","event","_data$content","getReader","_yield$_awaitAsyncGen","read","done","feed","TextDecoder","decode","errorStr","errorSource","setImmediate","releaseLock","finish","chunkStream","dustRunId","deleteRun","_deleteRun","_ref9","runId","getRunsBatch","_getRunsBatch","_ref10","dustRunIds","run_ids","getRun","_getRun","_ref11","getRunStatus","_getRunStatus","_ref12","getSpecificationHashes","_getSpecificationHashes","_ref13","getSpecification","_getSpecification","_ref14","saveSpecification","_saveSpecification","_ref15","getRunBlock","_getRunBlock","_ref16","blockType","blockName","createDataSource","_createDataSource","_ref17","updateDataSource","_updateDataSource","_ref18","getDataSource","_getDataSource","_ref19","deleteDataSource","_deleteDataSource","_ref20","searchDataSource","_searchDataSource","_callee22","payload","_context22","top_k","full_text","fullText","target_document_tokens","getDataSourceDocuments","_getDataSourceDocuments","_callee23","_ref21","pagination","documentIds","viewFilter","_context23","String","offset","_x28","getDataSourceDocument","_getDataSourceDocument","_callee24","_ref22","documentId","versionHash","_context24","_x29","getDataSourceDocumentVersions","_getDataSourceDocumentVersions","_callee25","_ref23","latest_hash","_ref23$limit","_ref23$offset","_context25","_x30","upsertDataSourceDocument","_upsertDataSourceDocument","_callee26","_ref24","_ref24$lightDocumentO","lightDocumentOutput","_context26","document_id","_x31","getDataSourceDocumentBlob","_getDataSourceDocumentBlob","_callee27","_ref25","_context27","_x32","updateDataSourceDocumentTags","_updateDataSourceDocumentTags","_callee28","_ref26","addTags","removeTags","_context28","add_tags","remove_tags","_x33","updateDataSourceDocumentParents","_updateDataSourceDocumentParents","_callee29","_ref27","_context29","_x34","deleteDataSourceDocument","_deleteDataSourceDocument","_callee30","_ref28","_context30","_x35","scrubDataSourceDocumentDeletedVersions","_scrubDataSourceDocumentDeletedVersions","_callee31","_ref29","_context31","_x36","tokenize","_tokenize","_callee32","_ref30","_context32","keepalive","model_id","provider_id","_x37","tokenizeBatch","_tokenizeBatch","_callee33","_ref31","texts","_context33","_x38","dataSourceTokenize","_dataSourceTokenize","_callee34","_ref32","_context34","_x39","tableValidateCSVContent","_tableValidateCSVContent","_callee35","_ref33","bucket","bucketCSVPath","_context35","bucket_csv_path","_x40","upsertTable","_upsertTable","_callee36","_ref34","remoteDatabaseTableId","remoteDatabaseSecretId","_context36","table_id","remote_database_table_id","remote_database_secret_id","_x41","getTable","_getTable","_callee37","_ref35","_context37","_x42","getTables","_getTables","_callee38","_ref36","tableIds","_context38","_x43","_x44","deleteTable","_deleteTable","_callee39","_ref37","_context39","_x45","updateTableParents","_updateTableParents","_callee40","_ref38","_context40","_x46","upsertTableRows","_upsertTableRows","_callee41","_ref39","rows","_context41","_x47","tableUpsertCSVContent","_tableUpsertCSVContent","_callee42","_ref40","_context42","_x48","getTableRow","_getTableRow","_callee43","_ref41","rowId","_context43","_x49","getTableRows","_getTableRows","_callee44","_ref42","_context44","_x50","getDataSourceTableBlob","_getDataSourceTableBlob","_callee45","_ref43","_context45","_x51","deleteTableRow","_deleteTableRow","_callee46","_ref44","_context46","_x52","queryDatabase","_queryDatabase","_callee47","_ref45","_context47","_x53","getDataSourceFolders","_getDataSourceFolders","_callee48","_ref46","folderIds","_context48","_x54","_x55","searchNodes","_searchNodes","_callee49","_ref47","options","_context49","_x56","getDataSourceStats","_getDataSourceStats","_callee50","_ref48","_context50","_x57","searchTags","_searchTags","_callee51","_ref49","queryType","dataSourceViewsFilter","_context51","dataSourceViews","dsv","_dsv$parentsIn","dustAPIDataSourceId","query_type","_x58","getDataSourceFolder","_getDataSourceFolder","_callee52","_ref50","folderId","_context52","_x59","upsertDataSourceFolder","_upsertDataSourceFolder","_callee53","_ref51","providerVisibility","_context53","folder_id","provider_visibility","_x60","deleteDataSourceFolder","_deleteDataSourceFolder","_callee54","_ref52","_context54","_x61","_callee55","_context55","coreError","_x62","_x63","_callee56","_json2","_json3","_err3","_res","_err4","_context56","_x64","supportedResourceTypes","assertNever","x","ROLES","ACTIVE_ROLES","keyObject","fromEntries","RoleSchema","ActiveRoleSchema","DustUserEmailHeader","InviteMemberFormSchema","email","role","MEMBERSHIP_ROLE_TYPES","MAX_MESSAGE_TIMEFRAMES","CreatePlanFormSchema","isSlackbotAllowed","isSlackAllowed","isNotionAllowed","isGoogleDriveAllowed","isGithubAllowed","isIntercomAllowed","isConfluenceAllowed","isWebCrawlerAllowed","maxMessages","NumberFromString","maxMessagesTimeframe","lifetime","dataSourcesCount","dataSourcesDocumentsCount","dataSourcesDocumentsSizeMb","maxUsers","maxVaults","EnterpriseUpgradeFormSchema","stripeSubscriptionId","planCode","UNIQUE_SPACE_KINDS","supportedEnterpriseConnectionStrategies","isOAuthAPIError","OAuthAPI","apiUrl","createConnection","_createConnection","migratedCredentials","relatedCredential","metadata","migrated_credentials","related_credential","finalizeConnection","_finalizeConnection","redirectUri","redirect_uri","getAccessToken","_getAccessToken","postCredentials","_postCredentials","userId","user_id","workspace_id","getCredentials","_getCredentials","credentialsId","oAuthError","oauthError","CACHE","Map","_getOAuthConnectionAccessToken","cached","get","local_expiry","set","_getConnectionCredentials","OAUTH_USE_CASES","OAUTH_PROVIDERS","isOAuthProvider","isOAuthConnectionType","connection","connection_id","PROVIDERS_WITH_WORKSPACE_CONFIGURATIONS","CREDENTIALS_PROVIDERS","SnowflakeCredentialsSchema","username","password","account","warehouse","CheckBigQueryCredentialsSchema","project_id","private_key_id","private_key","client_email","client_id","auth_uri","token_uri","auth_provider_x509_cert_url","client_x509_cert_url","universe_domain","BigQueryCredentialsWithLocationSchema","location","ApiKeyCredentialsSchema","api_key","SalesforceCredentialsSchema","client_secret","_setupOAuthConnection","dustClientFacingUrl","useCase","extraConfig","oauthPopup","window","authComplete","popupMessageEventListener","origin","removeEventListener","close","addEventListener","checkPopupStatus","setInterval","closed","clearInterval","setTimeout","statsDClient","getStatsDClient","StatsD","redisClient","_redisClient","redisUri","client","createClient","on","console","log","increment","decrement","connect","locks","lock","_lock","key","push","unlock","unlockFn","pop","SLACK_USER_OPERATION_BOT_TOKEN","NODE_ENV","_sendInitDbMessage","service","commitId","jsonRes","child_process","execSync","trim","channel","mrkdown","WHITELISTABLE_FEATURES","generateMimeTypes","resourceTypes","reduce","acc","_extends2","toLowerCase","rateLimiterRedisClient","MIME_TYPES","CONFLUENCE","MICROSOFT","SNOWFLAKE","WEBCRAWLER","ZENDESK","BIGQUERY","SALESFORCE","GONG","RateLimitError","getRedisClient","_getRedisClient","REDIS_URI","RATE_LIMITER_PREFIX","makeRateLimiterKey","_rateLimiter","maxPerTimeframe","timeframeSeconds","redisKey","redis","remaining","totalTimeMs","zCount","getTime","zAdd","score","expire","distribution","_expireRateLimiterKey","withRetries","fn","_temp","_ref$retries","retries","_ref$delayBetweenRetr","delayBetweenRetriesMs","errors","_loop","_ret","sleepTime","t1","Math","pow","warn","attempt","delegateYield","createPageMetadataPrefix","pageNumber","transformStream","pageSelector","state","insidePage","pageDepth","currentPageBuffer","Parser","onopentag","attribs","ontext","onclosetag","htmlParsingTransform","onerror","destroy","decodeEntities","Transform","objectMode","transform","chunk","_encoding","callback","write","flush","end","pipe","transformStreamToCSV","selector","currentRow","currentTag","lastTag","csv","TikaResponseCodec","pagePrefixesPerMimeType","supportedContentTypes","contentTypeConfig","handler","transformer","TextExtraction","getAdditionalHeaders","enableOcr","fromBuffer","_fromBuffer","fileBuffer","queryTika","processResponse","fromStream","_fromStream","fileStream","responseStream","additionalHeaders","Readable","toWeb","duplex","fromWeb","_queryTika","_contentTypeConfig$co","_contentTypeConfig$co2","handlerType","decodedReponse","pathError","Accept","isLeft","reporter","formatValidationErrors","left","right","_contentTypeConfig$co3","processContentBySelector","processDefaultResponse","contentSelector","stream","contentDivs","currentPageContent","_sendUserOperationMessage","SLACK_USER_OPERATION_CHANNEL_ID","_concurrentExecutor","items","iterator","_ref$concurrency","concurrency","worker","_worker","work","shift","item","index","all","EnvironmentConfig","getEnvVariable","cachedValue","cache","getOptionalEnvVariable","errorToString","once","md5","str","crypto","createHash","update","digest","saltedKey","size","DUST_DEVELOPERS_SECRETS_SECRET","substring","isLeadingLoneSurrogate","slugify","normalize","InvalidStructuredDataHeaderError","ParsingCsvError","_Error2","guessDelimiter","_guessDelimiter","delimiter","delimiterColsCount","_i","_arr","d","records","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","firstRecord","secondRecord","to","skipEmptyLines","_asyncIterator","_parseAndStringifyCsv","tableCsv","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","columns","CsvError","header","browse_action","conversation_include_file_action","conversation_list_files_action","dust_app_run_action","github_create_issue_action","github_get_pull_request_action","process_action","reasoning_action","retrieval_action","search_labels_action","tables_query_action","websearch_action","deterministic","factual","balanced","creative","openai","splitter_id","max_chunk_size","mistral","never","daily","weekly","monthly","resolver","ttlMs","REDIS_CACHE_URI","redisCli","cacheVal","result","_args","PX","quit","a","b","userFavorite","aIndex","indexOf","bIndex","localeCompare","sensitivity","strategy","extension","_entries$find","find","codecProps","_Object$entries","_Object$entries$_i","isArray","values","concat","providers","forEach","endpoint","encrypted","iv","decipher","createDecipheriv","isSelectAll","selectedResources","tagsFilter","cipher","createCipheriv","fileSize","expireRateLimiterKey","user","firstName","lastName","Boolean","tailwindColors","color","shade","getConnectionCredentials","appName","resultsFileContentType","agentId","O1","O1_MINI","O1_HIGH_REASONING","DEEPSEEK_R1","parts","groupIds","isGarbageCollectionRun","wfName","getOAuthConnectionAccessToken","rawHeaders","curr","slugifiedName","conflictResolved","e","flatMap","_getSupportedNonImage","first","second","rest","resultsFileId","resultsFileSnippet","sectionFileId","fileTitle","sectionFileAttachment","timeframeLiteral","_createForOfIteratorHelperLoose","startsWith","resourcePermission","codec","bodyValidation","isAPIError","isRight","action","val","fragment","contentFragment","w","PRODUCTION_DUST_WORKSPACE_ID","row","k","schemaEntry","value_type","epoch","string_value","is","resourceType","every","kind","userMessage","date","valueOf","endsWith","maybeWebCrawlerConfig","feature","decimals","toFixed","parseAndStringifyCsv","count","group","rateLimiter","repeat","jsonSchema","f","required_data","start","charCodeAt","rawString","sectionFullText","sendInitDbMessage","sendUserOperationMessage","promise","uuid","panic","setupOAuthConnection","configation","agentConfiguration","omission"],"mappings":"q2BAgBaA,EAAE,WACb,SAAAA,EAAmBC,GAAQC,KAARD,WAAA,EAAAC,KAAKD,MAALA,CAAW,CAAC,IAAAE,EAAAH,EAAAI,UAQ9B,OAR8BD,EAE/BE,KAAA,WACE,OAAO,GACRF,EAEDG,MAAA,WACE,OAAO,GACRN,CAAA,CATY,GAYFO,EAAG,WACd,SAAAA,EAAmBC,GAAQN,KAARM,WAAA,EAAAN,KAAKM,MAALA,CAAW,CAAC,IAAAC,EAAAF,EAAAH,UAQ9B,OAR8BK,EAE/BJ,KAAA,WACE,OAAO,GACRI,EAEDH,MAAA,WACE,OAAO,GACRC,CAAA,CATa,GCrBA,SAAAG,EACdC,EACAC,GAEA,IAAMC,EAAc,SAACC,GAAc,OACjCH,EAAWI,SAASD,EAAgB,EAEtC,OAAO,IAAIE,EAAEC,KACXL,GAAYM,EAAMC,KAClBN,GACA,SAACC,EAAOM,GAAO,OACbP,EAAYC,GAASE,EAAEK,QAAQP,GAASE,EAAEM,QAAQR,EAAOM,KAC3DJ,EAAEO,SAEN,CAOgB,SAAAC,EAAiBC,EAAaC,GAC5C,OAAOV,EAAEW,MACPX,EAAEY,QACF,SAACC,GAAC,OAA2CA,GAAKJ,GAAOI,GAAKH,CAAG,GACjE,QAEJ,CAMaI,IAAAA,EAAkBd,EAAEW,MAC/BX,EAAEe,QACF,SAACC,GAAC,MAAmD,eAAeC,KAAKD,EAAE,GAC3E,mBAiBWE,EAAsB,IAAIlB,EAAEC,KACvC,kBACA,SAACkB,GAAC,MAA+B,iBAANA,CAAc,IACzC,SAACA,EAAGC,GACF,MAAiB,iBAAND,EACFnB,EAAEK,QAAQc,EAAEE,YAEdrB,EAAEM,QAAQa,EAAGC,EAAG,yBACzB,GACApB,EAAEO,UCjESe,EAA0BtB,EAAEuB,KAAK,CAC5CC,aAAcxB,EAAEyB,QAAQ,cACxBC,QAAS1B,EAAE2B,MAAM,CACf3B,EAAEyB,QAAQ,QACVzB,EAAEyB,QAAQ,UACVzB,EAAEyB,QAAQ,SACVzB,EAAEyB,QAAQ,WACVzB,EAAEyB,QAAQ,UACVzB,EAAEyB,QAAQ,eACVzB,EAAEyB,QAAQ,aACVzB,EAAEyB,QAAQ,eACVzB,EAAEyB,QAAQ,WACVzB,EAAEyB,QAAQ,eACVzB,EAAEyB,QAAQ,kBACVzB,EAAEyB,QAAQ,qBAEZG,KAAM5B,EAAE6B,OACN7B,EAAEe,OACFf,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQG,EAAqBlB,EAAE8B,eASjCC,EAA0B/B,EAAEuB,KAAK,CAC5CC,aAAcxB,EAAEyB,QAAQ,cACxBC,QAAS1B,EAAE2B,MAAM,CACf3B,EAAEyB,QAAQ,MACVzB,EAAEyB,QAAQ,eACVzB,EAAEyB,QAAQ,gBACVzB,EAAEyB,QAAQ,oBAEZG,KAAM5B,EAAEuB,KAAK,CACXS,YAAahC,EAAE2B,MAAM,CAAC3B,EAAEY,OAAQZ,EAAE8B,YAClCG,OAAQjC,EAAE2B,MAAM,CAAC3B,EAAEY,OAAQZ,EAAE8B,YAC7BI,QAASlC,EAAE2B,MAAM,CAAC3B,EAAEY,OAAQZ,EAAE8B,YAC9BK,KAAMnC,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAE8B,YAC3BM,UAAWpC,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAE8B,gBAKvBO,EAA6BrC,EAAEuB,KAAK,CAC/Ce,GAAItC,EAAEuC,gBAMKC,EAAqCxC,EAAEuB,KAAK,CACvDkB,WAAYzC,EAAEe,OACd2B,YAAa1C,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAE8B,cASvBa,EAAsB3C,EAAEuB,KAAK,CACxCC,aAAcxB,EAAEyB,QAAQ,UACxBC,QAAS1B,EAAE2B,MAAM,CACf3B,EAAEyB,QAAQ,eACVzB,EAAEyB,QAAQ,aACVzB,EAAEyB,QAAQ,cACVzB,EAAEyB,QAAQ,yBACVzB,EAAEyB,QAAQ,gBAEZG,KAAM5B,EAAE6B,OACN7B,EAAEe,OACFf,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQG,EAAqBlB,EAAE8B,eAMjCc,EAAsB5C,EAAEuB,KAAK,CACxCC,aAAcxB,EAAEyB,QAAQ,UACxBC,QAAS1B,EAAE2B,MAAM,CACf3B,EAAEyB,QAAQ,aACVzB,EAAEyB,QAAQ,iBACVzB,EAAEyB,QAAQ,eACVzB,EAAEyB,QAAQ,mBACVzB,EAAEyB,QAAQ,gBACVzB,EAAEyB,QAAQ,uBACVzB,EAAEyB,QAAQ,aACVzB,EAAEyB,QAAQ,YACVzB,EAAEyB,QAAQ,cACVzB,EAAEyB,QAAQ,MACVzB,EAAEyB,QAAQ,+BACVzB,EAAEyB,QAAQ,yBACVzB,EAAEyB,QAAQ,mCAEZG,KAAM5B,EAAE6B,OACN7B,EAAEe,OACFf,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQG,EAAqBlB,EAAE8B,eAMjCe,EAA2B7C,EAAEuB,KAAK,CAC7CC,aAAcxB,EAAEyB,QAAQ,gBACxBC,QAAS1B,EAAE2B,MAAM,CACf3B,EAAEyB,QAAQ,uBACVzB,EAAEyB,QAAQ,YACVzB,EAAEyB,QAAQ,cACVzB,EAAEyB,QAAQ,sBACVzB,EAAEyB,QAAQ,yBACVzB,EAAEyB,QAAQ,eACVzB,EAAEyB,QAAQ,uBACVzB,EAAEyB,QAAQ,2BACVzB,EAAEyB,QAAQ,0BACVzB,EAAEyB,QAAQ,0CACVzB,EAAEyB,QAAQ,aACVzB,EAAEyB,QAAQ,oBACVzB,EAAEyB,QAAQ,yBACVzB,EAAEyB,QAAQ,iBAEZG,KAAM5B,EAAE6B,OACN7B,EAAEe,OACFf,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQG,EAAqBlB,EAAE8B,eAMjCgB,EAAqB9C,EAAEuB,KAAK,CACvCC,aAAcxB,EAAEyB,QAAQ,SACxBC,QAAS1B,EAAE2B,MAAM,CACf3B,EAAEyB,QAAQ,cACVzB,EAAEyB,QAAQ,gBACVzB,EAAEyB,QAAQ,eACVzB,EAAEyB,QAAQ,kCACVzB,EAAEyB,QAAQ,qBACVzB,EAAEyB,QAAQ,iBACVzB,EAAEyB,QAAQ,2BAEZG,KAAM5B,EAAE6B,OACN7B,EAAEe,OACFf,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQG,EAAqBlB,EAAE8B,eAMjCiB,EAAqB/C,EAAEuB,KAAK,CACvCC,aAAcxB,EAAEyB,QAAQ,SACxBC,QAAS1B,EAAE2B,MAAM,CACf3B,EAAEyB,QAAQ,eACVzB,EAAEyB,QAAQ,eACVzB,EAAEyB,QAAQ,YACVzB,EAAEyB,QAAQ,gBAEZG,KAAM5B,EAAE6B,OACN7B,EAAEe,OACFf,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQG,EAAqBlB,EAAE8B,eAMjCkB,EAA0BhD,EAAEuB,KAAK,CAC5CC,aAAcxB,EAAEyB,QAAQ,cACxBC,QAAS1B,EAAEyB,QAAQ,qBAGRwB,EAAyBjD,EAAEuB,KAAK,CAC3C2B,UAAWlD,EAAEY,OACbuC,OAAQnD,EAAEY,SAMCwC,EAAwBpD,EAAEuB,KAAK,CAC1CC,aAAcxB,EAAEyB,QAAQ,YACxBC,QAAS1B,EAAE2B,MAAM,CACf3B,EAAEyB,QAAQ,8BACVzB,EAAEyB,QAAQ,iBAEZG,KAAM5B,EAAE6B,OACN7B,EAAEe,OACFf,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQG,EAAqBlB,EAAE8B,eASjCuB,EAAwBrD,EAAEuB,KAAK,CAC1CC,aAAcxB,EAAEyB,QAAQ,YACxBC,QAAS1B,EAAE2B,MAAM,CACf3B,EAAEyB,QAAQ,yBACVzB,EAAEyB,QAAQ,sBACVzB,EAAEyB,QAAQ,sBACVzB,EAAEyB,QAAQ,kBACVzB,EAAEyB,QAAQ,+BACVzB,EAAEyB,QAAQ,iBAEZG,KAAM5B,EAAEuB,KAAK,CACX+B,MAAOtD,EAAE2B,MAAM,CAAC3B,EAAEyB,QAAQ,QAASzB,EAAE8B,YACrCE,YAAahC,EAAE2B,MAAM,CAAC3B,EAAEY,OAAQZ,EAAE8B,YAClCyB,eAAgBvD,EAAE2B,MAAM,CAAC3B,EAAEY,OAAQZ,EAAE8B,YACrC0B,IAAKxD,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAE8B,YAC1B2B,aAAczD,EAAE2B,MAAM,CAAC3B,EAAEY,OAAQZ,EAAE8B,gBAK1B4B,EAA0C1D,EAAEuB,KAAK,CAC5DoC,yBAA0B3D,EAAS,QACnC4D,mBAAoB5D,EAAS,QAC7B6D,6BAA8B7D,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAE8B,YACnDgC,uBAAwB9D,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAE8B,UAAW9B,WAK7C+D,EAA0C/D,EAAEuB,KAAK,CAC5DyC,aAAchE,EAAE2B,MAAM,CAAC3B,EAAEuC,cAAevC,EAAM,SAKnCiE,EAAsCjE,EAAEuB,KAAK,CACxD2C,SAAUlE,EAAEmE,MAAMnE,EAAE2B,MAAM,CAAC3B,EAAEuC,cAAevC,YAKjCoE,EAAmCpE,EAAEuB,KAAK,CACrD8C,MAAOrE,EAAEmE,MACPnE,EAAEuB,KAAK,CACL+C,OAAQtE,EAAEe,OACVwD,KAAMvE,EAAEe,OACRyD,WAAYxE,EAAC,aAONyE,EAAkDzE,EAAEuB,KAAK,CACpEmD,qBAAsB1E,EAAEmE,MACtBnE,EAAEuB,KAAK,CACLgC,eAAgBvD,EAAEe,OAClBuD,OAAQtE,EAAE2B,MAAM,CAAC3B,EAAEY,OAAQZ,EAAC,OAC5B2E,KAAM3E,EAAS,QACf4E,UAAW5E,EAAEY,YAONiE,EAA4C7E,EAAEuB,KAAK,CAC9DuD,cAAe9E,EAAEY,SAYNmE,EAAuB/E,EAAEuB,KAAK,CACzCC,aAAcxB,EAAEyB,QAAQ,WACxBC,QAAS1B,EAAE2B,MAAM,CACf3B,EAAEyB,QAAQ,kBACVzB,EAAEyB,QAAQ,iBACVzB,EAAEyB,QAAQ,kBACVzB,EAAEyB,QAAQ,gBACVzB,EAAEyB,QAAQ,eACVzB,EAAEyB,QAAQ,uBACVzB,EAAEyB,QAAQ,2BAEZG,KAAM5B,EAAEuB,KAAK,CACXyD,IAAKhF,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAE8B,YAC1BmD,KAAMjF,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAE8B,YAC3BE,YAAahC,EAAE2B,MAAM,CAAC3B,EAAEY,OAAQZ,EAAE8B,YAClCoD,QAASlF,EAAE2B,MAAM,CAAC3B,EAAEY,OAAQZ,EAAE8B,YAC9BqD,MAAOnF,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAE8B,YAC5BsD,YAAapF,EAAE2B,MAAM,CAAC3B,EAAEyB,QAAQ,QAASzB,EAAE8B,YAC3CuD,SAAUrF,EAAE2B,MAAM,CAAC3B,EAAEY,OAAQZ,EAAE8B,YAC/BwD,UAAWtF,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAE8B,gBAKvByD,EAAoCvF,EAAEuB,KAAK,CACtDiE,SAAUxF,EAAEe,OACZ0E,WAAYzF,EAAS,QACrB0F,YAAa1F,EAAC,UAMH2F,EAAoC3F,EAAEuB,KAAK,CACtDqE,YAAa5F,EAAEY,SAMJiF,EAAmC7F,EAAEuB,KAAK,CACrDuE,OAAQ9F,EAAE2B,MAAM,CAAC3B,EAAEuC,cAAevC,EAAC,OACnC+F,aAAc/F,EAAC,UAMJgG,EAAkChG,EAAEuB,KAAK,CACpDZ,MAAOX,EAAE2B,MAAM,CAAC3B,EAAEuC,cAAevC,EAAC,OAClCiG,UAAWjG,EAAE2B,MAAM,CAAC3B,EAAEuC,cAAevC,EAAC,SAS3BkG,EAAyBlG,EAAEuB,KAAK,CAC3CC,aAAcxB,EAAEyB,QAAQ,aACxBC,QAAS1B,EAAE2B,MAAM,CACf3B,EAAEyB,QAAQ,uBACVzB,EAAEyB,QAAQ,cACVzB,EAAEyB,QAAQ,0BACVzB,EAAEyB,QAAQ,0CACVzB,EAAEyB,QAAQ,aACVzB,EAAEyB,QAAQ,aACVzB,EAAEyB,QAAQ,iBAEZG,KAAM5B,EAAE6B,OACN7B,EAAEe,OACFf,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQG,EAAqBlB,EAAE8B,eAMjCqE,GAAqBnG,EAAE2B,MAAM,CACxCoB,EACAzB,EACAS,EACAY,EACAE,EACAQ,EACA6C,EACAtD,EACAE,EACAM,EACAJ,EACA+B,IAKWqB,GAA6BpG,EAAEuB,KAAK,CAC/ClB,QAASL,EAAEyB,SAAQ,KAOR4E,GAAiCrG,EAAEuB,KAAK,CACnD+E,OAAQtG,EAAEY,OAEVW,KAAMvB,EAAE2B,MAAM,CACZ3B,EAAEyB,QAAQ,aACVzB,EAAEyB,QAAQ,UACVzB,EAAEyB,QAAQ,WACVzB,EAAEyB,QAAQ,UACVzB,EAAEyB,QAAQ,UACVzB,EAAEyB,QAAQ,YACVzB,EAAEyB,QAAQ,UACVzB,EAAEyB,QAAQ,YAEZ8E,QAASvG,EAAEwG,UAOAC,GAA2BzG,EAAEuB,KAAK,CAC7CmF,QAAS1G,EAAEmE,MAAMnE,EAAEe,UAKR4F,GAA6B3G,EAAEuB,KAAK,CAC/CkB,WAAYzC,EAAEe,OACd2B,YAAa1C,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAE8B,cAOvB8E,GAAkC5G,EAAEuB,KAAK,CACpDsF,MAAO7G,EAAEmE,MACPnE,EAAEuB,KAAK,CACLuF,GAAI9G,EAAEe,OACNgG,MAAO/G,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAE8B,YAC5BP,KAAMvB,EAAE2B,MAAM,CAAC3B,EAAEyB,QAAQ,QAASzB,EAAEyB,QAAQ,cAC5CuF,UAAWhH,EAAS,QACpBiH,OAAQjH,EAAC,aASFkH,GAA+BlH,EAAEuB,KAAK,CACjD4F,KAAMnH,EAAE2B,MAAM,CAAC3B,EAAEuC,cAAevC,EAAC,OACjCoH,GAAIpH,EAAE2B,MAAM,CAAC3B,EAAEuC,cAAevC,EAAM,SAOzBqH,GAAgCrH,EAAEuB,KAAK,CAClD+F,YAAatH,EAAS,QACtBuH,UAAWvH,EAAC,UAODwH,GAA8BxH,EAAEuB,KAAK,CAChD4F,KAAMnH,EAAE2B,MAAM,CAAC3B,EAAEuC,cAAevC,EAAC,OACjCoH,GAAIpH,EAAE2B,MAAM,CAAC3B,EAAEuC,cAAevC,EAAM,SAOzByH,GAAyBzH,EAAEuB,KAAK,CAC3Ce,GAAItC,EAAEuC,cACNmF,SAAU1H,EAAEuC,gBAKDoF,GAAmC3H,EAAEuB,KAAK,CACrDqG,UAAW5H,EAAEuC,gBAOFsF,GAA6C7H,EAAEuB,KAAK,CAC/DuG,iBAAkB9H,EAAEmE,MAAMnE,EAAEuB,KAAK,CAAEwG,MAAO/H,EAAEe,OAAQiH,QAAShI,EAAEY,UAC/DqH,kBAAmBjI,EAAEmE,MAAMnE,EAAEe,UAOlBmH,GAAsBlI,EAAE2B,MAAM,CACzCyE,GACAnD,EACAoD,GACAhE,EACAG,EACAiE,GACA/C,EACAe,EACAL,EACAL,EACAE,EACAiD,GACAG,GACAI,GACAb,GACAD,GACAgB,GACAE,GACAhD,EACAU,EACAI,EACAE,EACAG,ICrdI,SAAUmC,GAAqBC,GACnC,MACiB,iBAARA,GACC,OAARA,GACA,YAAaA,GACU,iBAAhBA,EAAIC,SACX,SAAUD,GACU,iBAAbA,EAAI7G,IAEf,CC3CA,IAIM+G,GAA8BtI,EAAEmE,MAJHnE,EAAEuB,KAAK,CACxCgH,QAASvI,EAAEe,OACXmB,QAASlC,EAAEe,UAcAyH,GAA+BxI,EAAEuB,KAAK,CACjDkH,WAAYzI,EAAS,QACrB0I,mBAAoB1I,EAAE2B,MAAM,CAAC3B,EAAEmE,MAAMnE,EAAEe,QAASf,EAAE8B,YAClD6G,wBAAyBL,KCPdM,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAU/BC,GAAoC7I,EAAEuB,KAAK,CACtDuH,IAAK9I,EAAEe,OACPgI,MAAO/I,EAAE2B,MAAM,CACb3B,EAAEyB,QAAQ,GACVzB,EAAEyB,QAAQ,GACVzB,EAAEyB,QAAQ,GACVzB,EAAEyB,QAAQ,GACVzB,EAAEyB,QAAQ,GACVzB,EAAEyB,QAAQ,KAEZuH,eAAgBhJ,EAAEY,OAClBqI,UAAWjJ,EAAE2B,MAAM,CAAC3B,EAAEyB,QAAQ,SAAUzB,EAAEyB,QAAQ,aAClDyH,eAAgBlJ,EAAE2B,MAAM,CACtB3B,EAAEyB,QAAQ,SACVzB,EAAEyB,QAAQ,SACVzB,EAAEyB,QAAQ,UACVzB,EAAEyB,QAAQ,aAEZ0H,QAASnJ,EAAE6B,OAAO7B,EAAEe,OAAQf,EAAEe,UCvCnBqI,GAAmCpJ,EAAE2B,MAAM,CACtDkH,GACAL,GACAxI,EAAC,OAGUqJ,GAAyCrJ,EAAEuB,KAAK,CAC3D+H,cAAeF,KCRJG,GAAmCvJ,EAAEuB,KAAK,CACrDiI,gBAAiBxJ,EAAEe,OACnB0I,aAAczJ,EAAEe,OAChB2I,YAAa1J,EAAEe,OACf4I,aAAc3J,EAAEe,OAChBuI,cAAeF,KCPJQ,GAAmC5J,EAAEuB,KAAK,CACrDoI,aAAc3J,EAAEe,msVCGL8I,IAAAA,YAAsBC,GAIjC,SAAAD,EACExB,EACA0B,GAGqB,IAAAC,EAMO,OAJ5BA,EAAAF,EAAAG,KAAA/K,KAAMmJ,IAAQnJ,MAVPqC,UAAI,EAAAyI,EACJ1D,YAAM,EAAA0D,EACNE,UAAI,EASXF,EAAKzI,KAAOwI,EAAWxI,KACvByI,EAAK1D,OACiB,wBAApByD,EAAWxI,KAAiCwI,EAAWzD,YAASxE,EAClEkI,EAAKE,KAAOH,EAAWG,KAAKF,CAC9B,CAAC,OAAAG,GAAAN,EAAAC,GAAAD,CAAA,EAAAO,GAhBwCC,QCO9BC,GAA4BtK,EAAE2B,MAAM,CAC/C3B,EAAEyB,QAAQ,SACVzB,EAAEyB,QAAQ,YACVzB,EAAEyB,QAAQ,SCXI,SAAA8I,GACdC,EACAC,GAEA,MAA6BD,sBAAAA,YAAsBC,CACrD,KCgDaC,GAA6B1K,EAAEuB,KAAK,CAC/CuF,GAAI9G,EAAEe,OACN+H,IAAK9I,EAAEe,OACPgG,MAAO/G,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAE8B,YAC5B6I,WAAY3K,EAAE2B,MAAM,CAClB3B,EAAEyB,QAAQ,YACVzB,EAAEyB,QAAQ,QACVzB,EAAEyB,QAAQ,SACVzB,EAAEyB,QAAQ,eAEZmJ,SAAU5K,EAAEe,OACZ8J,SAAU7K,EAAC,UAMP,SAAU8K,GAAyBC,GACvC,MAAA,UAAiBA,CACnB,CChEaC,IAAAA,GAAmB,CAC9B,OACA,MACA,OACA,QACA,QAGWC,GAAqBvL,EAAwBsL,IA+EpD,SAAUE,GACdC,GAEA,OAAIA,EAASC,eACkD,eAAzDD,EAASC,eAAeC,WAAWC,kBAC9B,WAEFH,EAASC,eAAeC,WAAWC,mBAAqB,WAE1D,UACT,KChGaC,GAAqB,CAChC,SACA,YACA,UACA,mBACA,aACA,WACA,aAIWC,GAAuB,CAAC,MAAO,SAAU,QAGzCC,GAAgC,SAChCC,GAAyB,CACpCD,GACA,WASWE,GACXjM,EAA8C6L,IAEnCK,GACXlM,EAAgD8L,IAErCK,GAAyBnM,EAEpCgM,IAEc,SAAAI,GACdC,EACAC,GAA+B,IAAAC,EAG/B,OADuD,OAA7BA,EAAGF,EAAMG,sBAAoBD,EAAIV,IAC/BxL,SAASiM,EACvC,CA0CO,IAy3BKG,GAz3BCC,GAAyB,gBACzBC,GAAuB,cACvBC,GAAkB,SAClBC,GAA2B,oBAC3BC,GAAuB,cACvBC,GAAc,KACdC,GAAmB,UACnBC,GAAmB,UACnBC,GAAiC,yBACjCC,GACX,6BACWC,GACX,6BACWC,GACX,6BACWC,GACX,0BACWC,GACX,4BACWC,GAAsB,aACtBC,GAA8B,qBAC9BC,GAAyB,uBACzBC,GAA0B,iBAC1BC,GAAyB,uBACzBC,GAA6B,mBAC7BC,GAAiC,wBACjCC,GACX,0BACWC,GAAkC,uBAClCC,GACX,sCACWC,GAA0B,mBAC1BC,GACX,sCACWC,GACX,2BACWC,GACX,0CACWC,GACX,kCACWC,GACX,uBACWC,GACX,0BACWC,GACX,0BACWC,GACX,0BACWC,GAAyB,gBACzBC,GAA6B,oBAC7BC,GACX,wCAEWC,GAAY,CACvBpC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,IAOWE,GAAe/O,EAAqC8O,IAyD3DE,GACJ,wEAEWC,GAAqD,CAChE3C,WAAY,SACZ4C,QAASxC,GACTyC,YAAa,gBACbC,YAAa,MACbC,gBAAiB,GACjBC,0BAA2B,GAC3BC,YAAY,EACZC,YACE,kFACFC,iBAAkB,uBAClBC,UAAU,EACVC,kBAAmBX,GACnBY,sBAAuB,KACvBC,gBAAgB,GAGLC,GAAmD,CAC9DxD,WAAY,SACZ4C,QAASvC,GACTwC,YAAa,cACbC,YAAa,MACbC,gBAAiB,GACjBC,0BAA2B,IAC3BC,YAAY,EACZC,YAAa,+DACbC,iBAAkB,8BAClBC,UAAU,EACVC,kBAAmBX,GACnBY,sBAAuB,KACvBC,gBAAgB,GAELE,GAA8C,CACzDzD,WAAY,SACZ4C,QAAStC,GACTuC,YAAa,SACbC,YAAa,MACbC,gBAAiB,GACjBC,0BAA2B,IAC3BC,YAAY,EACZC,YAAa,wCACbC,iBAAkB,gCAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,GAELG,GAAuD,CAClE1D,WAAY,SACZ4C,QAASrC,GACTsC,YAAa,SACbC,YAAa,MACbC,gBAAiB,GACjBC,0BAA2B,IAC3BC,YAAY,EACZC,YAAa,wCACbC,iBAAkB,gCAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,GAELI,GAAmD,CAC9D3D,WAAY,SACZ4C,QAASpC,GACTqC,YAAa,cACbC,YAAa,MACbC,gBAAiB,GACjBC,0BAA2B,IAC3BC,YAAY,EACZC,YAAa,6CACbC,iBAAkB,uBAClBC,UAAU,EACVC,kBAAmBX,GACnBY,sBAAuB,KACvBC,gBAAgB,GAELK,GAA0C,CACrD5D,WAAY,SACZ4C,QAASnC,GACToC,YAAa,KACbC,YAAa,IACbC,gBAAiB,GACjBC,0BAA2B,IAC3BC,YAAY,EACZC,YACE,oGACFC,iBAAkB,4BAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,EAChBM,YAAa,oBACbC,2BAA4B,uCAEjBC,GAAyD,CACpE/D,WAAY,SACZ4C,QAASnC,GACToC,YAAa,sBACbC,YAAa,IACbC,gBAAiB,GACjBC,0BAA2B,IAC3BC,YAAY,EACZC,YACE,2HACFC,iBAAkB,0CAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,EAChBS,gBAAiB,OACjBH,YAAa,mCACbC,2BACE,sDAESG,GAA+C,CAC1DjE,WAAY,SACZ4C,QAASlC,GACTmC,YAAa,UACbC,YAAa,MACbC,gBAAiB,GACjBC,0BAA2B,IAC3BC,YAAY,EACZC,YACE,gFACFC,iBAAkB,iCAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,EAChBM,YAAa,yBACbC,2BAA4B,uCAEjBI,GAA+C,CAC1DlE,WAAY,SACZ4C,QAASjC,GACTkC,YAAa,UACbC,YAAa,IACbC,gBAAiB,GACjBC,0BAA2B,IAC3BC,YAAY,EACZC,YACE,gFACFC,iBAAkB,iCAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,GAELY,GAA8D,CACzEnE,WAAY,SACZ4C,QAASjC,GACTkC,YAAa,2BACbC,YAAa,IACbC,gBAAiB,GACjBC,0BAA2B,IAC3BC,YAAY,EACZC,YACE,uGACFC,iBAAkB,iCAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,EAChBS,gBAAiB,QAGbI,GAAqC,CACzCC,4BAA6B,CAAC,mBAC9BC,WAAY,CACV,CACEC,eAAgB,aAChBC,eAAgB,cAChBC,eAAgB,mBAChBC,SAAS,GAEX,CACEH,eAAgB,8BAChBC,eAAgB,+BAChBC,eAAgB,mBAChBC,SAAS,GAEX,CACEH,eAAgB,eAChBC,eAAgB,gBAChBC,eAAgB,mBAChBC,SAAS,GAEX,CACEH,eAAgB,yBAChBC,eAAgB,0BAChBC,eAAgB,mBAChBC,SAAS,GAEX,CACEH,eAAgB,WAChBC,eAAgB,YAChBC,eAAgB,SAChBC,SAAS,GAEX,CACEH,eAAgB,aAChBC,eAAgB,cAChBC,eAAgB,SAChBC,SAAS,KAKTC,GACJ,qbAOWC,GAA6D,CACxE5E,WAAY,YACZ4C,QAAShC,GACTiC,YAAa,gBACbC,YAAa,KACbC,gBAAiB,GACjBC,0BAA2B,IAC3BC,YAAY,EACZC,YAAa,kDACbC,iBAAkB,6BAClBC,UAAU,EACVyB,wBAAyBT,GACzBd,sBAAuB,KACvBC,gBAAgB,EAChBF,kBAAmBsB,GACnBG,qBAAsB,MAGXC,GACX,CACE/E,WAAY,YACZ4C,QAAS/B,GACTgC,YAAa,oBACbC,YAAa,KACbC,gBAAiB,GACjBC,0BAA2B,IAC3BC,YAAY,EACZC,YAAa,6DACbC,iBAAkB,4BAClBC,UAAU,EACVyB,wBAAyBT,GACzBd,sBAAuB,KACvBC,gBAAgB,EAChBF,kBAAmBsB,GACnBG,qBAAsB,MAGbE,GAAiE,CAC5EhF,WAAY,YACZ4C,QAAS9B,GACT+B,YAAa,oBACbC,YAAa,KACbC,gBAAiB,GACjBC,0BAA2B,IAC3BC,YAAY,EACZC,YAAa,6DACbC,iBAAkB,4BAClBC,UAAU,EACVyB,wBAAyBT,GACzBd,sBAAuB,KACvBC,gBAAgB,EAChBF,kBAAmBsB,GACnBG,qBAAsB,MAEXG,GAAiE,CAC5EjF,WAAY,YACZ4C,QAAS7B,GACT8B,YAAa,oBACbC,YAAa,IACbC,gBAAiB,GACjBC,0BAA2B,IAC3BC,YAAY,EACZC,YAAa,6DACbC,iBAAkB,0BAClBC,UAAU,EACVyB,wBAAyBT,GACzBd,sBAAuB,KACvBC,gBAAgB,EAChBF,kBAAmBsB,GACnBG,qBAAsB,MAEXI,GAAgE,CAC3ElF,WAAY,YACZ4C,QAAS3B,GACT4B,YAAa,mBACbC,YAAa,KACbC,gBAAiB,GACjBC,0BAA2B,IAC3BC,YAAY,EACZC,YACE,yFACFC,iBAAkB,oCAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,EAChBuB,qBAAsB,MAEXK,GAA8D,CACzEnF,WAAY,YACZ4C,QAAS5B,GACT6B,YAAa,iBACbC,YAAa,KACbC,gBAAiB,GACjBC,0BAA2B,IAC3BC,YAAY,EACZC,YACE,uFACFC,iBAAkB,oCAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,EAChBuB,qBAAsB,MAEXM,GAAwD,CACnEpF,WAAY,YACZ4C,QAAS1B,GACT2B,YAAa,aACbC,YAAa,KACbC,gBAAiB,GACjBC,0BAA2B,IAC3BC,YAAY,EACZC,YAAa,6CACbC,iBAAkB,4BAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,GAEL8B,GAA8D,CACzErF,WAAY,YACZ4C,QAASzB,GACT0B,YAAa,qBACbC,YAAa,IACbC,gBAAiB,GACjBC,0BAA2B,IAC3BC,YAAY,EACZC,YACE,mEACFC,iBAAkB,4BAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,GAGL+B,GAAqD,CAChEtF,WAAY,UACZ4C,QAASxB,GACTyB,YAAa,gBACbC,YAAa,MACbC,gBAAiB,GACjBC,0BAA2B,GAC3BC,YAAY,EACZC,YAAa,4CACbC,iBAAkB,yBAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,GAELgC,GAAsD,CACjEvF,WAAY,UACZ4C,QAASvB,GACTwB,YAAa,iBACbC,YAAa,KACbC,gBAAiB,GACjBC,0BAA2B,GAC3BC,YAAY,EACZC,YAAa,0CACbC,iBAAkB,0BAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,GAELiC,GAAqD,CAChExF,WAAY,UACZ4C,QAAStB,GACTuB,YAAa,gBACbC,YAAa,KACbC,gBAAiB,GACjBC,0BAA2B,GAC3BC,YAAY,EACZC,YAAa,wDACbC,iBAAkB,kCAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,GAGLkC,GAAyD,CACpEzF,WAAY,UACZ4C,QAASrB,GACTsB,YAAa,oBACbC,YAAa,KACbC,gBAAiB,GACjBC,0BAA2B,GAC3BC,YAAY,EACZC,YACE,8FACFC,iBAAkB,wBAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,GAGLmC,GAA0D,CACrE1F,WAAY,mBACZ4C,QAASpB,GACTqB,YAAa,iBACbC,YAAa,IACbC,gBAAiB,GACjBC,0BAA2B,IAC3BC,YAAY,EACZC,YACE,6EACFC,iBAAkB,wBAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,GAGLoC,GAA4D,CACvE3F,WAAY,mBACZ4C,QAASnB,GACToB,YAAa,mBACbC,YAAa,IACbC,gBAAiB,GACjBC,0BAA2B,IAC3BC,YAAY,EACZC,YACE,oEACFC,iBAAkB,iCAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,GAGLqC,GAA8D,CACzE5F,WAAY,mBACZ4C,QAASlB,GACTmB,YAAa,mBACbC,YAAa,IACbC,gBAAiB,GACjBC,0BAA2B,IAC3BC,YAAY,EACZC,YACE,oEACFC,iBAAkB,2CAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,EAChBM,YAAa,gDAGFgC,GACX,CACE7F,WAAY,mBACZ4C,QAASjB,GACTkB,YAAa,4BACbC,YAAa,KACbC,gBAAiB,GACjBC,0BAA2B,IAC3BC,YAAY,EACZC,YACE,mEACFC,iBAAkB,8CAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,EAChBM,YAAa,gDAGJiC,GAAsD,CACjE9F,WAAY,mBACZ4C,QAAShB,GACTiB,YAAa,mBACbC,YAAa,IACbC,gBAAiB,GACjBC,0BAA2B,IAC3BC,YAAY,EACZC,YAAa,kDACbC,iBAAkB,uBAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,GAGLwC,GACX,CACE/F,WAAY,mBACZ4C,QAASf,GACTgB,YAAa,gCACbC,YAAa,IACbC,gBAAiB,GACjBC,0BAA2B,IAC3BC,YAAY,EACZC,YAAa,yDACbC,iBAAkB,wCAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,EAChBM,YAAa,gDAGJmC,GAA4D,CACvEhG,WAAY,mBACZ4C,QAASd,GACTe,YAAa,+BACbC,YAAa,IACbC,gBAAiB,GACjBC,0BAA2B,IAC3BC,YAAY,EACZC,YAAa,sDACbC,iBAAkB,qCAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,EAChBM,YAAa,gDAGFoC,GACX,CACEjG,WAAY,aACZ4C,QAASb,GACTc,YAAa,+BACbC,YAAa,MACbC,gBAAiB,GACjBC,0BAA2B,IAC3BC,YAAY,EACZC,YAAa,8DACbC,iBAAkB,4BAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,GAGP2C,GACX,CACElG,WAAY,aACZ4C,QAASZ,GACTa,YAAa,8BACbC,YAAa,KACbC,gBAAiB,GACjBC,0BAA2B,GAC3BC,YAAY,EACZC,YAAa,iDACbC,iBAAkB,+BAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,GAGP4C,GACX,CACEnG,WAAY,aACZ4C,QAASX,GACTY,YAAa,uBACbC,YAAa,KACbC,gBAAiB,GACjBC,0BAA2B,GAC3BC,YAAY,EACZC,YAAa,gDACbC,iBAAkB,kCAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,GAGP6C,GACX,CACEpG,WAAY,aACZ4C,QAASV,GACTW,YAAa,oBACbC,YAAa,KACbC,gBAAiB,GACjBC,0BAA2B,GAC3BC,YAAY,EACZC,YAAa,0CACbC,iBAAkB,4BAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,GAGP8C,GAA8D,CACzErG,WAAY,aACZ4C,QAAST,GACTU,YAAa,2BACbC,YAAa,OACbC,gBAAiB,GACjBC,0BAA2B,GAC3BC,YAAY,EACZC,YAAa,2CACbC,iBAAkB,yBAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,GAGL+C,GAA8D,CACzEtG,WAAY,aACZ4C,QAASR,GACTS,YAAa,2BACbC,YAAa,OACbC,gBAAiB,GACjBC,0BAA2B,GAC3BC,YAAY,EACZC,YAAa,gEACbC,iBAAkB,iCAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,GAGLgD,GAAqD,CAChEvG,WAAY,WACZ4C,QAASP,GACTQ,YAAa,WACbC,YAAa,KACbC,gBAAiB,GACjBC,0BAA2B,GAC3BC,YAAY,EACZC,YAAa,2CACbC,iBAAkB,yBAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,EAChBM,YAAa,oBAGF2C,GAAyD,CACpExG,WAAY,WACZ4C,QAASN,GACTO,YAAa,cACbC,YAAa,KACbC,gBAAiB,GACjBC,0BAA2B,GAC3BC,YAAY,EACZC,YAAa,gDACbC,iBAAkB,8BAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,EAChBM,YAAa,oBAGF4C,GAA6D,CACxEzG,WAAY,YACZ4C,QAASL,GACTM,YAAa,0BACbC,YAAa,MACbC,gBAAiB,GACjBC,0BAA2B,IAC3BC,YAAY,EACZC,YACE,mEACFC,iBAAkB,iCAClBC,UAAU,EACVE,sBAAuB,KACvBC,gBAAgB,EAChBsB,wBAAyB,CACvBR,4BAA6B,CAAC,mBAC9BC,WAAY,CACV,CACEC,eAAgB,UAChBC,eAAgB,WAChBC,eAAgB,mBAChBC,SAAS,MAMJgC,GAAoD,CAC/D/D,GACAa,GACAC,GACAC,GACAC,GACAC,GACAG,GACAE,GACAC,GACAC,GACAS,GACAG,GACAC,GACAC,GACAE,GACAD,GACAE,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,IAYI,SAAUE,GAAiBC,GAC/B,IAAMC,EAAsBD,EAC5B,OAAOF,GAAwBI,MAC7B,SAACC,GAAC,OACAA,EAAEnE,UAAYiE,EAAoBjE,SAClCmE,EAAE/G,aAAe6G,EAAoB7G,aAE3C,CAMYG,QA4BXA,uBAAA,GA5BWA,GAAAA,4BAAAA,QAAAA,kBA4BX,CAAA,IA3BC,OAAA,SACAA,GAAA,KAAA,OACAA,GAAA,MAAA,QACAA,GAAA,aAAA,eACAA,GAAA,OAAA,SACAA,GAAA,OAAA,SACAA,GAAA,SAAA,WACAA,GAAA,YAAA,gBACAA,GAAA,KAAA,QACAA,GAAA,GAAA,KACAA,GAAA,QAAA,UACAA,GAAA,kBAAA,UACAA,GAAA,QAAA,UACAA,GAAA,cAAA,gBACAA,GAAA,gBAAA,kBACAA,GAAA,eAAA,iBACAA,GAAA,kBAAA,oBACAA,GAAA,SAAA,WACAA,GAAA,eAAA,mBACAA,GAAA,cAAA,gBACAA,GAAA,eAAA,iBAIAA,GAAA,cAAA,UACAA,GAAA,WAAA,aACAA,GAAA,YAAA,cA+BF,IAAM6G,GAAyB,CAC7B7G,QAAiBA,kBAAC8G,KAClB9G,QAAAA,kBAAkB+G,KAClB/G,QAAiBA,kBAACgH,QAClBhH,0BAAkBiH,MAClBjH,QAAAA,kBAAkBkH,OAClBlH,QAAiBA,kBAACmH,aAClBnH,QAAAA,kBAAkBoH,OAClBpH,QAAiBA,kBAACqH,SAClBrH,QAAAA,kBAAkBsH,cAClBtH,QAAiBA,kBAACuH,gBAClBvH,QAAAA,kBAAkBwH,eAClBxH,QAAiBA,kBAACyH,kBAClBzH,0BAAkB0H,SAClB1H,QAAiBA,kBAAC2H,eAClB3H,QAAAA,kBAAkB4H,cAClB5H,QAAiBA,kBAAC6H,eAClB7H,0BAAkB8H,cAClB9H,QAAAA,kBAAkB+H,WAClB/H,0BAAkBgI,QC5hCdC,GAAa5T,EAAiB,EAAG,KAI1B6T,GAAoCrU,EAAEuB,KAAK,CACtD+S,KAAMtU,EAAE2B,MAAM,CACZ3B,EAAEyB,QAAQ,gBACVzB,EAAEyB,QAAQ,QACVzB,EAAEyB,QAAQ,aACVzB,EAAEyB,QAAQ,aACVzB,EAAEyB,QAAQ,UACVzB,EAAEyB,QAAQ,kBACVzB,EAAEyB,QAAQ,OACVzB,EAAE8B,YAEJyS,UAAWvU,EAAE2B,MAAM,CAAC3B,EAAEyB,QAAQ,QAASzB,EAAEyB,QAAQ,SAAUzB,EAAE8B,YAC7D0S,YAAaxU,EAAE2B,MAAM,CAAC3B,EAAEyB,QAAQ,QAASzB,EAAEyB,QAAQ,SAAUzB,EAAE8B,YAC/D2S,cAAezU,EAAE2B,MAAM,CAAC3B,EAAEyB,QAAQ,QAASzB,EAAEyB,QAAQ,SAAUzB,EAAE8B,YACjE4S,MAAO1U,EAAE2B,MAAM,CAACyS,GAAYpU,EAAE8B,YAC9B6S,KAAM3U,EAAE2B,MAAM,CACZ3B,EAAEyB,QAAQ,YACVzB,EAAEyB,QAAQ,gBACVzB,EAAE8B,cAIO8S,GAA2C5U,EAAEuB,KAAK,CAC7DmT,MAAO1U,EAAE2B,MAAM,CAACyS,GAAYpU,EAAE8B,cAGnB+S,GAA+C7U,EAAEuB,KAAK,CACjE+S,KAAMtU,EAAE2B,MAAM,CACZ3B,EAAEyB,QAAQ,QACVzB,EAAEyB,QAAQ,aACVzB,EAAEyB,QAAQ,aACVzB,EAAEyB,QAAQ,UACVzB,EAAEyB,QAAQ,kBACVzB,EAAEyB,QAAQ,4BACVzB,EAAEyB,QAAQ,WAIRqT,GAA+B9U,EAAE2B,MAAM,CAC3C3B,EAAEuB,KAAK,CACLwT,GAAI/U,EAAEmE,MAAMnE,EAAEe,QACdiU,IAAKhV,EAAEmE,MAAMnE,EAAEe,UAEjBf,EAAC,OAGGiV,GAAoCjV,EAAEkV,QAAQ,CAClDC,KAAMnV,EAAE2B,MAAM,CACZ3B,EAAEuB,KAAK,CACLwT,GAAI/U,EAAEmE,MAAMnE,EAAEe,QACdiU,IAAKhV,EAAEmE,MAAMnE,EAAEe,QACfqU,KAAMpV,EAAE2B,MAAM,CAAC3B,EAAEyB,QAAQ,UAAWzB,EAAEyB,QAAQ,YAEhDzB,EAAC,SAICqV,GAAwBrV,EAAEsV,aAAa,CAC3CtV,EAAEuB,KAAK,CAAEmF,QAASoO,KAClBG,KAGIM,GAAqCvV,EAAEuB,KAAK,CAChDA,KAAMvB,EAAEyB,QAAQ,2BAChB0D,MAAOnF,EAAE2B,MAAM,CAAC3B,EAAEyB,QAAQ,QAASzB,EAAEyB,QAAQ,UAC7C+T,kBAAmBxV,EAAE2B,MAAM,CACzB3B,EAAEyB,QAAQ,QACVzB,EAAEyB,QAAQ,QACVzB,EAAEuB,KAAK,CACLkU,SAAUzV,EAAEY,OACZ8U,KAAMzK,OAGV0K,KAAM3V,EAAE2B,MAAM,CAAC3B,EAAEY,OAAQZ,EAAEyB,QAAQ,UACnCmU,YAAa5V,EAAEmE,MACbnE,EAAEuB,KAAK,CACLsU,iBAAkB7V,EAAEe,OACpB2I,YAAa1J,EAAEe,OACf+U,OAAQT,QAKRU,GAAsC/V,EAAEuB,KAAK,CACjDA,KAAMvB,EAAEyB,QAAQ,8BAChBuU,eAAgBhW,EAAEe,OAClBkV,MAAOjW,EAAEe,SAGLmV,GAAuClW,EAAEuB,KAAK,CAClDA,KAAMvB,EAAEyB,QAAQ,8BAChB0U,OAAQnW,EAAEmE,MACRnE,EAAEuB,KAAK,CACLsU,iBAAkB7V,EAAEe,OACpBqV,QAASpW,EAAEe,OACX2I,YAAa1J,EAAEe,YAKfsV,GAAqCrW,EAAEuB,KAAK,CAChDA,KAAMvB,EAAEyB,QAAQ,6BAGZ6U,GAAkCtW,EAAEuB,KAAK,CAC7CA,KAAMvB,EAAEyB,QAAQ,0BAGZ8U,GAAgDvW,EAAEuB,KAAK,CAC3DA,KAAMvB,EAAEyB,QAAQ,2CAGZ+U,GAA6CxW,EAAEuB,KAAK,CACxDA,KAAMvB,EAAEyB,QAAQ,uCAGZgV,GAAqCzW,EAAEuB,KAAK,CAChDA,KAAMvB,EAAEyB,QAAQ,2BAChBmN,QAASH,GACTzC,WAAYL,GACZ+K,YAAa1W,EAAE2B,MAAM,CAAC3B,EAAEY,OAAQZ,EAAC,OACjCgQ,gBAAiBhQ,EAAE2B,MAAM,CAACiK,GAAsB5L,EAAC,SAG7C2W,GAAmC3W,EAAEuB,KAAK,CAC9CA,KAAMvB,EAAEyB,QAAQ,yBAChBmU,YAAa5V,EAAEmE,MACbnE,EAAEuB,KAAK,CACLsU,iBAAkB7V,EAAEe,OACpB2I,YAAa1J,EAAEe,OACf+U,OAAQT,MAGZG,kBAAmBxV,EAAE2B,MAAM,CACzB3B,EAAEyB,QAAQ,QACVzB,EAAEyB,QAAQ,QACVzB,EAAEuB,KAAK,CACLkU,SAAUzV,EAAEY,OACZ8U,KAAMzK,OAGV2L,OAAQ5W,EAAEmE,MACRnE,EAAEuB,KAAK,CACLgD,KAAMvE,EAAEe,OACRQ,KAAMvB,EAAE2B,MAAM,CACZ3B,EAAEyB,QAAQ,UACVzB,EAAEyB,QAAQ,UACVzB,EAAEyB,QAAQ,aAEZyN,YAAalP,EAAEe,YAKf8V,GAA2B,CAC/BtS,KAAMvE,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAC,OAC1BkP,YAAalP,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAC,QAG7B8W,GAAmC9W,EAAEuB,KAAK,CAC9CgD,KAAMvE,EAAEe,OACRmO,YAAalP,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAC,SAG7B+W,GAA4B/W,EAAEsV,aAAa,CAC/CtV,EAAE2B,MAAM,CACN4T,GACAQ,GACAG,GACAS,GACAN,GACAC,GACAC,GACAC,GACAC,KAEFK,KAGIE,GAA2BhX,EAAEsV,aAAa,CAC9CtV,EAAEuB,KAAK,CACLqN,QAASH,GACTzC,WAAYL,GACZ+K,YAAa1W,EAAEY,SAGjBZ,EAAEkV,QAAQ2B,IACV7W,EAAEkV,QAAQ,CACRlF,gBAAiBpE,OAGfqL,GAAyB,IAAIjX,EAAEC,KACnC,iBACA0S,IACA,SAACuE,EAAG9V,GAAC,OAAMuR,GAAiBuE,GAAKlX,EAAEK,QAAQ6W,GAAKlX,EAAEM,QAAQ4W,EAAG9V,EAAE,GAC/DpB,EAAEO,UAGS4W,GAAiDnX,EAAEuB,KAAK,CACnE6V,UAAWpX,EAAEuB,KAAK,CAChBgD,KAAMvE,EAAEe,OACRmO,YAAalP,EAAEe,OACfsW,aAAcrX,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAC,OAClCsX,WAAYtX,EAAEe,OACduF,OAAQtG,EAAE2B,MAAM,CACd3B,EAAEyB,QAAQ,UACVzB,EAAEyB,QAAQ,YACVzB,EAAEyB,QAAQ,WAEZ8V,MAAOvX,EAAE2B,MAAM,CACb3B,EAAEyB,QAAQ,aACVzB,EAAEyB,QAAQ,aACVzB,EAAEyB,QAAQ,aAEZmR,MAAO5S,EAAEsV,aAAa,CAAC0B,GAA0BC,KACjDO,QAASxX,EAAEmE,MAAM4S,IACjBU,WAAYzX,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAM,KAAEA,EAAE8B,YACzC4V,eAAgB1X,EAAE2B,MAAM,CAAC3B,EAAEY,OAAQZ,EAAE8B,YACrC6V,qBAAsB3X,EAAC,YCvOrB,SAAU4X,GAAeC,GAC7B,OAAOA,EAAI/B,QAAO,SAACgC,GAAC,OAAaA,UACnC,CCFA,IAAMC,GAAO,SAAIF,GAAQ,OAAUG,MAAMC,KAAK,IAAIC,IAAIL,GAAK,EAE9CM,GAAe,SAmCfC,GAAqD,CAChElO,KAAM,SACNmO,KAAM,SACNC,UAAW,SACXC,MAAO,SA6CHC,GAAe,CAEnB,aAAc,CAAEC,IAAK,QAASC,KAAM,CAAC,OAAQ,UAC7C,YAAa,CAAED,IAAK,QAASC,KAAM,CAAC,SACpC,YAAa,CAAED,IAAK,QAASC,KAAM,CAAC,SACpC,aAAc,CAAED,IAAK,QAASC,KAAM,CAAC,UAGrC,WAAY,CAAED,IAAK,YAAaC,KAAM,CAAC,SACvC,8BAA+B,CAAED,IAAK,YAAaC,KAAM,CAAC,SAC1D,WAAY,CAAED,IAAK,YAAaC,KAAM,CAAC,SACvC,4BAA6B,CAAED,IAAK,YAAaC,KAAM,CAAC,SACxD,2BAA4B,CAAED,IAAK,YAAaC,KAAM,CAAC,SACvD,oEAAqE,CACnED,IAAK,YACLC,KAAM,CAAC,UAIT,oCAAqC,CACnCD,IAAK,OACLC,KAAM,CAAC,UAIT,aAAc,CAAED,IAAK,OAAQC,KAAM,CAAC,OAAQ,OAAQ,OAAQ,UAC5D,gBAAiB,CAAED,IAAK,OAAQC,KAAM,CAAC,MAAO,cAC9C,wCAAyC,CAAED,IAAK,OAAQC,KAAM,CAAC,SAC/D,gBAAiB,CAAED,IAAK,OAAQC,KAAM,CAAC,SACvC,mBAAoB,CAAED,IAAK,OAAQC,KAAM,CAAC,UAC1C,qBAAsB,CAAED,IAAK,OAAQC,KAAM,CAAC,OAAQ,UACpD,0EAA2E,CACzED,IAAK,OACLC,KAAM,CAAC,OAAQ,UAEjB,gCAAiC,CAAED,IAAK,OAAQC,KAAM,CAAC,OAAQ,UAC/D,4EAA6E,CAC3ED,IAAK,OACLC,KAAM,CAAC,OAAQ,UAEjB,kBAAmB,CAAED,IAAK,OAAQC,KAAM,CAAC,SAGzC,WAAY,CAAED,IAAK,OAAQC,KAAM,CAAC,SAClC,kBAAmB,CAAED,IAAK,OAAQC,KAAM,CAAC,SACzC,YAAa,CAAED,IAAK,OAAQC,KAAM,CAAC,QAAS,OAAQ,SAAU,eAC9D,WAAY,CAAED,IAAK,OAAQC,KAAM,CAAC,SAClC,kBAAmB,CAAED,IAAK,OAAQC,KAAM,CAAC,MAAO,OAAQ,UACxD,kBAAmB,CAAED,IAAK,OAAQC,KAAM,CAAC,MAAO,SAChD,mBAAoB,CAAED,IAAK,OAAQC,KAAM,CAAC,QAC1C,YAAa,CAAED,IAAK,OAAQC,KAAM,CAAC,QACnC,gBAAiB,CAAED,IAAK,OAAQC,KAAM,CAAC,QACvC,uBAAwB,CAAED,IAAK,OAAQC,KAAM,CAAC,QAC9C,qBAAsB,CAAED,IAAK,OAAQC,KAAM,CAAC,QAAS,SACrD,YAAa,CAAED,IAAK,OAAQC,KAAM,CAAC,QAAS,SAC5C,gBAAiB,CAAED,IAAK,OAAQC,KAAM,CAAC,QAAS,SAChD,WAAY,CACVD,IAAK,OACLC,KAAM,CAAC,KAAM,MAAO,OAAQ,OAAQ,OAAQ,KAAM,QAEpD,gBAAiB,CAAED,IAAK,OAAQC,KAAM,CAAC,QACvC,qBAAsB,CAAED,IAAK,OAAQC,KAAM,CAAC,UAC5C,aAAc,CAAED,IAAK,OAAQC,KAAM,CAAC,SACpC,cAAe,CAAED,IAAK,OAAQC,KAAM,CAAC,QACrC,aAAc,CAAED,IAAK,OAAQC,KAAM,CAAC,SACpC,eAAgB,CAAED,IAAK,OAAQC,KAAM,CAAC,WACtC,cAAe,CAAED,IAAK,OAAQC,KAAM,CAAC,QACrC,YAAa,CAAED,IAAK,OAAQC,KAAM,CAAC,QACnC,gBAAiB,CAAED,IAAK,OAAQC,KAAM,CAAC,MAAO,SAC9C,eAAgB,CAAED,IAAK,OAAQC,KAAM,CAAC,WACtC,gBAAiB,CAAED,IAAK,OAAQC,KAAM,CAAC,YACvC,cAAe,CAAED,IAAK,OAAQC,KAAM,CAAC,MAAO,QAC5C,qBAAsB,CAAED,IAAK,OAAQC,KAAM,CAAC,MAAO,SAgCxCC,GAAiCC,OAAOC,KAAKL,IAEpD,SAAUM,GACdC,GAEA,QAASP,GAAaO,EACxB,CA6CA,SAASC,GAAcD,GACrB,GAAID,GAA2BC,GAAc,CAC3C,IAAME,EAAST,GAAaO,GAE5B,GAAIE,EACF,OAAOA,CAEX,CAEA,OAAO,IACT,UAmDgBC,KACd,OAAOnB,GACLH,GACEgB,OAAOO,QAAQX,IAAcY,KAAI,SAAAC,GAAY,MAC7B,UAD6BA,EAAA,GACrCZ,IAD8BY,EAAA,GAC4B,IAAI,KAI5E,KCrTaC,GAAwCtZ,EAAEuB,KAAK,CAC1DgF,QAASvG,EAAEe,OACXwY,SAAUvZ,EAAEmE,MAAMnE,EAAEuB,KAAK,CAAEiY,gBAAiBxZ,EAAEe,UAC9CX,QAASJ,EAAEuB,KAAK,CACdkY,SAAUzZ,EAAEe,OACZ2Y,kBAAmB1Z,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAC,WAmCrC2Z,GAAuC3Z,EAAEsV,aAAa,CA/B1BtV,EAAEsV,aAAa,CAC/CtV,EAAEuB,KAAK,CACLwF,MAAO/G,EAAEe,SAEXf,EAAEkV,QAAQ,CACRpM,IAAK9I,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAC,OACzB4Z,4BAA6B5Z,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAC,WA2BnDA,EAAEuB,KAAK,CACLsY,OAAQ7Z,EAAEe,WAkBD+Y,GAA+C9Z,EAAEsV,aAAa,CACzEtV,EAAEuB,KAAK,CACLnB,QAASJ,EAAEuB,KAAK,CACdmY,kBAAmB1Z,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAC,WAG3C2Z,KAGWI,GAA6C/Z,EAAEuB,KAAK,CAC/DwF,MAAO/G,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAC,OAC3Bga,WAAYha,EAAE2B,MAAM,CAClB3B,EAAEyB,QAAQ,YACVzB,EAAEyB,QAAQ,aACVzB,EAAEyB,QAAQ,WACVzB,EAAEyB,QAAQ,UAEZ4G,QAASrI,EAAE2B,MAAM,CAAC2X,GAAuCtZ,EAAM,OAC/Dia,iBAAkBja,EAAEmE,MAAM2V,MAGfI,GAAkDla,EAAE2B,MAAM,CACrE3B,EAAEuB,KAAK,CACLA,KAAMvB,EAAEyB,QAAQ,QAChB0Y,OAAQna,EAAEuB,KAAK,CAAE8V,aAAcrX,EAAEe,OAAQmO,YAAalP,EAAEe,WAE1Df,EAAEuB,KAAK,CACLA,KAAMvB,EAAEyB,QAAQ,SAChB0Y,OAAQna,EAAEuB,KAAK,CAAE8V,aAAcrX,EAAEe,WAEnCf,EAAEuB,KAAK,CACLA,KAAMvB,EAAEyB,QAAQ,gBAChB0Y,OAAQna,EAAEuB,KAAK,CACb6Y,qBAAsBpa,EAAEe,OACxBsZ,mBAAoBra,EAAEmE,MAAMnE,EAAEe,YAGlCf,EAAEuB,KAAK,CACLA,KAAMvB,EAAEyB,QAAQ,eAChB0Y,OAAQna,EAAEuB,KAAK,CAAE8V,aAAcrX,EAAEe,OAAQwD,KAAMvE,EAAEe,aAQxCuZ,GAAuCta,EAAE2B,MAAM,CAC1D3B,EAAEuB,KAAK,CACL+E,OAAQtG,EAAEyB,QAAQ,MAClB8Y,YAAava,EAAE2B,MAAM,CAAC3B,EAAEmE,MAAMnE,EAAEe,QAASf,OAAQA,EAAE8B,cAErD9B,EAAEuB,KAAK,CACL+E,OAAQtG,EAAEyB,QAAQ,eAClB+Y,OAAQxa,EAAE2B,MAAM,CACd3B,EAAEyB,QAAQ,qBACVzB,EAAEyB,QAAQ,oBASHgZ,GAA4Cza,EAAEuB,KAAK,CAC9DgZ,YAAava,EAAEmE,MAAMnE,EAAEuB,KAAK,CAAEmZ,MAAO1a,EAAEe,OAAQ4Z,gBAAiB3a,EAAEe,YAMvD6Z,GACX5a,EAAEuB,KAAK,CACL8V,aAAcrX,EAAEe,SC1Id8Z,GAAsB7a,EAAEuB,KAAK,CACjCuZ,UAAW9a,EAAEmE,MAAMnE,EAAEe,QACrBga,aAAc/a,EAAEyB,SAAQ,KAGpBuZ,GAAwBhb,EAAEuB,KAAK,CACnCuZ,UAAW9a,EAAM,KACjB+a,aAAc/a,EAAEyB,SAAQ,KAGbwZ,GAA6Bjb,EAAEsV,aAAa,CACvDtV,EAAEuB,KAAK,CACLgD,KAAMvE,EAAEe,SAEVf,EAAE2B,MAAM,CAACkZ,GAAqBG,OAGnBE,GAAqClb,EAAE2B,MAAM,CACxDkZ,GACAG,KAGWG,GAAgBnb,EAAEuB,KAAK,CAClCkI,aAAczJ,EAAEe,OAChBqa,UAAWpb,EAAEmE,MAAMnE,EAAEe,UAGVsa,GAA8Brb,EAAEuB,KAAK,CAChDgD,KAAMvE,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAE8B,YAC3ByE,QAASvG,EAAE2B,MAAM,CAAC3B,EAAEmE,MAAMgX,IAAgBnb,EAAE8B,cAGjCwZ,GAA2BH,GAE3BI,GAA8Bvb,EAAEuB,KAAK,CAChDia,KAAMxb,EAAEmE,MAAMnE,EAAEe,QAChB0a,OAAQzb,EAAE2B,MAAM,CAAC3B,EAAEyB,QAAQ,QAASzB,EAAEyB,QAAQ,cAGnCia,GAAsC1b,EAAEuB,KAAK,CACxDoa,YAAa3b,EAAEmE,MACbnE,EAAEsV,aAAa,CACbtV,EAAEuB,KAAK,CACLuH,IAAK9I,EAAEe,OACP0a,OAAQzb,EAAE2B,MAAM,CAAC3B,EAAEyB,QAAQ,QAASzB,EAAEyB,QAAQ,YAC9Cma,UAAW5b,EAAEY,OACbP,QAASL,EAAC,UAEZA,EAAEkV,QAAQ,CACR2G,cAAe7b,EAAEe,cC9CZ+a,GAAsB9b,EAAEuB,KAAK,CACxCwa,UAAW/b,EAAE2B,MAAM,CACjB3B,EAAEyB,QAAQ,SACVzB,EAAEyB,QAAQ,eACVzB,EAAE8B,cAMOka,GAGThc,EAAEic,UAAU,WAAW,WAAA,OACzBjc,EAAEuB,KAAK,CACL2a,OAAQlc,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAC,OAC5BuG,QAASvG,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAC,OAC7Bmc,SAAUnc,EAAEmE,MAAM6X,KAClB,IAOSI,GAA0Cpc,EAAEuB,KAAK,CAC5Dqa,UAAW5b,EAAE2B,MAAM,CAAC3B,EAAEqc,IAAKrc,EAAE8B,UAAW9B,EAAC,OACzCmV,KAAMnV,EAAE2B,MAAM,CAAC3B,EAAEmE,MAAMnE,EAAEe,QAASf,EAAE8B,UAAW9B,EAAM,OACrDsc,UAAWtc,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAE8B,UAAW9B,EAAC,OAC5C0G,QAAS1G,EAAE2B,MAAM,CAAC3B,EAAEmE,MAAMnE,EAAEe,QAASf,EAAE8B,UAAW9B,EAAM,OACxDuc,WAAYvc,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAE8B,UAAW9B,EAAC,OAC7Cwc,eAAgBxc,EAAE2B,MAAM,CAACma,GAAqB9b,EAAE8B,UAAW9B,EAAC,OAC5Dyc,KAAMzc,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAE8B,UAAW9B,EAAC,OACvC0c,QAAS1c,EAAE2B,MAAM,CAACqa,GAAgChc,EAAE8B,UAAW9B,EAAC,OAChE2c,sBAAuB3c,EAAE2B,MAAM,CAAC3B,EAAC,QAAUA,EAAE8B,YAC7C8a,MAAO5c,EAAE2B,MAAM,CAAC3B,EAAC,QAAUA,EAAE8B,UAAW9B,EAAC,OACzC+G,MAAO/G,EAAEe,OACT8b,UAAW7c,EAAEe,SAOF+b,GAAkD9c,EAAEsV,aAAa,CAC5EtV,EAAEuB,KAAK,CACLgD,KAAMvE,EAAEe,SAEVqb,KAYWW,GAAwC/c,EAAEuB,KAAK,CAC1DgD,KAAMvE,EAAEe,OACRmO,YAAalP,EAAEe,OACf6a,UAAW5b,EAAE2B,MAAM,CAAC3B,EAAEY,OAAQZ,EAAE8B,UAAW9B,EAAC,OAC5CmV,KAAMnV,EAAE2B,MAAM,CAAC3B,EAAEmE,MAAMnE,EAAEe,QAASf,EAAE8B,UAAW9B,EAAM,OACrD4K,SAAU5K,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAE8B,UAAW9B,EAAC,OAC3C0G,QAAS1G,EAAE2B,MAAM,CAAC3B,EAAEmE,MAAMnE,EAAEe,QAASf,EAAE8B,UAAW9B,EAAM,OACxDgd,SAAUhd,EAAS,QACnB4c,MAAO5c,EAAE2B,MAAM,CAAC3B,EAAC,QAAUA,EAAE8B,YAC7B+X,OAAQ7Z,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAE8B,YAC7BiF,MAAO/G,EAAEe,OACTkc,SAAUjd,EAAEe,OACZmc,UAAWld,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAE8B,UAAW9B,WC/DhCmd,GAA4Bnd,EAAE2B,MAAM,CAThB3B,EAAEuB,KAAK,CACtC6b,aAAcpd,EAAE2B,MAAM,CAAC3B,EAAEmE,MAAMnE,EAAEe,QAASf,EAAE8B,YAC5Cub,gBAAiBrd,EAAE2B,MAAM,CAAC3B,EAAEmE,MAAMnE,EAAEe,QAASf,EAAE8B,cAGzB9B,EAAEuB,KAAK,CAC7B6Z,UAAWpb,EAAEmE,MAAMnE,EAAEe,YAuBVuc,GAA8B,CACzC,UACA,SACA,UACA,QAMI,SAAUC,GACdC,GAEA,OAAOF,GAA4Bvd,SACjCyd,EAEJ,CC3CO,ICSMC,GAAqBzd,EAAEuB,KAAK,CACvCmc,aAAc1d,EAAEe,OAChB4c,WAAY3d,EAAEe,OACdwF,QAASvG,EAAEe,OACX6c,aAAc5d,EAAEe,OAChB8c,aAAc7d,EAAEe,SAGL+c,GAA2B9d,EAAEuB,KAAK,CAC7Cwc,QAAS/d,EAAEmE,MAAMsZ,MCcGO,GAAU,WAK9B,SAAAA,EACElX,EACAvF,EACA0c,YAAAA,IAAAA,EAA4C,IAAE/e,KAPvC4H,QAAE,EAAA5H,KACFqC,UAAI,EAAArC,KACJ+e,oBAAc,EAOrB/e,KAAK4H,GAAKA,EACV5H,KAAKqC,KAAOA,EACZrC,KAAK+e,eAAiBA,CACxB,CAIC,OAJAD,EAAA5e,UAED8e,kBAAA,WACE,OAAOhf,KAAK+e,gBACbD,CAAA,CAjB6B,GC4D1B,SAAUG,GACdC,GAEA,QACIA,GACa,iBAARA,GACP,SAAUA,GACG,0BAAbA,EAAI7c,IAER,CC1EgB,SAAA8c,GAA8BC,GAI7C,IAHCC,EAAMD,EAANC,OAIA,MAAsC,iBAAxBA,MAAAA,OAAAA,EAAAA,EAAQC,aAClBD,EAAOC,YACP,eACN,CCzBA,IAAMC,GAA2Bze,EAAEuB,KAAK,CACtCwF,MAAO/G,EAAEe,OACT2d,QAAS1e,EAAEe,OACX4d,KAAM3e,EAAEe,SAEG6d,GAAiC5e,EAAE2B,MAAM,CACpD3B,EAAEuB,KAAK,CACLwc,QAAS/d,EAAEmE,MAAMsa,MAEnBze,EAAEuB,KAAK,CACL/B,MAAOQ,EAAEe,OACTgd,QAAS/d,EAAEmE,MAAMsa,QAIfI,GAAwB7e,EAAEuB,KAAK,CACnCwF,MAAO/G,EAAEe,OACT2d,QAAS1e,EAAEe,OACX4d,KAAM3e,EAAEe,OACR+d,UAAW9e,EAAEe,SAEFge,GAA8B/e,EAAE2B,MAAM,CACjD3B,EAAEuB,KAAK,CACLwc,QAAS/d,EAAEmE,MAAM0a,MAEnB7e,EAAEuB,KAAK,CACLwc,QAAS/d,EAAEmE,MAAM0a,IACjBrf,MAAOQ,EAAEe,WC3CPie,GAAuB,CAC3B,OACA,OACA,MACA,SACA,QACA,SACA,OACA,QACA,UACA,OACA,OACA,MACA,OACA,SACA,SACA,SACA,WAEIC,GAAwB,CAC5B,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OCzBWC,GAA8B,CACzC,gBACA,UACA,WACA,YAIWC,GAAgCzf,EAC3Cwf,GACA,4BCsQWE,YAAkBtV,GAG7B,SAAAsV,EAAY7d,GAA2B,IAAAyI,EAEpB,OADjBA,EAAAF,EAAAG,KAAA/K,KAAA,+BAAqCqC,IAAOrC,MAHrCqC,UAAI,EAIXyI,EAAKzI,KAAOA,EAAKyI,CACnB,CAAC,OAAAG,GAAAiV,EAAAtV,GAAAsV,CAAA,EAAAhV,GANoCC,QCxQ1BgV,GAAsB,CACjC,UACA,OACA,SACA,cACA,UACA,SACA,YACA,YACA,aACA,UACA,qBACA,eACA,QACA,YACA,cACA,WAWWC,GAA0C,CACrDC,QAAS,CACPC,MAAO,WAETC,KAAM,CACJD,MAAO,QAETE,OAAQ,CACNF,MAAO,UAETG,YAAa,CACXH,MAAO,eAETI,QAAS,CACPJ,MAAO,WAETK,OAAQ,CACNL,MAAO,UAETM,UAAW,CACTN,MAAO,aAETO,UAAW,CACTP,MAAO,aAETQ,WAAY,CACVR,MAAO,cAETS,QAAS,CACPT,MAAO,WAETU,mBAAoB,CAClBV,MAAO,sBAETW,aAAc,CACZX,MAAO,gBAETY,MAAO,CACLZ,MAAO,SAETa,UAAW,CACTb,MAAO,aAETc,YAAa,CACXd,MAAO,eAETe,QAAS,CACPf,MAAO,YAYLgB,GAA2BxgB,EAAEygB,MAAKC,GAAA,CAAA,EACnCpB,KAWQqB,GAAwD,CACnEC,aAAc,eACdC,iBAAkB,sBAClBC,aAAc,eACdC,QAAS,eACTC,eAAgB,kBAGLC,GAAyBvhB,EACpCkZ,OAAOC,KAAK8H,IACZ,qBAQIO,GAAwBlhB,EAAEmE,MANCnE,EAAEuB,KAAK,CACtCA,KAAM0f,GACN1c,KAAM4c,EAAcA,eACpBjS,YAAaiS,EAAcA,eAC3BC,KAAMD,EAAAA,kBAMKE,GAAwB,CACnC,QACA,YACA,YAGWC,GAA0B5hB,EACrC2hB,GACA,sBAKWE,GAA2BvhB,EAAEuB,KAAK,CAC7CoZ,gBAAiBwG,EAAcA,eAC/BjS,YAAalP,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAE8B,YAClC4Y,MAAOyG,EAAcA,eACrBK,OAAQL,EAAcA,eACtBM,kBAAmBzhB,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAE8B,YACxC4f,cAAe1hB,EAAE2B,MAAM,CAACsJ,GAAoBjL,EAAEyB,QAAQ,IAAKzB,EAAE8B,YAC7D6f,YAAa3hB,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAE8B,YAClC8f,iBAAkB5hB,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAE8B,YACvC+f,cAAeX,GACfY,mBAAoB9hB,EAAE2B,MAAM,CAAC3B,EAAEe,OAAQf,EAAE8B,YACzCigB,cAAe/hB,EAAEe,OACjBihB,kBAAmB7C,GACnBhK,KAAM8M,EAAaA,cAACzB,IACpBxG,WAAYsH,KCxFR,SAAUY,GACdjjB,GAKA,MAAqB,iBAAVA,GAAgC,OAAVA,GAOjB,YAHNA,EAGNyC,SACsB,iBAJhBzC,EAICkjB,YACoB,iBALrBljB,EAKCmjB,iBACW,iBANZnjB,EAMCojB,QACI,OAPLpjB,EAONojB,QAC4C,iBARtCpjB,EAQEojB,OAAyBxI,MAEvC,CAGM,SAAUyI,GACdrjB,GAKA,MAAqB,iBAAVA,GAAgC,OAAVA,GAOjB,qBAHNA,EAGNyC,SACsB,iBAJhBzC,EAICkjB,YACoB,iBALrBljB,EAKCmjB,eAEb,CAGM,SAAUG,GACdtjB,GAKA,MAAqB,iBAAVA,GAAgC,OAAVA,GAOjB,qBAHNA,EAGNyC,SACsB,iBAJhBzC,EAICkjB,YACoB,iBALrBljB,EAKCmjB,iBACW,iBANZnjB,EAMCojB,QACI,OAPLpjB,EAONojB,QACqD,iBAR/CpjB,EAQEojB,OAAkCG,MAEhD,CAEM,SAAUC,GACdxjB,GAIA,MAAqB,iBAAVA,GAAgC,OAAVA,GAOjB,oBAHNA,EAGNyC,SACsB,iBAJhBzC,EAICkjB,YACoB,iBALrBljB,EAKCmjB,eAEb,CAEM,SAAUM,GACdzjB,GAKA,MAAqB,iBAAVA,GAAgC,OAAVA,GAOjB,wBAHNA,EAGNyC,SACsB,iBAJhBzC,EAICkjB,YACoB,iBALrBljB,EAKCmjB,iBACW,iBANZnjB,EAMCojB,QACI,OAPLpjB,EAONojB,QAPMpjB,EAQLojB,OAAqCM,gBAAgBC,IAE5D,CAGM,SAAUC,GACd5jB,GAKA,MAAqB,iBAAVA,GAAgC,OAAVA,GAOjB,gBAHNA,EAGNyC,SACsB,iBAJhBzC,EAICkjB,YACoB,iBALrBljB,EAKCmjB,eAEb,CC3LaU,IAAAA,GAAsB,CACjC,aACA,SACA,eACA,WACA,SACA,QACA,YACA,aACA,YACA,UACA,WACA,aACA,QCHWC,GAAc,CAAC,UAAW,SAAU,UA4B3CC,GAAqB,mBCxCdC,GAA2BjjB,EAAEuB,KAAK,CAC7C2hB,OAAQljB,EAAEe,OACVoiB,QAASnjB,EAAEojB,QACXC,SAAUrjB,EAAEe,OACZuiB,OAAQtjB,EAAEuC,cACV+D,OAAQtG,EAAEuB,KAAK,CACbgiB,IAAKvjB,EAAEe,OACPyiB,OAAQxjB,EAAEmE,MACRnE,EAAEuB,KAAK,CACLkiB,WAAYzjB,EAAEe,OACdwD,KAAMvE,EAAEe,OACRuF,OAAQtG,EAAEe,OACV2iB,cAAe1jB,EAAEojB,QACjBO,YAAa3jB,EAAEojB,aAIrBQ,OAAQ5jB,EAAE6jB,aACVC,mBAAoB9jB,EAAEe,SCnBxBgjB,GAaIC,QAAQC,IAAGC,GAAAH,GAZbI,+BAAAA,QAAiC,IAAHD,GAAG,GAAEA,GAAAE,GAAAL,GACnCM,kCAAAA,QAAoC,IAAHD,GAAG,GAAEA,GAAAE,GAAAP,GACtCQ,mCAAAA,QAAqC,IAAHD,GAAG,GAAEA,GAAAE,GAAAT,GACvCU,4BAAAA,QAA8B,IAAHD,GAAG,GAAEA,GAAAE,GAAAX,GAChCY,+BAAAA,QAAiC,IAAHD,GAAG,GAAEA,GAAAE,GAAAb,GACnCc,6BAAAA,QAA+B,IAAHD,GAAG,GAAEA,GAAAE,GAAAf,GACjCgB,sCAAAA,QAAwC,IAAHD,GAAG,GAAEA,GAAAE,GAAAjB,GAC1CkB,0BAAAA,QAA4B,IAAHD,GAAG,GAAEA,GAAAE,GAAAnB,GAC9BoB,iCAAAA,QAAmC,IAAHD,GAAG,GAAEA,GAAAE,GAAArB,GACrCsB,gCAAAA,QAAkC,IAAHD,GAAG,GAAEA,GAAAE,GAAAvB,GACpCwB,8BAAAA,QAAgC,IAAHD,GAAG,GAAEA,GAAAE,GAAAzB,GAClC0B,+BAAAA,QAAiC,IAAHD,GAAG,GAAEA,GA+DxBE,GAAyB,WACpC,MAAO,CACLC,kBAAmBxB,GACnByB,qBAAsBvB,GACtBwB,sBAAuBtB,GACvBuB,gBAAiBjB,GACjBkB,eAAgBtB,GAChBuB,kBAAmBrB,GACnBsB,yBAA0BlB,GAC1BmB,aAAcjB,GACdkB,oBAAqBhB,GACrBiB,mBAAoBf,GACpBgB,iBAAkBd,GAClBe,kBAAmBb,GAEvB,EC3Eac,GAAyB,CACpC,sBACA,6BACA,oBACA,kCACA,sCACA,4BACA,4CACA,0CACA,iCAiGWC,GAAa,WAKxB,SAAAA,EACElD,EACAmD,GAAuBvnB,KANzBwnB,UAAI,EAAAxnB,KACJynB,aAAO,EAAAznB,KACP0nB,aAAO,EAML1nB,KAAKwnB,KAAOpD,EAAOxa,IACnB5J,KAAKynB,QAAUrD,EAAOuD,OACtB3nB,KAAK0nB,QAAUH,CACjB,CAAC,IAAAtnB,EAAAqnB,EAAApnB,UA0gBA,OA1gBAD,EAEK2nB,gBAAe,WAAA,IAAAC,EAAAC,GAAAC,KAAAC,MAArB,SAAAC,EAAA7I,GAAA,IAAA8I,EAAA1d,EAAAF,EAAAC,EAAAE,EAAAL,EAAA,OAAA2d,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAMe,OALbJ,EAAQ9I,EAAR8I,SACA1d,EAAW4U,EAAX5U,YACAF,EAAe8U,EAAf9U,gBACAC,EAAY6U,EAAZ7U,aACAE,EAAY2U,EAAZ3U,aACAL,EAAagV,EAAbhV,cAAage,EAAAE,KAAA,EASKtoB,KAAKuoB,gBAClBvoB,KAAKwnB,KAAI,sBAAsBgB,mBAAmBN,GACrD,CACE3L,OAAQ,OACRtS,QAASjK,KAAKyoB,oBACdC,KAAMC,KAAKC,UAAU,CACnBpe,YAAAA,EACAF,gBAAAA,EACAC,aAAAA,EACAE,aAAAA,EACAL,cAAAA,MAGL,KAAA,EAbQ,OAAAge,EAAAS,OAAA,SAeF7oB,KAAK8oB,oBAfHV,EAAAW,OAe2B,KAAA,EAAA,IAAA,MAAA,OAAAX,EAAAY,OAAA,GAAAf,EAAAjoB,KACrC,KAAA,OAAA,SAAAipB,GAAA,OAAApB,EAAAqB,MAAAlpB,KAAAmpB,UAAA,CAAA,CA/BoB,GA+BpBlpB,EAEKmpB,oBAAmB,WAAA,IAAAC,EAAAvB,GAAAC,KAAAC,MAAzB,SAAAsB,EAAAnP,GAAA,IAAArX,EAAAsH,EAAA,OAAA2d,KAAAI,MAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,KAAA,EAEe,OADbxlB,EAAWqX,EAAXrX,YACAsH,EAAa+P,EAAb/P,cAAamf,EAAAjB,KAAA,EAKKtoB,KAAKuoB,gBAClBvoB,KAAKwnB,KAAI,eAAegB,mBACzB1lB,GAEF,iBAAA,CACEyZ,OAAQ,QACRtS,QAASjK,KAAKyoB,oBACdC,KAAMC,KAAKC,UACTxe,KAGL,KAAA,EAXQ,OAAAmf,EAAAV,OAAA,SAaF7oB,KAAK8oB,oBAbHS,EAAAR,OAa2B,KAAA,EAAA,IAAA,MAAA,OAAAQ,EAAAP,OAAA,GAAAM,EAAAtpB,KACrC,KAAA,OAAA,SAAAwpB,GAAA,OAAAH,EAAAH,MAAAlpB,KAAAmpB,UAAA,CAAA,CArBwB,GAqBxBlpB,EAEKwpB,gBAAe,WAAA,IAAAC,EAAA5B,GAAAC,KAAAC,MAArB,SAAA2B,EAAAC,GAAA,IAAA9mB,EAAA2H,EAAA,OAAAsd,KAAAI,MAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,KAAA,EAEc,OADZxlB,EAAW8mB,EAAX9mB,YACA2H,EAAYmf,EAAZnf,aAAYof,EAAAvB,KAAA,EAKMtoB,KAAKuoB,gBAClBvoB,KAAKwnB,KAAI,sBAAsBgB,mBAAmB1lB,GACrD,CACEyZ,OAAQ,OACRtS,QAASjK,KAAKyoB,oBACdC,KAAMC,KAAKC,UAAU,CACnBne,aAAAA,MAGL,KAAA,EATQ,OAAAof,EAAAhB,OAAA,SAWF7oB,KAAK8oB,oBAXHe,EAAAd,OAW2B,KAAA,EAAA,IAAA,MAAA,OAAAc,EAAAb,OAAA,GAAAW,EAAA3pB,KACrC,KAAA,OAAA,SAAA8pB,GAAA,OAAAJ,EAAAR,MAAAlpB,KAAAmpB,UAAA,CAAA,CAnBoB,GAmBpBlpB,EAEK8pB,cAAa,WAAA,IAAAC,EAAAlC,GAAAC,KAAAC,MAAnB,SAAAiC,EACEnnB,GAAmB,OAAAilB,KAAAI,MAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,KAAA,EAAA,OAAA4B,EAAA5B,KAAA,EAEDtoB,KAAKuoB,gBAClBvoB,KAAKwnB,KAAI,oBAAoBgB,mBAAmB1lB,GACnD,CACEyZ,OAAQ,OACRtS,QAASjK,KAAKyoB,sBAEjB,KAAA,EANQ,OAAAyB,EAAArB,OAAA,SAQF7oB,KAAK8oB,oBARHoB,EAAAnB,OAQ2B,KAAA,EAAA,IAAA,MAAA,OAAAmB,EAAAlB,OAAA,GAAAiB,EAAAjqB,KACrC,KAAA,OAAA,SAAAmqB,GAAA,OAAAH,EAAAd,MAAAlpB,KAAAmpB,UAAA,CAAA,CAZkB,GAYlBlpB,EAEKmqB,eAAc,WAAA,IAAAC,EAAAvC,GAAAC,KAAAC,MAApB,SAAAsC,EACExnB,GAAmB,OAAAilB,KAAAI,MAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,KAAA,EAAA,OAAAiC,EAAAjC,KAAA,EAEDtoB,KAAKuoB,gBAClBvoB,KAAKwnB,KAAI,qBAAqBgB,mBAAmB1lB,GACpD,CACEyZ,OAAQ,OACRtS,QAASjK,KAAKyoB,sBAEjB,KAAA,EANQ,OAAA8B,EAAA1B,OAAA,SAQF7oB,KAAK8oB,oBARHyB,EAAAxB,OAQ2B,KAAA,EAAA,IAAA,MAAA,OAAAwB,EAAAvB,OAAA,GAAAsB,EAAAtqB,KACrC,KAAA,OAAA,SAAAwqB,GAAA,OAAAH,EAAAnB,MAAAlpB,KAAAmpB,UAAA,CAAA,CAZmB,GAYnBlpB,EAEKwqB,iBAAgB,WAAA,IAAAC,EAAA5C,GAAAC,KAAAC,MAAtB,SAAA2C,EACE7nB,GAAmB,OAAAilB,KAAAI,MAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,KAAA,EAAA,OAAAsC,EAAAtC,KAAA,EAEDtoB,KAAKuoB,gBAClBvoB,KAAKwnB,KAAI,uBAAuBgB,mBAAmB1lB,GACtD,CACEyZ,OAAQ,OACRtS,QAASjK,KAAKyoB,sBAEjB,KAAA,EANQ,OAAAmC,EAAA/B,OAAA,SAQF7oB,KAAK8oB,oBARH8B,EAAA7B,OAQ2B,KAAA,EAAA,IAAA,MAAA,OAAA6B,EAAA5B,OAAA,GAAA2B,EAAA3qB,KACrC,KAAA,OAAA,SAAA6qB,GAAA,OAAAH,EAAAxB,MAAAlpB,KAAAmpB,UAAA,CAAA,CAZqB,GAYrBlpB,EAEK6qB,gBAAe,WAAA,IAAAC,EAAAjD,GAAAC,KAAAC,MAArB,SAAAgD,EACEloB,GAAmB,OAAAilB,KAAAI,MAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,KAAA,EAAA,OAAA2C,EAAA3C,KAAA,EAEDtoB,KAAKuoB,gBAClBvoB,KAAKwnB,KAAI,sBAAsBgB,mBAAmB1lB,GACrD,CACEyZ,OAAQ,OACRtS,QAASjK,KAAKyoB,sBAEjB,KAAA,EANQ,OAAAwC,EAAApC,OAAA,SAQF7oB,KAAK8oB,oBARHmC,EAAAlC,OAQ2B,KAAA,EAAA,IAAA,MAAA,OAAAkC,EAAAjC,OAAA,GAAAgC,EAAAhrB,KACrC,KAAA,OAAA,SAAAkrB,GAAA,OAAAH,EAAA7B,MAAAlpB,KAAAmpB,UAAA,CAAA,CAZoB,GAYpBlpB,EAEKkrB,cAAa,WAAA,IAAAC,EAAAtD,GAAAC,KAAAC,MAAnB,SAAAqD,EACEvoB,GAAmB,OAAAilB,KAAAI,MAAA,SAAAmD,GAAA,cAAAA,EAAAjD,KAAAiD,EAAAhD,MAAA,KAAA,EAAA,OAAAgD,EAAAhD,KAAA,EAEDtoB,KAAKuoB,gBAClBvoB,KAAKwnB,KAAI,oBAAoBgB,mBAAmB1lB,GACnD,CACEyZ,OAAQ,OACRtS,QAASjK,KAAKyoB,sBAEjB,KAAA,EANQ,OAAA6C,EAAAzC,OAAA,SAQF7oB,KAAK8oB,oBARHwC,EAAAvC,OAQ2B,KAAA,EAAA,IAAA,MAAA,OAAAuC,EAAAtC,OAAA,GAAAqC,EAAArrB,KACrC,KAAA,OAAA,SAAAurB,GAAA,OAAAH,EAAAlC,MAAAlpB,KAAAmpB,UAAA,CAAA,CAZkB,GAYlBlpB,EAEKurB,gBAAe,WAAA,IAAAC,EAAA3D,GAAAC,KAAAC,MAArB,SAAA0D,EACE5oB,EACAsB,GAAK,OAAA2jB,KAAAI,MAAA,SAAAwD,GAAA,cAAAA,EAAAtD,KAAAsD,EAAArD,MAAA,KAAA,EAAQ,YAAR,IAALlkB,IAAAA,GAAQ,GAAKunB,EAAArD,KAAA,EAEKtoB,KAAKuoB,gBAClBvoB,KAAKwnB,KAA0BgB,sBAAAA,mBAChC1lB,GACSsB,WAAAA,EAAQ,OAAS,SAC5B,CACEmY,OAAQ,SACRtS,QAASjK,KAAKyoB,sBAEjB,KAAA,EARQ,OAAAkD,EAAA9C,OAAA,SAUF7oB,KAAK8oB,oBAVH6C,EAAA5C,OAU2B,KAAA,EAAA,IAAA,MAAA,OAAA4C,EAAA3C,OAAA,GAAA0C,EAAA1rB,KACrC,KAAA,OAAA,SAAA4rB,EAAAC,GAAA,OAAAJ,EAAAvC,MAAAlpB,KAAAmpB,UAAA,CAAA,CAfoB,GAepBlpB,EAEK6rB,wBAAuB,WAAA,IAAAC,EAAAjE,GAAAC,KAAAC,MAA7B,SAAAgE,EAAAC,GAAA,IAAAnpB,EAAAopB,EAAAxgB,EAAAygB,EAAAC,EAAAC,EAAAC,EAAA1iB,EAAA2iB,EAAA,OAAAxE,KAAAI,MAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,KAAA,EAyB0C,OAxBxCxlB,EAAWmpB,EAAXnpB,YACAopB,EAAgBD,EAAhBC,iBACAxgB,EAAQugB,EAARvgB,SACA0gB,OAAW,KADHD,EAAAF,EACRG,UAAW,WAAUD,EAOfE,EAAc,IAAII,gBAEpB/gB,GACF2gB,EAAYK,OAAO,WAAYhhB,GAG7BwgB,GACFG,EAAYK,OAAO,mBAAoBR,GAGnCI,EAAKD,EAAYlqB,WAEjByH,EAAS5J,KAAKwnB,KAAmBgB,eAAAA,mBACrC1lB,GACD,yBAAyBspB,EAAQ,IAAIE,EAAEE,EAAAlE,KAAA,EAEtBtoB,KAAKuoB,gBAAgB3e,EAAK,CAC1C2S,OAAQ,MACRtS,QAASjK,KAAKyoB,sBACd,KAAA,EAHO,OAAH8D,EAAGC,EAAAzD,KAAAyD,EAAAlE,KAAA,GAKctoB,KAAK8oB,oBAAoByD,GAAI,KAAA,GAAtC,OAAAC,EAAA3D,OAAA,SAAA2D,EAAAzD,MAE2C,KAAA,GAAA,IAAA,MAAA,OAAAyD,EAAAxD,OAAA,GAAAgD,EAAAhsB,KAC1D,KAAA,OAAA,SAAA2sB,GAAA,OAAAZ,EAAA7C,MAAAlpB,KAAAmpB,UAAA,CAAA,CAnC4B,GAmC5BlpB,EAEK2sB,wBAAuB,WAAA,IAAAC,EAAA/E,GAAAC,KAAAC,MAA7B,SAAA8E,EAAAC,GAAA,IAAAjqB,EAAAkqB,EAAA,OAAAjF,KAAAI,MAAA,SAAA8E,GAAA,cAAAA,EAAA5E,KAAA4E,EAAA3E,MAAA,KAAA,EAiBI,OANFtoB,KAAK0nB,QAAQwF,KACX,CACEpqB,YAZJA,EAAWiqB,EAAXjqB,YAaIkqB,UAZJA,EAASD,EAATC,WAcE,iCACAC,EAAA3E,KAAA,EAEgBtoB,KAAKuoB,gBAClBvoB,KAAKwnB,KAAI,eAAegB,mBAAmB1lB,GAC9C,eAAA,CACEyZ,OAAQ,OACRtS,QAASjK,KAAKyoB,oBACdC,KAAMC,KAAKC,UAAU,CACnBoE,UAAWA,EAAU9S,KAAI,SAAAiT,GAAyB,MAAQ,CACxDC,YADoCD,EAAVE,WAE1BC,WAFgDH,EAAVG,mBAM7C,KAAA,EAZQ,OAAAL,EAAApE,OAAA,SAcF7oB,KAAK8oB,oBAdHmE,EAAAlE,OAc2B,KAAA,EAAA,IAAA,MAAA,OAAAkE,EAAAjE,OAAA,GAAA8D,EAAA9sB,KACrC,KAAA,OAAA,SAAAutB,GAAA,OAAAV,EAAA3D,MAAAlpB,KAAAmpB,UAAA,CAAA,CAlC4B,GAkC5BlpB,EAEKutB,aAAY,WAAA,IAAAC,EAAA3F,GAAAC,KAAAC,MAAlB,SAAA0F,EACE5qB,GAAmB,IAAA6qB,EAAA,OAAA5F,KAAAI,MAAA,SAAAyF,GAAA,cAAAA,EAAAvF,KAAAuF,EAAAtF,MAAA,KAAA,EAEuB,GAApCqF,EAAWE,SAAS/qB,EAAa,KACnCgrB,MAAMH,GAAS,CAAAC,EAAAtF,KAAA,EAAA,KAAA,CAIhB,OAAAsF,EAAA/E,OAAA,SACM,IAAIxoB,EAJqB,CAC9BgC,KAAM,wBACN8G,QAAS,0BAEQ,KAAA,EAAA,OAAAykB,EAAAtF,KAAA,EAGHtoB,KAAKuoB,gBAClBvoB,KAAKwnB,KAAI,eAAegB,mBAAmB1lB,GAC9C,CACEyZ,OAAQ,MACRtS,QAASjK,KAAKyoB,sBAEjB,KAAA,EANQ,OAAAmF,EAAA/E,OAAA,SAQF7oB,KAAK8oB,oBARH8E,EAAA7E,OAQ2B,KAAA,EAAA,IAAA,MAAA,OAAA6E,EAAA5E,OAAA,GAAA0E,EAAA1tB,KACrC,KAAA,OAAA,SAAA+tB,GAAA,OAAAN,EAAAvE,MAAAlpB,KAAAmpB,UAAA,EArBiB,GAuBlBlpB,EACM+tB,2BAA0B,WAAA,IAAAC,EAAAnG,GAAAC,KAAAC,MAAhC,SAAAkG,EACE/hB,GAA0B,IAAAgiB,EAAA,OAAApG,KAAAI,MAAA,SAAAiG,GAAA,cAAAA,EAAA/F,KAAA+F,EAAA9F,MAAA,KAAA,EAAA,OAAA8F,EAAA9F,KAAA,EAERtoB,KAAKuoB,gBAClBvoB,KAAKwnB,KAAI,eAAegB,mBACH2F,OADqBA,EAC3ChiB,EAAWrJ,aAAWqrB,EAAI,IAChBhiB,WAAAA,EAAWvE,GACvB,CACE2U,OAAQ,MACRtS,QAASjK,KAAKyoB,sBAEjB,KAAA,EARQ,OAAA2F,EAAAvF,OAAA,SAUF7oB,KAAK8oB,oBAVHsF,EAAArF,OAU2B,KAAA,EAAA,IAAA,MAAA,OAAAqF,EAAApF,OAAA,GAAAkF,EAAAluB,KACrC,KAAA,OAAA,SAAAquB,GAAA,OAAAJ,EAAA/E,MAAAlpB,KAAAmpB,UAAA,CAAA,CAd+B,GAc/BlpB,EAEKquB,cAAa,WAAA,IAAAC,EAAAzG,GAAAC,KAAAC,MAAnB,SAAAwG,EACEtG,EACAuG,GAAsB,OAAA1G,KAAAI,MAAA,SAAAuG,GAAA,cAAAA,EAAArG,KAAAqG,EAAApG,MAAA,KAAA,EAAA,GAEM,IAAxBmG,EAAaE,OAAY,CAAAD,EAAApG,KAAA,EAAA,KAAA,CAAA,OAAAoG,EAAA7F,OAAA,SACpB,IAAI/oB,EAAG,KAAG,KAAA,EAAA,OAAA4uB,EAAApG,KAAA,EAEDtoB,KAAKuoB,gBAClBvoB,KAAKwnB,KAA4BgB,wBAAAA,mBAClCN,GACGuG,IAAAA,EACFvU,KAAI,SAACtS,GAAE,MAAqB4gB,gBAAAA,mBAAmB5gB,EAAG,IAClDgnB,KAAK,KACR,CACErS,OAAQ,MACRtS,QAASjK,KAAKyoB,sBAEjB,KAAA,EAVQ,OAAAiG,EAAA7F,OAAA,SAYF7oB,KAAK8oB,oBAZH4F,EAAA3F,OAY2B,KAAA,EAAA,IAAA,MAAA,OAAA2F,EAAA1F,OAAA,GAAAwF,EAAAxuB,KACrC,KAAA,OAAA,SAAA6uB,EAAAC,GAAA,OAAAP,EAAArF,MAAAlpB,KAAAmpB,UAAA,CAAA,CApBkB,GAoBlBlpB,EAEK8uB,mBAAkB,WAAA,IAAAC,EAAAlH,GAAAC,KAAAC,MAAxB,SAAAiH,EACEnsB,EACAosB,EACAC,GAAmB,OAAApH,KAAAI,MAAA,SAAAiH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,KAAA,EAAA,OAAA8G,EAAA9G,KAAA,EAEDtoB,KAAKuoB,gBAClBvoB,KAAKwnB,KAAI,eAAegB,mBACzB1lB,GACD,WAAW0lB,mBAAmB0G,GAC/B,CACE3S,OAAQ,OACRtS,QAASjK,KAAKyoB,oBACdC,KAAMC,KAAKC,UAAU,CACnBuG,YAAAA,MAGL,KAAA,EAXQ,OAAAC,EAAAvG,OAAA,SAaF7oB,KAAK8oB,oBAbHsG,EAAArG,OAa2B,KAAA,EAAA,IAAA,MAAA,OAAAqG,EAAApG,OAAA,GAAAiG,EAAAjvB,KACrC,KAAA,OAAA,SAAAqvB,EAAAC,EAAAC,GAAA,OAAAP,EAAA9F,MAAAlpB,KAAAmpB,UAAA,CAAA,CAnBuB,GAmBvBlpB,EAEKuvB,mBAAkB,WAAA,IAAAC,EAAA3H,GAAAC,KAAAC,MAAxB,SAAA0H,EACE5sB,EACAosB,GAAiB,OAAAnH,KAAAI,MAAA,SAAAwH,GAAA,cAAAA,EAAAtH,KAAAsH,EAAArH,MAAA,KAAA,EAAA,OAAAqH,EAAArH,KAAA,EAQCtoB,KAAKuoB,gBAClBvoB,KAAKwnB,KAAI,eAAegB,mBACzB1lB,GACD,WAAW0lB,mBAAmB0G,GAC/B,CACE3S,OAAQ,MACRtS,QAASjK,KAAKyoB,sBAEjB,KAAA,EARQ,OAAAkH,EAAA9G,OAAA,SAUF7oB,KAAK8oB,oBAVH6G,EAAA5G,OAU2B,KAAA,EAAA,IAAA,MAAA,OAAA4G,EAAA3G,OAAA,GAAA0G,EAAA1vB,KACrC,KAAA,OAAA,SAAA4vB,EAAAC,GAAA,OAAAJ,EAAAvG,MAAAlpB,KAAAmpB,UAAA,CAAA,CArBuB,GAqBvBlpB,EAEK6vB,2BAA0B,WAAA,IAAAC,EAAAjI,GAAAC,KAAAC,MAAhC,SAAAgI,EAAAC,GAAA,IAAAntB,EAAAotB,EAAAC,EAAA,OAAApI,KAAAI,MAAA,SAAAiI,GAAA,cAAAA,EAAA/H,KAAA+H,EAAA9H,MAAA,KAAA,EAGsB,OAFpBxlB,EAAWmtB,EAAXntB,YACAotB,EAAuBD,EAAvBC,wBACAC,EAAoBF,EAApBE,qBAAoBC,EAAA9H,KAAA,EAMFtoB,KAAKuoB,gBAClBvoB,KAAKwnB,KACR,oCAAA,CACEjL,OAAQ,QACRtS,QAASjK,KAAKyoB,oBACdC,KAAMC,KAAKC,UAAU,CACnByH,aAAcvtB,EACdwtB,uBAAwBH,EACxBI,2BAA4BL,MAGjC,KAAA,EAXQ,OAAAE,EAAAvH,OAAA,SAaF7oB,KAAK8oB,oBAbHsH,EAAArH,OAa2B,KAAA,EAAA,IAAA,MAAA,OAAAqH,EAAApH,OAAA,GAAAgH,EAAAhwB,KACrC,KAAA,OAAA,SAAAwwB,GAAA,OAAAT,EAAA7G,MAAAlpB,KAAAmpB,UAAA,CAAA,CAvB+B,GAuB/BlpB,EAEKwwB,gCAA+B,WAAA,IAAAC,EAAA5I,GAAAC,KAAAC,MAArC,SAAA2I,EAAAC,GAAA,IAAA9tB,EAAA,OAAAilB,KAAAI,MAAA,SAAA0I,GAAA,cAAAA,EAAAxI,KAAAwI,EAAAvI,MAAA,KAAA,EACa,OAAXxlB,EAAW8tB,EAAX9tB,YAAW+tB,EAAAvI,KAAA,EAYOtoB,KAAKuoB,gBAEnBvoB,KAAKwnB,KACP,kDAAkDgB,mBAChD1lB,GAEF,CACEyZ,OAAQ,MACRtS,QAASjK,KAAKyoB,sBAEjB,KAAA,EAVQ,OAAAoI,EAAAhI,OAAA,SAYF7oB,KAAK8oB,oBAZH+H,EAAA9H,OAY2B,KAAA,EAAA,IAAA,MAAA,OAAA8H,EAAA7H,OAAA,GAAA2H,EAAA3wB,KACrC,KAAA,OAAA,SAAA8wB,GAAA,OAAAJ,EAAAxH,MAAAlpB,KAAAmpB,UAAA,CAAA,CA1BoC,GA0BpClpB,EAEK8wB,MAAK,WAAA,IAAAC,EAAAlJ,GAAAC,KAAAC,MAAX,SAAAiJ,EACEC,GAA8B,OAAAnJ,KAAAI,MAAA,SAAAgJ,GAAA,cAAAA,EAAA9I,KAAA8I,EAAA7I,MAAA,KAAA,EAAA,OAAA6I,EAAA7I,KAAA,EAEZtoB,KAAKuoB,gBAAmBvoB,KAAKwnB,KAAyB,oBAAA,CACtEjL,OAAQ,OACRtS,QAASjK,KAAKyoB,oBACdC,KAAMC,KAAKC,UAAUsI,KACrB,KAAA,EAJO,OAAAC,EAAAtI,OAAA,SAMF7oB,KAAK8oB,oBANHqI,EAAApI,OAM2B,KAAA,EAAA,IAAA,MAAA,OAAAoI,EAAAnI,OAAA,GAAAiI,EAAAjxB,KACrC,KAAA,OAAA,SAAAoxB,GAAA,OAAAJ,EAAA9H,MAAAlpB,KAAAmpB,UAAA,CAAA,CAVU,GAUVlpB,EAEDwoB,kBAAA,WACE,MAAO,CACL,eAAgB,mBAChB4I,cAAa,UAAYrxB,KAAKynB,UAEjCxnB,EAEasoB,gBAAe,WAAA,IAAA+I,EAAAxJ,GAAAC,KAAAC,MAArB,SAAAuJ,EACN3nB,EACA4nB,GAAkB,IAAAC,EAAAlb,EAAAmb,EAAA,OAAA3J,KAAAI,MAAA,SAAAwJ,GAAA,cAAAA,EAAAtJ,KAAAsJ,EAAArJ,MAAA,KAAA,EAII,OAAhBmJ,EAAMG,KAAKH,MAAKE,EAAAtJ,KAAA,EAAAsJ,EAAArJ,KAAA,EAEFuJ,MAAMjoB,EAAK4nB,GAAK,KAAA,EAAzB,OAAAG,EAAA9I,OACF,SAAA,IAAI/oB,EAAG,CAAEgyB,SADPH,EAAA5I,KACsBxS,SAAUqb,KAAKH,MAAQA,KAAM,KAAA,EAe1D,OAf0DE,EAAAtJ,KAAA,EAAAsJ,EAAAI,GAAAJ,EAAA,MAAA,GAEtDpb,EAAWqb,KAAKH,MAAQA,EAK9BzxB,KAAK0nB,QAAQpnB,MACX,CACEsJ,IAAAA,EACA2M,SAAAA,EACAyb,gBAREN,EAA0B,CAC9BrvB,KAAM,2BACN8G,QAAO,gDAAAwoB,EAAAI,IAOLzxB,MAAKqxB,EAAAI,IAEP,uBACAJ,EAAA9I,OAAA,SACK,IAAIxoB,EAAIqxB,IAAI,KAAA,GAAA,IAAA,MAAA,OAAAC,EAAA3I,OAAA,GAAAuI,EAAAvxB,KAAA,CAAA,CAAA,EAAA,IAEtB,KAAA,OAAA,SAAAiyB,EAAAC,GAAA,OAAAZ,EAAApI,MAAAlpB,KAAAmpB,UAAA,CAAA,CA3B4B,GA2B5BlpB,EAEa6oB,oBAAmB,WAAA,IAAAqJ,EAAArK,GAAAC,KAAAC,MAAzB,SAAAoK,EACN7F,GAMC,IAAAhP,EAAA8U,EAAAX,EAAAY,EAAAC,EAAAC,EAAA,OAAAzK,KAAAI,MAAA,SAAAsK,GAAA,cAAAA,EAAApK,KAAAoK,EAAAnK,MAAA,KAAA,EAAA,IAEGiE,EAAInsB,QAAO,CAAAqyB,EAAAnK,KAAA,EAAA,KAAA,CAAA,OAAAmK,EAAA5J,OAAA,SACN0D,GAAG,KAAA,EAAA,GAIsB,MAA9BA,EAAIxsB,MAAM+xB,SAAS1qB,OAAc,CAAAqrB,EAAAnK,KAAA,EAAA,KAAA,CAAA,OAAAmK,EAAA5J,OAAA,SAC5B,IAAI/oB,OAAG8C,IAAe,KAAA,EAAA,OAAA6vB,EAAAnK,KAAA,EAIZiE,EAAIxsB,MAAM+xB,SAASvU,OAAM,KAAA,EAAtCA,EAAIkV,EAAA1J,KAENsJ,EAAO,KAAII,EAAApK,KAAA,EAEbgK,EAAO1J,KAAK+J,MAAMnV,GAAMkV,EAAAnK,KAAA,GAAA,MAAA,KAAA,GAgBtB,OAhBsBmK,EAAApK,KAAA,GAAAoK,EAAAV,GAAAU,EAAA,MAAA,GAMxBzyB,KAAK0nB,QAAQpnB,MACX,CACE0xB,gBANEN,EAA0B,CAC9BrvB,KAAM,6BACN8G,QAAO,kDAAAspB,EAAAV,IAKLY,WAAUF,EAAAV,GACVa,QAASrV,EACTnW,OAAQmlB,EAAIxsB,MAAM+xB,SAAS1qB,OAC3BwC,IAAK2iB,EAAIxsB,MAAM+xB,SAASloB,IACxB2M,SAAUgW,EAAIxsB,MAAMwW,UAEtB,uBACAkc,EAAA5J,OAAA,SACK,IAAIxoB,EAAIqxB,IAAI,KAAA,GAAA,GAGhBnF,EAAIxsB,MAAM+xB,SAASe,GAAE,CAAAJ,EAAAnK,KAAA,GAAA,KAAA,CACD,IACnBrf,GADEyoB,EAAMY,OAAHA,EAAGD,QAAAC,EAAAA,EAAMhyB,OACW,CAAAmyB,EAAAnK,KAAA,GAAA,KAAA,CASzB,OARFtoB,KAAK0nB,QAAQpnB,MACX,CACE0xB,gBAAiBN,EACjBtqB,OAAQmlB,EAAIxsB,MAAM+xB,SAAS1qB,OAC3BwC,IAAK2iB,EAAIxsB,MAAM+xB,SAASloB,IACxB2M,SAAUgW,EAAIxsB,MAAMwW,UAEtB,uBACAkc,EAAA5J,OAAA,SACK,IAAIxoB,EAAIqxB,IAAI,KAAA,GAejB,OATF1xB,KAAK0nB,QAAQpnB,MACX,CACE0xB,gBANEN,EAA0B,CAC9BrvB,KAAM,0BACN8G,QAAS,6CAKPkpB,KAAAA,EACAjrB,OAAQmlB,EAAIxsB,MAAM+xB,SAAS1qB,OAC3BwC,IAAK2iB,EAAIxsB,MAAM+xB,SAASloB,IACxB2M,SAAUgW,EAAIxsB,MAAMwW,UAEtB,uBACAkc,EAAA5J,OAAA,SACK,IAAIxoB,EAAIqxB,IAAI,KAAA,GAAAe,EAAAnK,KAAA,GAAA,MAAA,KAAA,GAAA,OAAAmK,EAAA5J,OAAA,SAGd,IAAI/oB,EAAGuyB,IAAK,KAAA,GAAA,IAAA,MAAA,OAAAI,EAAAzJ,OAAA,GAAAoJ,EAAApyB,KAAA,CAAA,CAAA,EAAA,KAEtB,KAAA,OAAA,SAAA8yB,GAAA,OAAAX,EAAAjJ,MAAAlpB,KAAAmpB,UAAA,CAAA,CA5EgC,GA4EhC7B,CAAA,CAthBuB,GCjEpB,SAAUyL,GAAe7pB,GAC7B,MACiB,iBAARA,GACC,OAARA,GACA,YAAaA,GACU,iBAAhBA,EAAIC,SACX,SAAUD,GACU,iBAAbA,EAAIiQ,IAEf,CAsLa6Z,IAAAA,GAA2BlyB,EAAE2B,MAAM,CAC9C3B,EAAEyB,QAAQ,gBACVzB,EAAEyB,QAAQ,oBACVzB,EAAEyB,QAAQ,UAKC0wB,GAAoCnyB,EAAEsV,aAAa,CAC9DtV,EAAEuB,KAAK,CACL6wB,eAAgBpyB,EAAEe,OAClBsxB,YAAaryB,EAAEmE,MAAMnE,EAAEe,UAEzBf,EAAEkV,QAAQ,CACRod,aAAcJ,OAWLK,GAAiCvyB,EAAEsV,aAAa,CAC3DtV,EAAEuB,KAAK,CACLixB,kBAAmBxyB,EAAEmE,MAAMguB,MAE7BnyB,EAAEkV,QAAQ,CACRud,yBAA0BzyB,EAAE2B,MAAM,CAAC3B,EAAE0yB,cAAc1yB,EAAEe,QAASf,EAAE8B,YAChE6wB,SAAU3yB,EAAEmE,MAAMnE,EAAEe,QACpB6xB,WAAY5yB,EAAEmE,MAAMnE,EAAEe,QACtBub,UAAWtc,EAAEe,OACboE,MAAOnF,EAAEe,WAoCb,SAAS8xB,GAA4BtuB,GACnC,OAAOA,EACJuuB,QAAQ,QAAS,KACjBC,MAAM,KACNjd,QAAO,SAACkd,GAAI,MAAc,YAATA,CAAkB,IACnC5Z,KAAI,SAAC6Z,GAAI,OAAKA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,EAAE,IAC1DtF,KAAK,IACV,CAEA,IAAauF,GAAO,WAKlB,SAAAA,EACE/P,EAIAmD,GAAuBvnB,KATzBwnB,UAAI,EAAAxnB,KAEJo0B,aAAO,EASLp0B,KAAKwnB,KAAOpD,EAAOxa,IACnB5J,KAAK0nB,QAAUH,EACfvnB,KAAKo0B,QAAUhQ,EAAOiQ,MACxB,CAAC,IAAAp0B,EAAAk0B,EAAAj0B,UA8xDA,OA9xDAD,EAEKq0B,cAAa,WAAA,IAAAC,EAAAzM,GAAAC,KAAAC,MAAnB,SAAAC,IAAA,OAAAF,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EACyBtoB,KAAKuoB,gBAAmBvoB,KAAKwnB,KAAiB,YAAA,CACnEjL,OAAQ,SACR,KAAA,EAFY,OAAA6L,EAAAS,OAAA,SAGP7oB,KAAK8oB,oBAHEV,EAAAW,OAG2B,KAAA,EAAA,IAAA,MAAA,OAAAX,EAAAY,OAAA,GAAAf,EAAAjoB,KAC1C,KAAA,OAAA,WAAA,OAAAu0B,EAAArL,MAAAlpB,KAAAmpB,UAAA,CAAA,CALkB,GAKlBlpB,EAEKu0B,cAAa,WAAA,IAAAC,EAAA3M,GAAAC,KAAAC,MAAnB,SAAAsB,EAAAnP,GAAA,IAAAua,EAAA,OAAA3M,KAAAI,MAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,KAAA,EACW,OAAToM,EAASva,EAATua,UAASnL,EAAAjB,KAAA,EAIctoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAI,aAAagB,mBAAmBkM,GAC5C,CACEnY,OAAQ,WAEX,KAAA,EALa,OAAAgN,EAAAV,OAAA,SAOP7oB,KAAK8oB,oBAPES,EAAAR,OAO2B,KAAA,EAAA,IAAA,MAAA,OAAAQ,EAAAP,OAAA,GAAAM,EAAAtpB,KAC1C,KAAA,OAAA,SAAAipB,GAAA,OAAAwL,EAAAvL,MAAAlpB,KAAAmpB,UAAA,CAAA,CAbkB,GAalBlpB,EAEK00B,YAAW,WAAA,IAAAC,EAAA9M,GAAAC,KAAAC,MAAjB,SAAA2B,EAAAC,GAAA,IAAA8K,EAAA,OAAA3M,KAAAI,MAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,KAAA,EACW,OAAToM,EAAS9K,EAAT8K,UAAS7K,EAAAvB,KAAA,EAIctoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAI,aAAagB,mBAAmBkM,GAC5C,YAAA,CACEnY,OAAQ,MACRtS,QAAS,CACP,eAAgB,sBAGrB,KAAA,EARa,OAAA4f,EAAAhB,OAAA,SAUP7oB,KAAK8oB,oBAVEe,EAAAd,OAU2B,KAAA,EAAA,IAAA,MAAA,OAAAc,EAAAb,OAAA,GAAAW,EAAA3pB,KAC1C,KAAA,OAAA,SAAAwpB,GAAA,OAAAoL,EAAA1L,MAAAlpB,KAAAmpB,UAAA,CAAA,CAhBgB,GAgBhBlpB,EAEK40B,WAAU,WAAA,IAAAC,EAAAhN,GAAAC,KAAAC,MAAhB,SAAAiC,EAAAgC,GAAA,IAAAyI,EAAAK,EAAAC,EAAA,OAAAjN,KAAAI,MAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,KAAA,EAGa,OAFXoM,EAASzI,EAATyI,UACAK,EAAW9I,EAAX8I,YACAC,EAAW/I,EAAX+I,YAAW9K,EAAA5B,KAAA,EAMYtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAiBgB,aAAAA,mBACvBkM,GACYlM,aAAAA,mBAAmBuM,OAAgBvM,mBAC/CwM,GAEF,CACEzY,OAAQ,MACRtS,QAAS,CACP,eAAgB,sBAGrB,KAAA,EAZa,OAAAigB,EAAArB,OAAA,SAcP7oB,KAAK8oB,oBAdEoB,EAAAnB,OAc2B,KAAA,EAAA,IAAA,MAAA,OAAAmB,EAAAlB,OAAA,GAAAiB,EAAAjqB,KAC1C,KAAA,OAAA,SAAA8pB,GAAA,OAAAgL,EAAA5L,MAAAlpB,KAAAmpB,UAAA,CAAA,CAxBe,GAwBflpB,EAEKg1B,cAAa,WAAA,IAAAC,EAAApN,GAAAC,KAAAC,MAAnB,SAAAsC,EAAAyC,GAAA,IAAA2H,EAAAS,EAAAnqB,EAAA,OAAA+c,KAAAI,MAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,KAAA,EAGM,OAFJoM,EAAS3H,EAAT2H,UACAS,EAASpI,EAAToI,UACAnqB,EAAI+hB,EAAJ/hB,KAAIuf,EAAAjC,KAAA,EAOmBtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAI,aAAagB,mBAAmBkM,GAC5C,YAAA,CACEnY,OAAQ,OACRtS,QAAS,CACP,eAAgB,oBAElBye,KAAMC,KAAKC,UAAU,CACnBwM,WAAYD,EACZnqB,KAAAA,MAGL,KAAA,EAZa,OAAAuf,EAAA1B,OAAA,SAcP7oB,KAAK8oB,oBAdEyB,EAAAxB,OAc2B,KAAA,EAAA,IAAA,MAAA,OAAAwB,EAAAvB,OAAA,GAAAsB,EAAAtqB,KAC1C,KAAA,OAAA,SAAAmqB,GAAA,OAAA+K,EAAAhM,MAAAlpB,KAAAmpB,UAAA,CAAA,CAzBkB,GAyBlBlpB,EAEKo1B,aAAY,WAAA,IAAAC,EAAAxN,GAAAC,KAAAC,MAAlB,SAAA2C,EAAAwC,GAAA,IAAAuH,EAAA,OAAA3M,KAAAI,MAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,KAAA,EACW,OAAToM,EAASvH,EAATuH,UAAS9J,EAAAtC,KAAA,EAIctoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAI,aAAagB,mBAAmBkM,GAC5C,SAAA,CACEnY,OAAQ,SAEX,KAAA,EALa,OAAAqO,EAAA/B,OAAA,SAOP7oB,KAAK8oB,oBAPE8B,EAAA7B,OAO2B,KAAA,EAAA,IAAA,MAAA,OAAA6B,EAAA5B,OAAA,GAAA2B,EAAA3qB,KAC1C,KAAA,OAAA,SAAAwqB,GAAA,OAAA8K,EAAApM,MAAAlpB,KAAAmpB,UAAA,CAAA,CAbiB,GAajBlpB,EAEKs1B,UAAS,WAAA,IAAAC,EAAA1N,GAAAC,KAAAC,MAAf,SAAAgD,EACEyK,EACAC,EAAmBzF,GAAA,IAAAyE,EAAAiB,EAAAC,EAAAC,EAAAV,EAAAla,EAAAmJ,EAAA0R,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAnO,KAAAI,MAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,KAAA,EAYQ,OAVzBoM,EAASzE,EAATyE,UACAiB,EAAO1F,EAAP0F,QACAC,EAAa3F,EAAb2F,cACAC,EAAiB5F,EAAjB4F,kBACAV,EAASlF,EAATkF,UACAla,EAAMgV,EAANhV,OACAmJ,EAAM6L,EAAN7L,OACA0R,EAAW7F,EAAX6F,YACAC,EAAO9F,EAAP8F,QACAC,EAAW/F,EAAX+F,YACAE,OAAqB,KADVD,EAAAhG,EACXiG,qBAAyBD,EAAAhL,EAAA3C,KAAA,EAGJtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAI,aAAagB,mBAAmBkM,GAC5C,QAAA,CACEnY,OAAQ,OACRtS,QAAS,CACP,eAAgB,mBAChB,sBAAuBwrB,EAAUU,IACjC,mBAAoBT,EAAOxb,KAAI,SAACkc,GAAC,OAAKA,EAAED,GAAG,IAAEvH,KAAK,KAClD,qBAAsBoH,EAAc,OAAS,SAE/CtN,KAAMC,KAAKC,UAAU,CACnBzE,SAAUwR,EACVC,cAAeA,EACfhR,mBAAoBiR,EACpBT,WAAYD,EACZla,OAAQA,EACRmJ,OAAQA,EACR0R,YAAaA,EACbC,QAASA,EACTM,qBAAsBH,MAG3B,KAAA,EAtBa,OAAAjL,EAAApC,OAAA,SAwBP7oB,KAAK8oB,oBAxBEmC,EAAAlC,OAwB2B,KAAA,EAAA,IAAA,MAAA,OAAAkC,EAAAjC,OAAA,GAAAgC,EAAAhrB,KAC1C,KAAA,OAAA,SAAA6qB,EAAAK,EAAAK,GAAA,OAAAiK,EAAAtM,MAAAlpB,KAAAmpB,UAAA,CAAA,CA1Cc,GA0CdlpB,EAEKq2B,gBAAe,WAAA,IAAAC,EAAAzO,GAAAC,KAAAC,MAArB,SAAA0D,EACE+J,EACAC,EAAmB9E,GAAA,IAAA8D,EAAAiB,EAAAC,EAAAC,EAAAV,EAAAla,EAAAmJ,EAAA0R,EAAAC,EAAAC,EAAAQ,EAAAN,EAAA3J,EAAAuF,EAAA2E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvP,EAAAwP,EAAAjsB,EAAA9K,KAAA,OAAA+nB,KAAAI,MAAA,SAAAwD,GAAA,cAAAA,EAAAtD,KAAAsD,EAAArD,MAAA,KAAA,EAYQ,OAVzBoM,EAAS9D,EAAT8D,UACAiB,EAAO/E,EAAP+E,QACAC,EAAahF,EAAbgF,cACAC,EAAiBjF,EAAjBiF,kBACAV,EAASvE,EAATuE,UACAla,EAAM2V,EAAN3V,OACAmJ,EAAMwM,EAANxM,OACA0R,EAAWlF,EAAXkF,YACAC,EAAOnF,EAAPmF,QACAC,EAAWpF,EAAXoF,YACAE,OAAqB,KADVM,EAAA5F,EACXsF,qBAAyBM,EAAA7K,EAAArD,KAAA,EAQTtoB,KAAKuoB,gBAClBvoB,KAAKwnB,KAAiBkN,aAAAA,EACzB,eAAA,CACEnY,OAAQ,OACRtS,QAAS,CACP,eAAgB,mBAChB,sBAAuBwrB,EAAUU,IACjC,mBAAoBT,EAAOxb,KAAI,SAACkc,GAAC,OAAKA,EAAED,GAAG,IAAEvH,KAAK,KAClD,qBAAsBoH,EAAc,OAAS,SAE/CtN,KAAMC,KAAKC,UAAU,CACnBzE,SAAUwR,EACVC,cAAeA,EACfhR,mBAAoBiR,EACpBT,WAAYD,EACZla,OAAQA,EACRmJ,OAAQA,EACR0R,YAAaA,EACbC,QAASA,EACTM,qBAAsBH,MAG3B,KAAA,EAtBQ,KAAH3J,EAAGZ,EAAA5C,MAwBD3oB,QAAO,CAAAurB,EAAArD,KAAA,EAAA,KAAA,CAAA,OAAAqD,EAAA9C,OAAA,SACN0D,GAAG,KAAA,EAGuB,IAA7BuF,EAAWvF,EAAIxsB,MAAM+xB,UAEbe,IAAOf,EAASpJ,KAAI,CAAAiD,EAAArD,KAAA,EAAA,KAAA,CAAA,OAAAqD,EAAA9C,OAAA,SACzB7oB,KAAK8oB,oBAAoByD,IAAI,KAAA,EAiCpB,OA9BdkK,GAAW,EAGTG,EAAmB,IAAII,SAAgB,SAACC,EAASC,GACrDR,EAAyBQ,EACzBP,EAA0BM,CAC5B,IAEMJ,EAASM,EAAAA,cAAa,SAACC,GAC3B,GAAmB,UAAfA,EAAM/0B,MACJ+0B,EAAMpsB,KACR,IAAI,IAAAqsB,EACIrsB,EAAO2d,KAAK+J,MAAM0E,EAAMpsB,MAC1BqsB,OAAAA,EAAArsB,EAAK3D,UAALgwB,EAAcrT,SAAWyS,IAC3BA,GAAW,EACXE,EAAwB3rB,EAAK3D,QAAQ2c,QAExC,CAAC,MAAO0N,GACP5mB,EAAK4c,QAAQpnB,MACX,CAAEA,MAAOoxB,GACT,qCAEJ,CAGN,IAEMoF,EAAShF,EAASpJ,KAAK4O,YACvB/P,EAASvnB,KAAK0nB,QAEdqP,EAAY,WAAA,MAAA3X,KAAA2I,KAAAC,MAAG,SAAAqD,IAAA,IAAAkM,EAAAx3B,EAAA,OAAAgoB,KAAAI,MAAA,SAAAmD,GAAA,cAAAA,EAAAjD,KAAAiD,EAAAhD,MAAA,KAAA,EAAAgD,EAAAjD,KAAA,EAAA,KAAA,EAEN,OAAAiD,EAAAhD,KAAA,SACqBwO,EAAOU,UAAM,KAAA,EAAxB,GAALz3B,GAA6Bw3B,EAAAjM,EAAAvC,MAA7BhpB,OAAFw3B,EAAJE,KACA,CAAAnM,EAAAhD,KAAA,EAAA,KAAA,CAAA,OAAAgD,EAAAzC,OAAA,QAAA,IAAA,KAAA,EAIR,OADAgO,EAAOa,MAAK,IAAIC,aAAcC,OAAO73B,IAAQurB,EAAAhD,KAAA,GACvCvoB,EAAK,KAAA,GAAAurB,EAAAhD,KAAA,EAAA,MAAA,KAAA,GAAAgD,EAAAhD,KAAA,GAAA,MAAA,KAAA,GAAAgD,EAAAjD,KAAA,GAAAiD,EAAAyG,GAAAzG,EAAA,MAAA,GAGb/D,EAAOjnB,MACL,CACEA,MAAKgrB,EAAAyG,GACL8F,SAAUlP,KAAKC,UAAS0C,EAAAyG,IACxB+F,YAAa,mBAEf,0BACA,KAAA,GAYmB,OAZnBxM,EAAAjD,KAAA,GAEGoO,GAEHsB,cAAa,WACXxQ,EAAOjnB,MACL,CAAEo0B,UAAAA,EAAWiB,QAAAA,EAASE,kBAAAA,GACtB,sBAEFa,EAAuB,IAAIvrB,MAAM,sBACnC,IAEF2rB,EAAOkB,cAAc1M,EAAA2M,OAAA,IAAA,KAAA,GAAA,IAAA,MAAA,OAAA3M,EAAAtC,OAAA,GAAAqC,EAAA,KAAA,CAAA,CAAA,EAAA,GAAA,GAAA,KAExB,wDAAA,OAAA,WAhCiB,OAAAjM,EAAA8J,MAAAlpB,KAAAmpB,UAAA,CAAA,CAAA,GAAAwC,EAAA9C,OAkCX,SAAA,IAAI/oB,EAAG,CAAEo4B,YAAanB,IAAgBoB,UAAWvB,KAAmB,KAAA,GAAA,IAAA,MAAA,OAAAjL,EAAA3C,OAAA,GAAA0C,EAAA1rB,KAC5E,KAAA,OAAA,SAAA4rB,EAAAC,EAAAc,GAAA,OAAA4J,EAAArN,MAAAlpB,KAAAmpB,UAAA,CAAA,CAzHoB,GAyHpBlpB,EAEKm4B,UAAS,WAAA,IAAAC,EAAAvQ,GAAAC,KAAAC,MAAf,SAAAgE,EAAAsM,GAAA,IAAA5D,EAAA6D,EAAA,OAAAxQ,KAAAI,MAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,KAAA,EAEO,OADLoM,EAAS4D,EAAT5D,UACA6D,EAAKD,EAALC,MAAK/L,EAAAlE,KAAA,EAKkBtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAI,aAAagB,mBACvBkM,GACD,SAASlM,mBAAmB+P,GAC7B,CACEhc,OAAQ,WAEX,KAAA,EAPa,OAAAiQ,EAAA3D,OAAA,SASP7oB,KAAK8oB,oBATE0D,EAAAzD,OAS2B,KAAA,EAAA,IAAA,MAAA,OAAAyD,EAAAxD,OAAA,GAAAgD,EAAAhsB,KAC1C,KAAA,OAAA,SAAAutB,GAAA,OAAA8K,EAAAnP,MAAAlpB,KAAAmpB,UAAA,CAAA,CAjBc,GAiBdlpB,EAEKu4B,aAAY,WAAA,IAAAC,EAAA3Q,GAAAC,KAAAC,MAAlB,SAAA8E,EAAA4L,GAAA,IAAAhE,EAAAiE,EAAA,OAAA5Q,KAAAI,MAAA,SAAA8E,GAAA,cAAAA,EAAA5E,KAAA4E,EAAA3E,MAAA,KAAA,EAEY,OADVoM,EAASgE,EAAThE,UACAiE,EAAUD,EAAVC,WAAU1L,EAAA3E,KAAA,EAKatoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAI,aAAagB,mBAAmBkM,GAC5C,cAAA,CACEnY,OAAQ,OACRtS,QAAS,CACP,eAAgB,oBAElBye,KAAMC,KAAKC,UAAU,CACnBgQ,QAASD,MAGd,KAAA,EAXa,OAAA1L,EAAApE,OAAA,SAaP7oB,KAAK8oB,oBAbEmE,EAAAlE,OAa2B,KAAA,EAAA,IAAA,MAAA,OAAAkE,EAAAjE,OAAA,GAAA8D,EAAA9sB,KAC1C,KAAA,OAAA,SAAA+tB,GAAA,OAAA0K,EAAAvP,MAAAlpB,KAAAmpB,UAAA,CAAA,CArBiB,GAqBjBlpB,EAEK44B,OAAM,WAAA,IAAAC,EAAAhR,GAAAC,KAAAC,MAAZ,SAAA0F,EAAAqL,GAAA,IAAArE,EAAA6D,EAAA,OAAAxQ,KAAAI,MAAA,SAAAyF,GAAA,cAAAA,EAAAvF,KAAAuF,EAAAtF,MAAA,KAAA,EAEO,OADLoM,EAASqE,EAATrE,UACA6D,EAAKQ,EAALR,MAAK3K,EAAAtF,KAAA,EAKkBtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAI,aAAagB,mBACvBkM,GACD,SAASlM,mBAAmB+P,GAC7B,CACEhc,OAAQ,QAEX,KAAA,EAPa,OAAAqR,EAAA/E,OAAA,SASP7oB,KAAK8oB,oBATE8E,EAAA7E,OAS2B,KAAA,EAAA,IAAA,MAAA,OAAA6E,EAAA5E,OAAA,GAAA0E,EAAA1tB,KAC1C,KAAA,OAAA,SAAAquB,GAAA,OAAAyK,EAAA5P,MAAAlpB,KAAAmpB,UAAA,CAAA,CAjBW,GAiBXlpB,EAEK+4B,aAAY,WAAA,IAAAC,EAAAnR,GAAAC,KAAAC,MAAlB,SAAAkG,EAAAgL,GAAA,IAAAxE,EAAA6D,EAAA,OAAAxQ,KAAAI,MAAA,SAAAiG,GAAA,cAAAA,EAAA/F,KAAA+F,EAAA9F,MAAA,KAAA,EAEO,OADLoM,EAASwE,EAATxE,UACA6D,EAAKW,EAALX,MAAKnK,EAAA9F,KAAA,EAKkBtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAI,aAAagB,mBACvBkM,GACD,SAASlM,mBAAmB+P,GAC7B,UAAA,CACEhc,OAAQ,QAEX,KAAA,EAPa,OAAA6R,EAAAvF,OAAA,SASP7oB,KAAK8oB,oBATEsF,EAAArF,OAS2B,KAAA,EAAA,IAAA,MAAA,OAAAqF,EAAApF,OAAA,GAAAkF,EAAAluB,KAC1C,KAAA,OAAA,SAAA6uB,GAAA,OAAAoK,EAAA/P,MAAAlpB,KAAAmpB,UAAA,CAAA,CAjBiB,GAiBjBlpB,EAEKk5B,uBAAsB,WAAA,IAAAC,EAAAtR,GAAAC,KAAAC,MAA5B,SAAAwG,EAAA6K,GAAA,IAAA3E,EAAA,OAAA3M,KAAAI,MAAA,SAAAuG,GAAA,cAAAA,EAAArG,KAAAqG,EAAApG,MAAA,KAAA,EACW,OAAToM,EAAS2E,EAAT3E,UAAShG,EAAApG,KAAA,EAIctoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAI,aAAagB,mBAAmBkM,GAC5C,kBAAA,CACEnY,OAAQ,QAEX,KAAA,EALa,OAAAmS,EAAA7F,OAAA,SAOP7oB,KAAK8oB,oBAPE4F,EAAA3F,OAO2B,KAAA,EAAA,IAAA,MAAA,OAAA2F,EAAA1F,OAAA,GAAAwF,EAAAxuB,KAC1C,KAAA,OAAA,SAAA8uB,GAAA,OAAAsK,EAAAlQ,MAAAlpB,KAAAmpB,UAAA,CAAA,CAb2B,GAa3BlpB,EAEKq5B,iBAAgB,WAAA,IAAAC,EAAAzR,GAAAC,KAAAC,MAAtB,SAAAiH,EAAAuK,GAAA,IAAA9E,EAAAmB,EAAA,OAAA9N,KAAAI,MAAA,SAAAiH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,KAAA,EAEmB,OADjBoM,EAAS8E,EAAT9E,UACAmB,EAAiB2D,EAAjB3D,kBAAiBzG,EAAA9G,KAAA,EAOMtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAI,aAAagB,mBACvBkM,GACD,mBAAmBlM,mBAAmBqN,GACvC,CACEtZ,OAAQ,QAEX,KAAA,EAPa,OAAA6S,EAAAvG,OAAA,SASP7oB,KAAK8oB,oBATEsG,EAAArG,OAS2B,KAAA,EAAA,IAAA,MAAA,OAAAqG,EAAApG,OAAA,GAAAiG,EAAAjvB,KAC1C,KAAA,OAAA,SAAAqvB,GAAA,OAAAkK,EAAArQ,MAAAlpB,KAAAmpB,UAAA,CAAA,CAnBqB,GAmBrBlpB,EAEKw5B,kBAAiB,WAAA,IAAAC,EAAA5R,GAAAC,KAAAC,MAAvB,SAAA0H,EAAAiK,GAAA,IAAAjF,EAAAkB,EAAA,OAAA7N,KAAAI,MAAA,SAAAwH,GAAA,cAAAA,EAAAtH,KAAAsH,EAAArH,MAAA,KAAA,EAEe,OADboM,EAASiF,EAATjF,UACAkB,EAAa+D,EAAb/D,cAAajG,EAAArH,KAAA,EAKUtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAI,aAAagB,mBAAmBkM,GAC5C,kBAAA,CACEnY,OAAQ,OACRtS,QAAS,CACP,eAAgB,oBAElBye,KAAMC,KAAKC,UAAU,CACnBgN,cAAAA,MAGL,KAAA,EAXa,OAAAjG,EAAA9G,OAAA,SAaP7oB,KAAK8oB,oBAbE6G,EAAA5G,OAa2B,KAAA,EAAA,IAAA,MAAA,OAAA4G,EAAA3G,OAAA,GAAA0G,EAAA1vB,KAC1C,KAAA,OAAA,SAAAsvB,GAAA,OAAAoK,EAAAxQ,MAAAlpB,KAAAmpB,UAAA,CAAA,CArBsB,GAqBtBlpB,EAEK25B,YAAW,WAAA,IAAAC,EAAA/R,GAAAC,KAAAC,MAAjB,SAAAgI,EAAA8J,GAAA,IAAApF,EAAA6D,EAAAwB,EAAAC,EAAA,OAAAjS,KAAAI,MAAA,SAAAiI,GAAA,cAAAA,EAAA/H,KAAA+H,EAAA9H,MAAA,KAAA,EAIW,OAHToM,EAASoF,EAATpF,UACA6D,EAAKuB,EAALvB,MACAwB,EAASD,EAATC,UACAC,EAASF,EAATE,UAAS5J,EAAA9H,KAAA,EAOctoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAiBgB,aAAAA,mBACvBkM,GACD,SAASlM,mBAAmB+P,GAAiB/P,WAAAA,mBAC5CuR,GACD,IAAIvR,mBAAmBwR,GACxB,CACEzd,OAAQ,QAEX,KAAA,EATa,OAAA6T,EAAAvH,OAAA,SAWP7oB,KAAK8oB,oBAXEsH,EAAArH,OAW2B,KAAA,EAAA,IAAA,MAAA,OAAAqH,EAAApH,OAAA,GAAAgH,EAAAhwB,KAC1C,KAAA,OAAA,SAAAuvB,GAAA,OAAAsK,EAAA3Q,MAAAlpB,KAAAmpB,UAAA,CAAA,CAvBgB,GAuBhBlpB,EAEKg6B,iBAAgB,WAAA,IAAAC,EAAApS,GAAAC,KAAAC,MAAtB,SAAA2I,EAAAwJ,GAAA,IAAAzF,EAAAtQ,EAAA0R,EAAAzwB,EAAA,OAAA0iB,KAAAI,MAAA,SAAA0I,GAAA,cAAAA,EAAAxI,KAAAwI,EAAAvI,MAAA,KAAA,EAIM,OAHJoM,EAASyF,EAATzF,UACAtQ,EAAM+V,EAAN/V,OACA0R,EAAWqE,EAAXrE,YACAzwB,EAAI80B,EAAJ90B,KAAIwrB,EAAAvI,KAAA,EAOmBtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAI,aAAagB,mBAAmBkM,GAC5C,gBAAA,CACEnY,OAAQ,OACRtS,QAAS,CACP,eAAgB,oBAElBye,KAAMC,KAAKC,UAAU,CACnBxE,OAAAA,EACA0R,YAAaA,EACbzwB,KAAMsuB,GAA4BtuB,OAGvC,KAAA,EAba,OAAAwrB,EAAAhI,OAAA,SAeP7oB,KAAK8oB,oBAfE+H,EAAA9H,OAe2B,KAAA,EAAA,IAAA,MAAA,OAAA8H,EAAA7H,OAAA,GAAA2H,EAAA3wB,KAC1C,KAAA,OAAA,SAAA4vB,GAAA,OAAAsK,EAAAhR,MAAAlpB,KAAAmpB,UAAA,CAAA,CA3BqB,GA2BrBlpB,EAEKm6B,iBAAgB,WAAA,IAAAC,EAAAvS,GAAAC,KAAAC,MAAtB,SAAAiJ,EAAAqJ,GAAA,IAAA5F,EAAAnqB,EAAAlF,EAAA,OAAA0iB,KAAAI,MAAA,SAAAgJ,GAAA,cAAAA,EAAA9I,KAAA8I,EAAA7I,MAAA,KAAA,EAGM,OAFJoM,EAAS4F,EAAT5F,UACAnqB,EAAY+vB,EAAZ/vB,aACAlF,EAAIi1B,EAAJj1B,KAAI8rB,EAAA7I,KAAA,EAMmBtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAI,aAAagB,mBACvBkM,GACD,iBAAiBlM,mBAAmBje,GACrC,CACEgS,OAAQ,QACRtS,QAAS,CACP,eAAgB,oBAElBye,KAAMC,KAAKC,UAAU,CACnBvjB,KAAMsuB,GAA4BtuB,OAGvC,KAAA,EAba,OAAA8rB,EAAAtI,OAAA,SAeP7oB,KAAK8oB,oBAfEqI,EAAApI,OAe2B,KAAA,EAAA,IAAA,MAAA,OAAAoI,EAAAnI,OAAA,GAAAiI,EAAAjxB,KAC1C,KAAA,OAAA,SAAA6vB,GAAA,OAAAwK,EAAAnR,MAAAlpB,KAAAmpB,UAAA,CAAA,CAzBqB,GAyBrBlpB,EAEKs6B,cAAa,WAAA,IAAAC,EAAA1S,GAAAC,KAAAC,MAAnB,SAAAuJ,EAAAkJ,GAAA,IAAA/F,EAAAnqB,EAAA,OAAAwd,KAAAI,MAAA,SAAAwJ,GAAA,cAAAA,EAAAtJ,KAAAsJ,EAAArJ,MAAA,KAAA,EAEc,OADZoM,EAAS+F,EAAT/F,UACAnqB,EAAYkwB,EAAZlwB,aAAYonB,EAAArJ,KAAA,EAKWtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAI,aAAagB,mBACvBkM,GACD,iBAAiBlM,mBAAmBje,GACrC,CACEN,QAAS,CACP,eAAgB,sBAGrB,KAAA,EATa,OAAA0nB,EAAA9I,OAAA,SAWP7oB,KAAK8oB,oBAXE6I,EAAA5I,OAW2B,KAAA,EAAA,IAAA,MAAA,OAAA4I,EAAA3I,OAAA,GAAAuI,EAAAvxB,KAC1C,KAAA,OAAA,SAAAwwB,GAAA,OAAAgK,EAAAtR,MAAAlpB,KAAAmpB,UAAA,CAAA,CAnBkB,GAmBlBlpB,EAEKy6B,iBAAgB,WAAA,IAAAC,EAAA7S,GAAAC,KAAAC,MAAtB,SAAAoK,EAAAwI,GAAA,IAAAlG,EAAAnqB,EAAA,OAAAwd,KAAAI,MAAA,SAAAsK,GAAA,cAAAA,EAAApK,KAAAoK,EAAAnK,MAAA,KAAA,EAEc,OADZoM,EAASkG,EAATlG,UACAnqB,EAAYqwB,EAAZrwB,aAAYkoB,EAAAnK,KAAA,EAKWtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAI,aAAagB,mBACvBkM,GACD,iBAAiBlM,mBAAmBje,GACrC,CACEgS,OAAQ,WAEX,KAAA,EAPa,OAAAkW,EAAA5J,OAAA,SASP7oB,KAAK8oB,oBATE2J,EAAA1J,OAS2B,KAAA,EAAA,IAAA,MAAA,OAAA0J,EAAAzJ,OAAA,GAAAoJ,EAAApyB,KAC1C,KAAA,OAAA,SAAA8wB,GAAA,OAAA6J,EAAAzR,MAAAlpB,KAAAmpB,UAAA,CAAA,CAjBqB,GAiBrBlpB,EAEK46B,iBAAgB,WAAA,IAAAC,EAAAhT,GAAAC,KAAAC,MAAtB,SAAA+S,EACErG,EACAnqB,EACAywB,GAQC,OAAAjT,KAAAI,MAAA,SAAA8S,GAAA,cAAAA,EAAA5S,KAAA4S,EAAA3S,MAAA,KAAA,EAAA,OAAA2S,EAAA3S,KAAA,EAEsBtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAI,aAAagB,mBACvBkM,GACD,iBAAiBlM,mBAAmBje,GACrC,UAAA,CACEgS,OAAQ,OACRtS,QAAS,CACP,eAAgB,oBAElBye,KAAMC,KAAKC,UAAU,CACnB3iB,MAAO+0B,EAAQ/0B,MACfi1B,MAAOF,EAAQvkB,KACfG,OAAQokB,EAAQpkB,OAChBuc,YAAa6H,EAAQ7H,YACrBgI,UAAWH,EAAQI,SACnBtF,YAAakF,EAAQlF,YACrBuF,uBAAwBL,EAAQK,2BAGrC,KAAA,EAnBa,OAAAJ,EAAApS,OAAA,SAqBP7oB,KAAK8oB,oBArBEmS,EAAAlS,OAqB2B,KAAA,EAAA,IAAA,MAAA,OAAAkS,EAAAjS,OAAA,GAAA+R,EAAA/6B,KAC1C,KAAA,OAAA,SAAAoxB,EAAAa,EAAAC,GAAA,OAAA4I,EAAA5R,MAAAlpB,KAAAmpB,UAAA,CAAA,CAnCqB,GAmCrBlpB,EAEKq7B,uBAAsB,WAAA,IAAAC,EAAAzT,GAAAC,KAAAC,MAA5B,SAAAwT,EAAAC,EAYEC,GAA8C,IAAAnxB,EAAAoxB,EAAAjH,EAAAkH,EAAAvP,EAAA,OAAAtE,KAAAI,MAAA,SAAA0T,GAAA,cAAAA,EAAAxT,KAAAwT,EAAAvT,MAAA,KAAA,EAsB7C,OAhCC/d,EAAYkxB,EAAZlxB,aACAoxB,EAAWF,EAAXE,YACAjH,EAAS+G,EAAT/G,UACAkH,EAAUH,EAAVG,WAgBIvP,EAAc,IAAII,gBAEpBiP,IACFrP,EAAYK,OAAO,QAASoP,OAAOJ,EAAWlmB,QAC9C6W,EAAYK,OAAO,SAAUoP,OAAOJ,EAAWK,UAG7CH,GACFvP,EAAYK,OAAO,cAAe/D,KAAKC,UAAUgT,IAG/CD,GAAeA,EAAYhN,OAAS,GACtCtC,EAAYK,OAAO,eAAgB/D,KAAKC,UAAU+S,IACnDE,EAAAvT,KAAA,EAEsBtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAiBgB,aAAAA,mBACvBkM,GACgBlM,iBAAAA,mBAChBje,GACD,cAAc8hB,EAAYlqB,WAC3B,CACEoa,OAAQ,QAEX,KAAA,EATa,OAAAsf,EAAAhT,OAAA,SAUP7oB,KAAK8oB,oBAVE+S,EAAA9S,OAU2B,KAAA,EAAA,IAAA,MAAA,OAAA8S,EAAA7S,OAAA,GAAAwS,EAAAx7B,KAC1C,KAAA,OAAA,SAAA8yB,EAAAkJ,GAAA,OAAAT,EAAArS,MAAAlpB,KAAAmpB,UAAA,CAAA,CA/C2B,GA+C3BlpB,EAEKg8B,sBAAqB,WAAA,IAAAC,EAAApU,GAAAC,KAAAC,MAA3B,SAAAmU,EAAAC,GAAA,IAAA7xB,EAAA8xB,EAAA3H,EAAA4H,EAAAV,EAAAvP,EAAAC,EAAA,OAAAvE,KAAAI,MAAA,SAAAoU,GAAA,cAAAA,EAAAlU,KAAAkU,EAAAjU,MAAA,KAAA,EA4BmC,OA3BjC/d,EAAY6xB,EAAZ7xB,aACA8xB,EAAUD,EAAVC,WACA3H,EAAS0H,EAAT1H,UACA4H,EAAWF,EAAXE,YACAV,EAAUQ,EAAVR,WAaMvP,EAAc,IAAII,gBAEpB6P,GACFjQ,EAAYK,OAAO,eAAgB4P,GAGjCV,GACFvP,EAAYK,OAAO,cAAe/D,KAAKC,UAAUgT,IAG7CtP,EAAKD,EAAYlqB,WAAUo6B,EAAAjU,KAAA,EAEVtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAI,aAAagB,mBACvBkM,GACgBlM,iBAAAA,mBAChBje,GACD,cAAcie,mBAAmB6T,IAAc/P,EAASA,IAAAA,EAAO,IAChE,CACE/P,OAAQ,QAEX,KAAA,EATa,OAAAggB,EAAA1T,OAAA,SAWP7oB,KAAK8oB,oBAXEyT,EAAAxT,OAW2B,KAAA,EAAA,IAAA,MAAA,OAAAwT,EAAAvT,OAAA,GAAAmT,EAAAn8B,KAC1C,KAAA,OAAA,SAAAw8B,GAAA,OAAAN,EAAAhT,MAAAlpB,KAAAmpB,UAAA,CAAA,CA1C0B,GA0C1BlpB,EAEKw8B,8BAA6B,WAAA,IAAAC,EAAA5U,GAAAC,KAAAC,MAAnC,SAAA2U,EAAAC,GAAA,IAAAlI,EAAAnqB,EAAA8xB,EAAAQ,EAAAC,EAAAC,EAAAhB,EAAA5Y,EAAA,OAAA4E,KAAAI,MAAA,SAAA6U,GAAA,cAAAA,EAAA3U,KAAA2U,EAAA1U,MAAA,KAAA,EA6BG,OA5BDoM,EAASkI,EAATlI,UACAnqB,EAAYqyB,EAAZryB,aACA8xB,EAAUO,EAAVP,WACAQ,EAAWD,EAAXC,YAAWC,EAAAF,EACXpnB,MACAumB,OAAM,KADIgB,EAAAH,EACVb,QAAS,EAACgB,EAgBJ5Z,EAAS,IAAIsJ,gBAAgB,CACjCjX,MAAOsmB,YAlBJ,IAAAgB,EAAG,GAAEA,GAmBRf,OAAQD,OAAOC,KAGbc,GACF1Z,EAAOuJ,OAAO,cAAemQ,GAC9BG,EAAA1U,KAAA,EAEsBtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAI,aAAagB,mBACvBkM,GACgBlM,iBAAAA,mBAChBje,GACD,cAAcie,mBACb6T,GACYlZ,aAAAA,EAAOhhB,WACrB,CACEoa,OAAQ,QAEX,KAAA,EAXa,OAAAygB,EAAAnU,OAAA,SAaP7oB,KAAK8oB,oBAbEkU,EAAAjU,OAa2B,KAAA,EAAA,IAAA,MAAA,OAAAiU,EAAAhU,OAAA,GAAA2T,EAAA38B,KAC1C,KAAA,OAAA,SAAAi9B,GAAA,OAAAP,EAAAxT,MAAAlpB,KAAAmpB,UAAA,CAAA,CA7CkC,GA6ClClpB,EAEKi9B,yBAAwB,WAAA,IAAAC,EAAArV,GAAAC,KAAAC,MAA9B,SAAAoV,EAAAC,GAAA,IAAA3I,EAAAnqB,EAAA8xB,EAAA3f,EAAAzG,EAAAvK,EAAAlE,EAAAwW,EAAAR,EAAAsY,EAAAwH,EAAAC,EAAA11B,EAAAkW,EAAA,OAAAgK,KAAAI,MAAA,SAAAqV,GAAA,cAAAA,EAAAnV,KAAAmV,EAAAlV,MAAA,KAAA,EAaU,OAZRoM,EAAS2I,EAAT3I,UACAnqB,EAAY8yB,EAAZ9yB,aACA8xB,EAAUgB,EAAVhB,WACA3f,EAAS2gB,EAAT3gB,UACAzG,EAAIonB,EAAJpnB,KACAvK,EAAQ2xB,EAAR3xB,SACAlE,EAAO61B,EAAP71B,QACAwW,EAASqf,EAATrf,UACAR,EAAO6f,EAAP7f,QACAsY,EAAWuH,EAAXvH,YACAyH,YADWD,EAAAD,EACXE,sBAA2BD,EAC3Bz1B,EAAKw1B,EAALx1B,MACAkW,EAAQsf,EAARtf,SAAQyf,EAAAlV,KAAA,EAWetoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAiBkN,aAAAA,EAA0BlM,iBAAAA,mBACjDje,GAEF,aAAA,CACEgS,OAAQ,OACRtS,QAAS,CACP,eAAgB,oBAElBye,KAAMC,KAAKC,UAAU,CACnB6U,YAAapB,EACb3f,UAAAA,EACAc,QAAAA,EACAvH,KAAAA,EACAmH,UAAW1R,EACXlE,QAAAA,EACA6V,WAAYW,EACZ8X,YAAAA,EACArY,sBAAuB8f,EACvB11B,MAAOA,EACP8V,UAAWI,MAGhB,KAAA,EAvBa,OAAAyf,EAAA3U,OAAA,SAyBP7oB,KAAK8oB,oBAzBE0U,EAAAzU,OAyB2B,KAAA,EAAA,IAAA,MAAA,OAAAyU,EAAAxU,OAAA,GAAAoU,EAAAp9B,KAC1C,KAAA,OAAA,SAAA09B,GAAA,OAAAP,EAAAjU,MAAAlpB,KAAAmpB,UAAA,CAAA,CAlD6B,GAkD7BlpB,EAEK09B,0BAAyB,WAAA,IAAAC,EAAA9V,GAAAC,KAAAC,MAA/B,SAAA6V,EAAAC,GAAA,IAAApJ,EAAAnqB,EAAA8xB,EAAA,OAAAtU,KAAAI,MAAA,SAAA4V,GAAA,cAAAA,EAAA1V,KAAA0V,EAAAzV,MAAA,KAAA,EAGY,OAFVoM,EAASoJ,EAATpJ,UACAnqB,EAAYuzB,EAAZvzB,aACA8xB,EAAUyB,EAAVzB,WAAU0B,EAAAzV,KAAA,EAMatoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAiBkN,aAAAA,mBAA0BlM,mBACjDje,GACD,cAAcie,mBAAmB6T,GAClC,QAAA,CACE9f,OAAQ,MACRtS,QAAS,CACP,eAAgB,sBAGrB,KAAA,EAVa,OAAA8zB,EAAAlV,OAAA,SAYP7oB,KAAK8oB,oBAZEiV,EAAAhV,OAY2B,KAAA,EAAA,IAAA,MAAA,OAAAgV,EAAA/U,OAAA,GAAA6U,EAAA79B,KAC1C,KAAA,OAAA,SAAAg+B,GAAA,OAAAJ,EAAA1U,MAAAlpB,KAAAmpB,UAAA,CAAA,CAtB8B,GAsB9BlpB,EAEKg+B,6BAA4B,WAAA,IAAAC,EAAApW,GAAAC,KAAAC,MAAlC,SAAAmW,EAAAC,GAAA,IAAA1J,EAAAnqB,EAAA8xB,EAAAgC,EAAAC,EAAA,OAAAvW,KAAAI,MAAA,SAAAoW,GAAA,cAAAA,EAAAlW,KAAAkW,EAAAjW,MAAA,KAAA,EAKY,OAJVoM,EAAS0J,EAAT1J,UACAnqB,EAAY6zB,EAAZ7zB,aACA8xB,EAAU+B,EAAV/B,WACAgC,EAAOD,EAAPC,QACAC,EAAUF,EAAVE,WAAUC,EAAAjW,KAAA,EAYatoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAiBgB,aAAAA,mBACvBkM,GACgBlM,iBAAAA,mBAChBje,iBACaie,mBAAmB6T,GAClC,QAAA,CACE9f,OAAQ,QACRtS,QAAS,CACP,eAAgB,oBAElBye,KAAMC,KAAKC,UAAU,CACnB4V,SAAUH,EACVI,YAAaH,MAGlB,KAAA,EAhBa,OAAAC,EAAA1V,OAAA,SAkBP7oB,KAAK8oB,oBAlBEyV,EAAAxV,OAkB2B,KAAA,EAAA,IAAA,MAAA,OAAAwV,EAAAvV,OAAA,GAAAmV,EAAAn+B,KAC1C,KAAA,OAAA,SAAA0+B,GAAA,OAAAR,EAAAhV,MAAAlpB,KAAAmpB,UAAA,CAAA,CApCiC,GAoCjClpB,EAEK0+B,gCAA+B,WAAA,IAAAC,EAAA9W,GAAAC,KAAAC,MAArC,SAAA6W,EAAAC,GAAA,IAAApK,EAAAnqB,EAAA8xB,EAAA3wB,EAAAlE,EAAA,OAAAugB,KAAAI,MAAA,SAAA4W,GAAA,cAAAA,EAAA1W,KAAA0W,EAAAzW,MAAA,KAAA,EAKS,OAJPoM,EAASoK,EAATpK,UACAnqB,EAAYu0B,EAAZv0B,aACA8xB,EAAUyC,EAAVzC,WACA3wB,EAAQozB,EAARpzB,SACAlE,EAAOs3B,EAAPt3B,QAAOu3B,EAAAzW,KAAA,EAYgBtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAiBgB,aAAAA,mBACvBkM,GACgBlM,iBAAAA,mBAChBje,iBACaie,mBAAmB6T,GAClC,WAAA,CACE9f,OAAQ,QACRtS,QAAS,CACP,eAAgB,oBAElBye,KAAMC,KAAKC,UAAU,CACnBphB,QAASA,EACT4V,UAAW1R,MAGhB,KAAA,EAhBa,OAAAqzB,EAAAlW,OAAA,SAkBP7oB,KAAK8oB,oBAlBEiW,EAAAhW,OAkB2B,KAAA,EAAA,IAAA,MAAA,OAAAgW,EAAA/V,OAAA,GAAA6V,EAAA7+B,KAC1C,KAAA,OAAA,SAAAg/B,GAAA,OAAAJ,EAAA1V,MAAAlpB,KAAAmpB,UAAA,CAAA,CApCoC,GAoCpClpB,EAEKg/B,yBAAwB,WAAA,IAAAC,EAAApX,GAAAC,KAAAC,MAA9B,SAAAmX,EAAAC,GAAA,IAAA1K,EAAAnqB,EAAA8xB,EAAA,OAAAtU,KAAAI,MAAA,SAAAkX,GAAA,cAAAA,EAAAhX,KAAAgX,EAAA/W,MAAA,KAAA,EAGY,OAFVoM,EAAS0K,EAAT1K,UACAnqB,EAAY60B,EAAZ70B,aACA8xB,EAAU+C,EAAV/C,WAAUgD,EAAA/W,KAAA,EAMatoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAiBgB,aAAAA,mBACvBkM,GACgBlM,iBAAAA,mBAChBje,iBACaie,mBAAmB6T,GAClC,CACE9f,OAAQ,WAEX,KAAA,EATa,OAAA8iB,EAAAxW,OAAA,SAWP7oB,KAAK8oB,oBAXEuW,EAAAtW,OAW2B,KAAA,EAAA,IAAA,MAAA,OAAAsW,EAAArW,OAAA,GAAAmW,EAAAn/B,KAC1C,KAAA,OAAA,SAAAs/B,GAAA,OAAAJ,EAAAhW,MAAAlpB,KAAAmpB,UAAA,CAAA,CArB6B,GAqB7BlpB,EAEKs/B,uCAAsC,WAAA,IAAAC,EAAA1X,GAAAC,KAAAC,MAA5C,SAAAyX,EAAAC,GAAA,IAAAhL,EAAAnqB,EAAA8xB,EAAA,OAAAtU,KAAAI,MAAA,SAAAwX,GAAA,cAAAA,EAAAtX,KAAAsX,EAAArX,MAAA,KAAA,EAGY,OAFVoM,EAASgL,EAAThL,UACAnqB,EAAYm1B,EAAZn1B,aACA8xB,EAAUqD,EAAVrD,WAAUsD,EAAArX,KAAA,EAUatoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAiBgB,aAAAA,mBACvBkM,GACgBlM,iBAAAA,mBAChBje,iBACaie,mBAAmB6T,GAClC,0BAAA,CACE9f,OAAQ,SAEX,KAAA,EATa,OAAAojB,EAAA9W,OAAA,SAWP7oB,KAAK8oB,oBAXE6W,EAAA5W,OAW2B,KAAA,EAAA,IAAA,MAAA,OAAA4W,EAAA3W,OAAA,GAAAyW,EAAAz/B,KAC1C,KAAA,OAAA,SAAA4/B,GAAA,OAAAJ,EAAAtW,MAAAlpB,KAAAmpB,UAAA,CAAA,CAzB2C,GAyB3ClpB,EAEK4/B,SAAQ,WAAA,IAAAC,EAAAhY,GAAAC,KAAAC,MAAd,SAAA+X,EAAAC,GAAA,IAAAziB,EAAA7N,EAAA5C,EAAAgpB,EAAA,OAAA/N,KAAAI,MAAA,SAAA8X,GAAA,cAAAA,EAAA5X,KAAA4X,EAAA3X,MAAA,KAAA,EAS8C,OAR5C/K,EAAIyiB,EAAJziB,KACA7N,EAAOswB,EAAPtwB,QACA5C,EAAUkzB,EAAVlzB,WAMMgpB,EAActP,KAAwByZ,EAAA3X,KAAA,EACrBtoB,KAAKuoB,gBAAmBvoB,KAAKwnB,KAAiB,YAAA,CACnEjL,OAAQ,OACRtS,QAAS,CACP,eAAgB,oBAElBi2B,WAAW,EACXxX,KAAMC,KAAKC,UAAU,CACnBrL,KAAAA,EACA4iB,SAAUzwB,EACV0wB,YAAatzB,EACbgpB,YAAAA,MAEF,KAAA,EAZY,OAAAmK,EAAApX,OAAA,SAcP7oB,KAAK8oB,oBAdEmX,EAAAlX,OAc2B,KAAA,EAAA,IAAA,MAAA,OAAAkX,EAAAjX,OAAA,GAAA+W,EAAA//B,KAC1C,KAAA,OAAA,SAAAqgC,GAAA,OAAAP,EAAA5W,MAAAlpB,KAAAmpB,UAAA,CAAA,CAzBa,GAyBblpB,EAEKqgC,cAAa,WAAA,IAAAC,EAAAzY,GAAAC,KAAAC,MAAnB,SAAAwY,EAAAC,GAAA,IAAAC,EAAAhxB,EAAA5C,EAAAgpB,EAAA,OAAA/N,KAAAI,MAAA,SAAAwY,GAAA,cAAAA,EAAAtY,KAAAsY,EAAArY,MAAA,KAAA,EAS8C,OAR5CoY,EAAKD,EAALC,MACAhxB,EAAO+wB,EAAP/wB,QACA5C,EAAU2zB,EAAV3zB,WAMMgpB,EAActP,KAAwBma,EAAArY,KAAA,EACrBtoB,KAAKuoB,gBAAmBvoB,KAAKwnB,KAAuB,kBAAA,CACzEjL,OAAQ,OACRtS,QAAS,CACP,eAAgB,oBAElBi2B,WAAW,EACXxX,KAAMC,KAAKC,UAAU,CACnB8X,MAAAA,EACAP,SAAUzwB,EACV0wB,YAAatzB,EACbgpB,YAAAA,MAEF,KAAA,EAZY,OAAA6K,EAAA9X,OAAA,SAcP7oB,KAAK8oB,oBAdE6X,EAAA5X,OAc2B,KAAA,EAAA,IAAA,MAAA,OAAA4X,EAAA3X,OAAA,GAAAwX,EAAAxgC,KAC1C,KAAA,OAAA,SAAA4gC,GAAA,OAAAL,EAAArX,MAAAlpB,KAAAmpB,UAAA,CAAA,CAzBkB,GAyBlBlpB,EAEK4gC,mBAAkB,WAAA,IAAAC,EAAAhZ,GAAAC,KAAAC,MAAxB,SAAA+Y,EAAAC,GAAA,IAAAzjB,EAAAmX,EAAAnqB,EAAA,OAAAwd,KAAAI,MAAA,SAAA8Y,GAAA,cAAAA,EAAA5Y,KAAA4Y,EAAA3Y,MAAA,KAAA,EAGc,OAFZ/K,EAAIyjB,EAAJzjB,KACAmX,EAASsM,EAATtM,UACAnqB,EAAYy2B,EAAZz2B,aAAY02B,EAAA3Y,KAAA,EAMWtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAI,aAAagB,mBACvBkM,GACD,iBAAiBlM,mBAAmBje,GACrC,YAAA,CACEgS,OAAQ,OACRtS,QAAS,CACP,eAAgB,oBAElBye,KAAMC,KAAKC,UAAU,CAAErL,KAAAA,MAE1B,KAAA,EAXa,OAAA0jB,EAAApY,OAAA,SAYP7oB,KAAK8oB,oBAZEmY,EAAAlY,OAY2B,KAAA,EAAA,IAAA,MAAA,OAAAkY,EAAAjY,OAAA,GAAA+X,EAAA/gC,KAC1C,KAAA,OAAA,SAAAkhC,GAAA,OAAAJ,EAAA5X,MAAAlpB,KAAAmpB,UAAA,CAAA,CAtBuB,GAsBvBlpB,EAEKkhC,wBAAuB,WAAA,IAAAC,EAAAtZ,GAAAC,KAAAC,MAA7B,SAAAqZ,EAAAC,GAAA,IAAA5M,EAAAnqB,EAAAg3B,EAAAC,EAAA,OAAAzZ,KAAAI,MAAA,SAAAsZ,GAAA,cAAAA,EAAApZ,KAAAoZ,EAAAnZ,MAAA,KAAA,EAIe,OAHboM,EAAS4M,EAAT5M,UACAnqB,EAAY+2B,EAAZ/2B,aACAg3B,EAAMD,EAANC,OACAC,EAAaF,EAAbE,cAAaC,EAAAnZ,KAAA,EAWUtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAI,aAAagB,mBACvBkM,GACD,iBAAiBlM,mBAChBje,GAEF,+BAAA,CACEgS,OAAQ,OACRtS,QAAS,CACP,eAAgB,oBAElBye,KAAMC,KAAKC,UAAU,CACnB2Y,OAAAA,EACAG,gBAAiBF,MAGtB,KAAA,EAhBa,OAAAC,EAAA5Y,OAAA,SAkBP7oB,KAAK8oB,oBAlBE2Y,EAAA1Y,OAkB2B,KAAA,EAAA,IAAA,MAAA,OAAA0Y,EAAAzY,OAAA,GAAAqY,EAAArhC,KAC1C,KAAA,OAAA,SAAA2hC,GAAA,OAAAP,EAAAlY,MAAAlpB,KAAAmpB,UAAA,CAAA,CAlC4B,GAkC5BlpB,EAEK2hC,YAAW,WAAA,IAAAC,EAAA/Z,GAAAC,KAAAC,MAAjB,SAAA8Z,EAAAC,GAAA,IAAArN,EAAAnqB,EAAA2M,EAAA7R,EAAA2K,EAAA0M,EAAAzG,EAAAvK,EAAAlE,EAAAw6B,EAAAC,EAAAp6B,EAAAkW,EAAAC,EAAA,OAAA+J,KAAAI,MAAA,SAAA+Z,GAAA,cAAAA,EAAA7Z,KAAA6Z,EAAA5Z,MAAA,KAAA,EAcW,OAbToM,EAASqN,EAATrN,UACAnqB,EAAYw3B,EAAZx3B,aACA2M,EAAO6qB,EAAP7qB,QACA7R,EAAI08B,EAAJ18B,KACA2K,EAAW+xB,EAAX/xB,YACA0M,EAASqlB,EAATrlB,UACAzG,EAAI8rB,EAAJ9rB,KACAvK,EAAQq2B,EAARr2B,SACAlE,EAAOu6B,EAAPv6B,QACAw6B,EAAqBD,EAArBC,sBACAC,EAAsBF,EAAtBE,uBACAp6B,EAAKk6B,EAALl6B,MACAkW,EAAQgkB,EAARhkB,SACAC,EAAS+jB,EAAT/jB,UAASkkB,EAAA5Z,KAAA,EAiBctoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAI,aAAagB,mBACvBkM,GACD,iBAAiBlM,mBAAmBje,GACrC,UAAA,CACEgS,OAAQ,OACRtS,QAAS,CACP,eAAgB,oBAElBye,KAAMC,KAAKC,UAAU,CACnBuZ,SAAUjrB,EACV7R,KAAMA,EACN2K,YAAaA,EACb0M,UAAAA,EACAzG,KAAAA,EACAmH,UAAW1R,EACXlE,QAAAA,EACA46B,yBAA0BJ,MAAAA,EAAAA,EAAyB,KACnDK,0BAA2BJ,MAAAA,EAAAA,EAA0B,KACrDp6B,MAAAA,EACA8V,UAAWI,EACXV,WAAYW,MAGjB,KAAA,EAxBa,OAAAkkB,EAAArZ,OAAA,SA0BP7oB,KAAK8oB,oBA1BEoZ,EAAAnZ,OA0B2B,KAAA,EAAA,IAAA,MAAA,OAAAmZ,EAAAlZ,OAAA,GAAA8Y,EAAA9hC,KAC1C,KAAA,OAAA,SAAAsiC,GAAA,OAAAT,EAAA3Y,MAAAlpB,KAAAmpB,UAAA,CAAA,CA1DgB,GA0DhBlpB,EAEKsiC,SAAQ,WAAA,IAAAC,EAAA1a,GAAAC,KAAAC,MAAd,SAAAya,EAAAC,GAAA,IAAAhO,EAAAnqB,EAAA2M,EAAA0kB,EAAAvP,EAAA,OAAAtE,KAAAI,MAAA,SAAAwa,GAAA,cAAAA,EAAAta,KAAAsa,EAAAra,MAAA,KAAA,EAeG,OAdDoM,EAASgO,EAAThO,UACAnqB,EAAYm4B,EAAZn4B,aACA2M,EAAOwrB,EAAPxrB,QACA0kB,EAAU8G,EAAV9G,WAOMvP,EAAc,IAAII,gBAEpBmP,GACFvP,EAAYK,OAAO,cAAe/D,KAAKC,UAAUgT,IAClD+G,EAAAra,KAAA,EAEsBtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAI,aAAagB,mBACvBkM,GACgBlM,iBAAAA,mBAChBje,GACD,WAAWie,mBAAmBtR,GAAYmV,IAAAA,EAAYlqB,WACvD,CACEoa,OAAQ,QAEX,KAAA,EATa,OAAAomB,EAAA9Z,OAAA,SAWP7oB,KAAK8oB,oBAXE6Z,EAAA5Z,OAW2B,KAAA,EAAA,IAAA,MAAA,OAAA4Z,EAAA3Z,OAAA,GAAAyZ,EAAAziC,KAC1C,KAAA,OAAA,SAAA4iC,GAAA,OAAAJ,EAAAtZ,MAAAlpB,KAAAmpB,UAAA,CAAA,CA7Ba,GA6BblpB,EAEK4iC,UAAS,WAAA,IAAAC,EAAAhb,GAAAC,KAAAC,MAAf,SAAA+a,EAAAC,EAYEtH,GAA8C,IAAAnxB,EAAAmqB,EAAAuO,EAAArH,EAAAvP,EAAA,OAAAtE,KAAAI,MAAA,SAAA+a,GAAA,cAAAA,EAAA7a,KAAA6a,EAAA5a,MAAA,KAAA,EAsB7C,OAhCC/d,EAAYy4B,EAAZz4B,aACAmqB,EAASsO,EAATtO,UACAuO,EAAQD,EAARC,SACArH,EAAUoH,EAAVpH,WAgBIvP,EAAc,IAAII,gBAEpBmP,GACFvP,EAAYK,OAAO,cAAe/D,KAAKC,UAAUgT,IAG/CqH,GAAYA,EAAStU,OAAS,GAChCtC,EAAYK,OAAO,YAAa/D,KAAKC,UAAUqa,IAG7CvH,IACFrP,EAAYK,OAAO,QAASoP,OAAOJ,EAAWlmB,QAC9C6W,EAAYK,OAAO,SAAUoP,OAAOJ,EAAWK,UAChDmH,EAAA5a,KAAA,EAEsBtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAiBgB,aAAAA,mBACvBkM,GACgBlM,iBAAAA,mBAChBje,GACD,WAAW8hB,EAAYlqB,WACxB,CACEoa,OAAQ,QAEX,KAAA,EATa,OAAA2mB,EAAAra,OAAA,SAWP7oB,KAAK8oB,oBAXEoa,EAAAna,OAW2B,KAAA,EAAA,IAAA,MAAA,OAAAma,EAAAla,OAAA,GAAA+Z,EAAA/iC,KAC1C,KAAA,OAAA,SAAAmjC,EAAAC,GAAA,OAAAN,EAAA5Z,MAAAlpB,KAAAmpB,UAAA,CAAA,CAhDc,GAgDdlpB,EAEKojC,YAAW,WAAA,IAAAC,EAAAxb,GAAAC,KAAAC,MAAjB,SAAAub,EAAAC,GAAA,IAAA9O,EAAAnqB,EAAA2M,EAAA,OAAA6Q,KAAAI,MAAA,SAAAsb,GAAA,cAAAA,EAAApb,KAAAob,EAAAnb,MAAA,KAAA,EAGS,OAFPoM,EAAS8O,EAAT9O,UACAnqB,EAAYi5B,EAAZj5B,aACA2M,EAAOssB,EAAPtsB,QAAOusB,EAAAnb,KAAA,EAMgBtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAiBgB,aAAAA,mBACvBkM,GACgBlM,iBAAAA,mBAChBje,cACUie,mBAAmBtR,GAC/B,CACEqF,OAAQ,WAEX,KAAA,EATa,OAAAknB,EAAA5a,OAAA,SAWP7oB,KAAK8oB,oBAXE2a,EAAA1a,OAW2B,KAAA,EAAA,IAAA,MAAA,OAAA0a,EAAAza,OAAA,GAAAua,EAAAvjC,KAC1C,KAAA,OAAA,SAAA0jC,GAAA,OAAAJ,EAAApa,MAAAlpB,KAAAmpB,UAAA,CAAA,CArBgB,GAqBhBlpB,EAEK0jC,mBAAkB,WAAA,IAAAC,EAAA9b,GAAAC,KAAAC,MAAxB,SAAA6b,EAAAC,GAAA,IAAApP,EAAAnqB,EAAA2M,EAAAxL,EAAAlE,EAAA,OAAAugB,KAAAI,MAAA,SAAA4b,GAAA,cAAAA,EAAA1b,KAAA0b,EAAAzb,MAAA,KAAA,EAKS,OAJPoM,EAASoP,EAATpP,UACAnqB,EAAYu5B,EAAZv5B,aACA2M,EAAO4sB,EAAP5sB,QACAxL,EAAQo4B,EAARp4B,SACAlE,EAAOs8B,EAAPt8B,QAAOu8B,EAAAzb,KAAA,EAQgBtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAiBgB,aAAAA,mBACvBkM,GACgBlM,iBAAAA,mBAChBje,cACUie,mBAAmBtR,GAC/B,WAAA,CACEqF,OAAQ,QACRtS,QAAS,CACP,eAAgB,oBAElBye,KAAMC,KAAKC,UAAU,CACnBxL,UAAW1R,EACXlE,QAASA,MAGd,KAAA,EAhBa,OAAAu8B,EAAAlb,OAAA,SAkBP7oB,KAAK8oB,oBAlBEib,EAAAhb,OAkB2B,KAAA,EAAA,IAAA,MAAA,OAAAgb,EAAA/a,OAAA,GAAA6a,EAAA7jC,KAC1C,KAAA,OAAA,SAAAgkC,GAAA,OAAAJ,EAAA1a,MAAAlpB,KAAAmpB,UAAA,CAAA,CAhCuB,GAgCvBlpB,EAEKgkC,gBAAe,WAAA,IAAAC,EAAApc,GAAAC,KAAAC,MAArB,SAAAmc,EAAAC,GAAA,IAAA1P,EAAAnqB,EAAA2M,EAAAmtB,EAAAvmB,EAAA,OAAAiK,KAAAI,MAAA,SAAAmc,GAAA,cAAAA,EAAAjc,KAAAic,EAAAhc,MAAA,KAAA,EAKU,OAJRoM,EAAS0P,EAAT1P,UACAnqB,EAAY65B,EAAZ75B,aACA2M,EAAOktB,EAAPltB,QACAmtB,EAAID,EAAJC,KACAvmB,EAAQsmB,EAARtmB,SAAQwmB,EAAAhc,KAAA,EAQetoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAiBgB,aAAAA,mBACvBkM,GACgBlM,iBAAAA,mBAChBje,cACUie,mBAAmBtR,GAC/B,QAAA,CACEqF,OAAQ,OACRtS,QAAS,CACP,eAAgB,oBAElBye,KAAMC,KAAKC,UAAU,CACnByb,KAAAA,EACAvmB,SAAUA,IAAY,MAG3B,KAAA,EAhBa,OAAAwmB,EAAAzb,OAAA,SAkBP7oB,KAAK8oB,oBAlBEwb,EAAAvb,OAkB2B,KAAA,EAAA,IAAA,MAAA,OAAAub,EAAAtb,OAAA,GAAAmb,EAAAnkC,KAC1C,KAAA,OAAA,SAAAukC,GAAA,OAAAL,EAAAhb,MAAAlpB,KAAAmpB,UAAA,CAAA,CAhCoB,GAgCpBlpB,EAEKukC,sBAAqB,WAAA,IAAAC,EAAA3c,GAAAC,KAAAC,MAA3B,SAAA0c,EAAAC,GAAA,IAAAjQ,EAAAnqB,EAAA2M,EAAAqqB,EAAAC,EAAA1jB,EAAA,OAAAiK,KAAAI,MAAA,SAAAyc,GAAA,cAAAA,EAAAvc,KAAAuc,EAAAtc,MAAA,KAAA,EAMU,OALRoM,EAASiQ,EAATjQ,UACAnqB,EAAYo6B,EAAZp6B,aACA2M,EAAOytB,EAAPztB,QACAqqB,EAAMoD,EAANpD,OACAC,EAAamD,EAAbnD,cACA1jB,EAAQ6mB,EAAR7mB,SAAQ8mB,EAAAtc,KAAA,EAaetoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAiBgB,aAAAA,mBACvBkM,GACgBlM,iBAAAA,mBAChBje,cACUie,mBAAmBtR,GAC/B,OAAA,CACEqF,OAAQ,OACRtS,QAAS,CACP,eAAgB,oBAElBye,KAAMC,KAAKC,UAAU,CACnB2Y,OAAAA,EACAG,gBAAiBF,EACjB1jB,SAAUA,IAAY,MAG3B,KAAA,EAjBa,OAAA8mB,EAAA/b,OAAA,SAmBP7oB,KAAK8oB,oBAnBE8b,EAAA7b,OAmB2B,KAAA,EAAA,IAAA,MAAA,OAAA6b,EAAA5b,OAAA,GAAA0b,EAAA1kC,KAC1C,KAAA,OAAA,SAAA6kC,GAAA,OAAAJ,EAAAvb,MAAAlpB,KAAAmpB,UAAA,CAAA,CAvC0B,GAuC1BlpB,EAEK6kC,YAAW,WAAA,IAAAC,EAAAjd,GAAAC,KAAAC,MAAjB,SAAAgd,EAAAC,GAAA,IAAAvQ,EAAAnqB,EAAA2M,EAAAguB,EAAAtuB,EAAA0V,EAAA,OAAAvE,KAAAI,MAAA,SAAAgd,GAAA,cAAAA,EAAA9c,KAAA8c,EAAA7c,MAAA,KAAA,EAeQ,OAdNoM,EAASuQ,EAATvQ,UACAnqB,EAAY06B,EAAZ16B,aACA2M,EAAO+tB,EAAP/tB,QACAguB,EAAKD,EAALC,MASM5Y,GARN1V,EAAMquB,EAANruB,QASoB4R,gBAAAA,mBAAmBG,KAAKC,UAAUhS,IAClD,GAAEuuB,EAAA7c,KAAA,EACiBtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAI,aAAagB,mBACvBkM,GACgBlM,iBAAAA,mBAChBje,GACD,WAAWie,mBAAmBtR,GAAiBsR,SAAAA,mBAC9C0c,GACE5Y,EACJ,CACE/P,OAAQ,QAEX,KAAA,EAXa,OAAA4oB,EAAAtc,OAAA,SAaP7oB,KAAK8oB,oBAbEqc,EAAApc,OAa2B,KAAA,EAAA,IAAA,MAAA,OAAAoc,EAAAnc,OAAA,GAAAgc,EAAAhlC,KAC1C,KAAA,OAAA,SAAAolC,GAAA,OAAAL,EAAA7b,MAAAlpB,KAAAmpB,UAAA,CAAA,CA9BgB,GA8BhBlpB,EAEKolC,aAAY,WAAA,IAAAC,EAAAxd,GAAAC,KAAAC,MAAlB,SAAAud,EAAAC,GAAA,IAAA9Q,EAAAnqB,EAAA2M,EAAA1B,EAAAumB,EAAAnlB,EAAA0V,EAAA,OAAAvE,KAAAI,MAAA,SAAAsd,GAAA,cAAAA,EAAApd,KAAAod,EAAAnd,MAAA,KAAA,EAwBQ,OAvBNoM,EAAS8Q,EAAT9Q,UACAnqB,EAAYi7B,EAAZj7B,aACA2M,EAAOsuB,EAAPtuB,QACA1B,EAAKgwB,EAALhwB,MACAumB,EAAMyJ,EAANzJ,OAiBMzP,GAhBN1V,EAAM4uB,EAAN5uB,QAiBoB4R,gBAAAA,mBAAmBG,KAAKC,UAAUhS,IAClD,GAAE6uB,EAAAnd,KAAA,EACiBtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAI,aAAagB,mBACvBkM,GACgBlM,iBAAAA,mBAChBje,GACD,WAAWie,mBACVtR,GACc1B,eAAAA,EAAgBumB,WAAAA,EAASzP,EACzC,CACE/P,OAAQ,QAEX,KAAA,EAXa,OAAAkpB,EAAA5c,OAAA,SAaP7oB,KAAK8oB,oBAbE2c,EAAA1c,OAa2B,KAAA,EAAA,IAAA,MAAA,OAAA0c,EAAAzc,OAAA,GAAAuc,EAAAvlC,KAC1C,KAAA,OAAA,SAAA0lC,GAAA,OAAAJ,EAAApc,MAAAlpB,KAAAmpB,UAAA,CAAA,CAvCiB,GAuCjBlpB,EAEK0lC,uBAAsB,WAAA,IAAAC,EAAA9d,GAAAC,KAAAC,MAA5B,SAAA6d,EAAAC,GAAA,IAAApR,EAAAnqB,EAAA2M,EAAA,OAAA6Q,KAAAI,MAAA,SAAA4d,GAAA,cAAAA,EAAA1d,KAAA0d,EAAAzd,MAAA,KAAA,EAGS,OAFPoM,EAASoR,EAATpR,UACAnqB,EAAYu7B,EAAZv7B,aACA2M,EAAO4uB,EAAP5uB,QAAO6uB,EAAAzd,KAAA,EAMgBtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAiBkN,aAAAA,mBAA0BlM,mBACjDje,GACD,WAAWie,mBAAmBtR,GAC/B,QAAA,CACEqF,OAAQ,MACRtS,QAAS,CACP,eAAgB,sBAGrB,KAAA,EAVa,OAAA87B,EAAAld,OAAA,SAYP7oB,KAAK8oB,oBAZEid,EAAAhd,OAY2B,KAAA,EAAA,IAAA,MAAA,OAAAgd,EAAA/c,OAAA,GAAA6c,EAAA7lC,KAC1C,KAAA,OAAA,SAAAgmC,GAAA,OAAAJ,EAAA1c,MAAAlpB,KAAAmpB,UAAA,CAAA,CAtB2B,GAsB3BlpB,EAEKgmC,eAAc,WAAA,IAAAC,EAAApe,GAAAC,KAAAC,MAApB,SAAAme,EAAAC,GAAA,IAAA1R,EAAAnqB,EAAA2M,EAAAguB,EAAA,OAAAnd,KAAAI,MAAA,SAAAke,GAAA,cAAAA,EAAAhe,KAAAge,EAAA/d,MAAA,KAAA,EAIO,OAHLoM,EAAS0R,EAAT1R,UACAnqB,EAAY67B,EAAZ77B,aACA2M,EAAOkvB,EAAPlvB,QACAguB,EAAKkB,EAALlB,MAAKmB,EAAA/d,KAAA,EAOkBtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAiBgB,aAAAA,mBACvBkM,GACD,iBAAiBlM,mBAChBje,GACUie,WAAAA,mBAAmBtR,GAAQ,SAASsR,mBAC9C0c,GAEF,CACE3oB,OAAQ,WAEX,KAAA,EAXa,OAAA8pB,EAAAxd,OAAA,SAaP7oB,KAAK8oB,oBAbEud,EAAAtd,OAa2B,KAAA,EAAA,IAAA,MAAA,OAAAsd,EAAArd,OAAA,GAAAmd,EAAAnmC,KAC1C,KAAA,OAAA,SAAAsmC,GAAA,OAAAJ,EAAAhd,MAAAlpB,KAAAmpB,UAAA,CAAA,CAzBmB,GAyBnBlpB,EAEKsmC,cAAa,WAAA,IAAAC,EAAA1e,GAAAC,KAAAC,MAAnB,SAAAye,EAAAC,GAAA,IAAAzvB,EAAAhR,EAAA2Q,EAAA,OAAAmR,KAAAI,MAAA,SAAAwe,GAAA,cAAAA,EAAAte,KAAAse,EAAAre,MAAA,KAAA,EAGQ,OAFNrR,EAAMyvB,EAANzvB,OACAhR,EAAKygC,EAALzgC,MACA2Q,EAAM8vB,EAAN9vB,OAAM+vB,EAAAre,KAAA,EAeiBtoB,KAAKuoB,gBAAmBvoB,KAAKwnB,KAAuB,kBAAA,CACzEjL,OAAQ,OACRtS,QAAS,CACP,eAAgB,oBAElBye,KAAMC,KAAKC,UAAU,CACnB3iB,MAAAA,EACAgR,OAAAA,EACAL,OAAAA,MAEF,KAAA,EAVY,OAAA+vB,EAAA9d,OAAA,SAYP7oB,KAAK8oB,oBAZE6d,EAAA5d,OAY2B,KAAA,EAAA,IAAA,MAAA,OAAA4d,EAAA3d,OAAA,GAAAyd,EAAAzmC,KAC1C,KAAA,OAAA,SAAA4mC,GAAA,OAAAJ,EAAAtd,MAAAlpB,KAAAmpB,UAAA,CAAA,CA/BkB,GA+BlBlpB,EAEK4mC,qBAAoB,WAAA,IAAAC,EAAAhf,GAAAC,KAAAC,MAA1B,SAAA+e,EAAAC,EAYEtL,GAA8C,IAAAhH,EAAAnqB,EAAA08B,EAAArL,EAAAvP,EAAA,OAAAtE,KAAAI,MAAA,SAAA+e,GAAA,cAAAA,EAAA7e,KAAA6e,EAAA5e,MAAA,KAAA,EAsB7C,OAhCCoM,EAASsS,EAATtS,UACAnqB,EAAYy8B,EAAZz8B,aACA08B,EAASD,EAATC,UACArL,EAAUoL,EAAVpL,WAgBIvP,EAAc,IAAII,gBAEpBiP,IACFrP,EAAYK,OAAO,QAASoP,OAAOJ,EAAWlmB,QAC9C6W,EAAYK,OAAO,SAAUoP,OAAOJ,EAAWK,UAG7CH,GACFvP,EAAYK,OAAO,cAAe/D,KAAKC,UAAUgT,IAG/CqL,GAAaA,EAAUtY,OAAS,GAClCtC,EAAYK,OAAO,eAAgB/D,KAAKC,UAAUqe,IACnDC,EAAA5e,KAAA,EAEsBtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAiBgB,aAAAA,mBACvBkM,GACgBlM,iBAAAA,mBAChBje,GACD,YAAY8hB,EAAYlqB,WACzB,CACEoa,OAAQ,QAEX,KAAA,EATa,OAAA2qB,EAAAre,OAAA,SAUP7oB,KAAK8oB,oBAVEoe,EAAAne,OAU2B,KAAA,EAAA,IAAA,MAAA,OAAAme,EAAAle,OAAA,GAAA+d,EAAA/mC,KAC1C,KAAA,OAAA,SAAAmnC,EAAAC,GAAA,OAAAN,EAAA5d,MAAAlpB,KAAAmpB,UAAA,CAAA,CA/CyB,GA+CzBlpB,EAEKonC,YAAW,WAAA,IAAAC,EAAAxf,GAAAC,KAAAC,MAAjB,SAAAuf,EAAAC,GAAA,IAAAvhC,EAAA2Q,EAAA6wB,EAAA,OAAA1f,KAAAI,MAAA,SAAAuf,GAAA,cAAAA,EAAArf,KAAAqf,EAAApf,MAAA,KAAA,EAGS,OAFPriB,EAAKuhC,EAALvhC,MACA2Q,EAAM4wB,EAAN5wB,OACA6wB,EAAOD,EAAPC,QAAOC,EAAApf,KAAA,EAMgBtoB,KAAKuoB,gBAAmBvoB,KAAKwnB,KAAqB,gBAAA,CACvEjL,OAAQ,OACRtS,QAAS,CACP,eAAgB,oBAElBye,KAAMC,KAAKC,UAAU,CACnB3iB,MAAAA,EACA2Q,OAAAA,EACA6wB,QAAAA,MAEF,KAAA,EAVY,OAAAC,EAAA7e,OAAA,SAYP7oB,KAAK8oB,oBAZE4e,EAAA3e,OAY2B,KAAA,EAAA,IAAA,MAAA,OAAA2e,EAAA1e,OAAA,GAAAue,EAAAvnC,KAC1C,KAAA,OAAA,SAAA2nC,GAAA,OAAAL,EAAApe,MAAAlpB,KAAAmpB,UAAA,CAAA,CAtBgB,GAsBhBlpB,EAEK2nC,mBAAkB,WAAA,IAAAC,EAAA/f,GAAAC,KAAAC,MAAxB,SAAA8f,EAAAC,GAAA,IAAArT,EAAAnqB,EAAA,OAAAwd,KAAAI,MAAA,SAAA6f,GAAA,cAAAA,EAAA3f,KAAA2f,EAAA1f,MAAA,KAAA,EAEc,OADZoM,EAASqT,EAATrT,UACAnqB,EAAYw9B,EAAZx9B,aAAYy9B,EAAA1f,KAAA,EAKWtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAI,aAAagB,mBACvBkM,GACD,iBAAiBlM,mBAAmBje,GACrC,SAAA,CACEgS,OAAQ,MACRtS,QAAS,CACP,eAAgB,sBAGrB,KAAA,EAVa,OAAA+9B,EAAAnf,OAAA,SAYP7oB,KAAK8oB,oBAZEkf,EAAAjf,OAY2B,KAAA,EAAA,IAAA,MAAA,OAAAif,EAAAhf,OAAA,GAAA8e,EAAA9nC,KAC1C,KAAA,OAAA,SAAAioC,GAAA,OAAAJ,EAAA3e,MAAAlpB,KAAAmpB,UAAA,CAAA,CApBuB,GAoBvBlpB,EAEKioC,WAAU,WAAA,IAAAC,EAAArgB,GAAAC,KAAAC,MAAhB,SAAAogB,EAAAC,GAAA,IAAApiC,EAAAqiC,EAAA9yB,EAAA+yB,EAAA,OAAAxgB,KAAAI,MAAA,SAAAqgB,GAAA,cAAAA,EAAAngB,KAAAmgB,EAAAlgB,MAAA,KAAA,EAeO,OAdLriB,EAAKoiC,EAALpiC,MACAqiC,EAASD,EAATC,UAEA9yB,EAAK6yB,EAAL7yB,MAOM+yB,EARSF,EAAfI,gBASkBvuB,KAAI,SAACwuB,GAAG,IAAAC,EAAA,MAAM,CAC5BzV,eAAgBwV,EAAIv8B,WAAWy8B,oBAC/BzV,YAA0B,OAAfwV,EAAED,EAAIxsB,WAASysB,EAAI,GAC/B,IAAEH,EAAAlgB,KAAA,EAEkBtoB,KAAKuoB,gBAAmBvoB,KAAKwnB,KAAoB,eAAA,CACtEjL,OAAQ,OACRtS,QAAS,CACP,eAAgB,oBAElBye,KAAMC,KAAKC,UAAU,CACnB0K,kBAAmBiV,EACnBtiC,MAAAA,EACA4iC,WAAYP,EACZ9yB,MAAAA,MAEF,KAAA,EAXY,OAAAgzB,EAAA3f,OAAA,SAaP7oB,KAAK8oB,oBAbE0f,EAAAzf,OAa2B,KAAA,EAAA,IAAA,MAAA,OAAAyf,EAAAxf,OAAA,GAAAof,EAAApoC,KAC1C,KAAA,OAAA,SAAA8oC,GAAA,OAAAX,EAAAjf,MAAAlpB,KAAAmpB,UAAA,CAAA,CA/Be,GA+BflpB,EAEK8oC,oBAAmB,WAAA,IAAAC,EAAAlhB,GAAAC,KAAAC,MAAzB,SAAAihB,EAAAC,GAAA,IAAAxU,EAAAnqB,EAAA4+B,EAAA,OAAAphB,KAAAI,MAAA,SAAAihB,GAAA,cAAAA,EAAA/gB,KAAA+gB,EAAA9gB,MAAA,KAAA,EAGU,OAFRoM,EAASwU,EAATxU,UACAnqB,EAAY2+B,EAAZ3+B,aACA4+B,EAAQD,EAARC,SAAQC,EAAA9gB,KAAA,EAOetoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAiBgB,aAAAA,mBACvBkM,GACgBlM,iBAAAA,mBAChBje,eACWie,mBAAmB2gB,GAChC,CACE5sB,OAAQ,QAEX,KAAA,EATa,OAAA6sB,EAAAvgB,OAAA,SAWP7oB,KAAK8oB,oBAXEsgB,EAAArgB,OAW2B,KAAA,EAAA,IAAA,MAAA,OAAAqgB,EAAApgB,OAAA,GAAAigB,EAAAjpC,KAC1C,KAAA,OAAA,SAAAqpC,GAAA,OAAAL,EAAA9f,MAAAlpB,KAAAmpB,UAAA,CAAA,CAtBwB,GAsBxBlpB,EAEKqpC,uBAAsB,WAAA,IAAAC,EAAAzhB,GAAAC,KAAAC,MAA5B,SAAAwhB,EAAAC,GAAA,IAAA/U,EAAAnqB,EAAA4+B,EAAAzsB,EAAAhR,EAAAlE,EAAAK,EAAAkW,EAAAC,EAAA0rB,EAAA,OAAA3hB,KAAAI,MAAA,SAAAwhB,GAAA,cAAAA,EAAAthB,KAAAshB,EAAArhB,MAAA,KAAA,EAUoB,OATlBoM,EAAS+U,EAAT/U,UACAnqB,EAAYk/B,EAAZl/B,aACA4+B,EAAQM,EAARN,SACAzsB,EAAS+sB,EAAT/sB,UACAhR,EAAQ+9B,EAAR/9B,SACAlE,EAAOiiC,EAAPjiC,QACAK,EAAK4hC,EAAL5hC,MACAkW,EAAQ0rB,EAAR1rB,SACAC,EAASyrB,EAATzrB,UACA0rB,EAAkBD,EAAlBC,mBAAkBC,EAAArhB,KAAA,EAaKtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAiBkN,aAAAA,EAA0BlM,iBAAAA,mBACjDje,GAEF,WAAA,CACEgS,OAAQ,OACRtS,QAAS,CACP,eAAgB,oBAElBye,KAAMC,KAAKC,UAAU,CACnBghB,UAAWT,EACXzsB,UAAAA,EACA7U,MAAAA,EACAuV,UAAW1R,EACXlE,QAAAA,EACAmW,UAAWI,EACXV,WAAYW,EACZ6rB,oBAAqBH,MAG1B,KAAA,EApBa,OAAAC,EAAA9gB,OAAA,SAsBP7oB,KAAK8oB,oBAtBE6gB,EAAA5gB,OAsB2B,KAAA,EAAA,IAAA,MAAA,OAAA4gB,EAAA3gB,OAAA,GAAAwgB,EAAAxpC,KAC1C,KAAA,OAAA,SAAA8pC,GAAA,OAAAP,EAAArgB,MAAAlpB,KAAAmpB,UAAA,CAAA,CA9C2B,GA8C3BlpB,EAEK8pC,uBAAsB,WAAA,IAAAC,EAAAliB,GAAAC,KAAAC,MAA5B,SAAAiiB,EAAAC,GAAA,IAAAxV,EAAAnqB,EAAA4+B,EAAA,OAAAphB,KAAAI,MAAA,SAAAgiB,GAAA,cAAAA,EAAA9hB,KAAA8hB,EAAA7hB,MAAA,KAAA,EAGU,OAFRoM,EAASwV,EAATxV,UACAnqB,EAAY2/B,EAAZ3/B,aACA4+B,EAAQe,EAARf,SAAQgB,EAAA7hB,KAAA,EAMetoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAiBgB,aAAAA,mBACvBkM,GACgBlM,iBAAAA,mBAChBje,eACWie,mBAAmB2gB,GAChC,CACE5sB,OAAQ,WAEX,KAAA,EATa,OAAA4tB,EAAAthB,OAAA,SAWP7oB,KAAK8oB,oBAXEqhB,EAAAphB,OAW2B,KAAA,EAAA,IAAA,MAAA,OAAAohB,EAAAnhB,OAAA,GAAAihB,EAAAjqC,KAC1C,KAAA,OAAA,SAAAoqC,GAAA,OAAAJ,EAAA9gB,MAAAlpB,KAAAmpB,UAAA,CAAA,CArB2B,GAqB3BlpB,EACasoB,gBAAe,WAAA,IAAA+I,EAAAxJ,GAAAC,KAAAC,MAArB,SAAAqiB,EACNzgC,EACA4nB,GAAkB,IAAAC,EAAAtO,EAAA5M,EAAAmb,EAAA,OAAA3J,KAAAI,MAAA,SAAAmiB,GAAA,cAAAA,EAAAjiB,KAAAiiB,EAAAhiB,MAAA,KAAA,EAUf,OARGmJ,EAAMG,KAAKH,MAAK6Y,EAAAjiB,KAAA,EAEdlF,EAAM3B,GAAA,GAAQgQ,GAChBxxB,KAAKo0B,UACPjR,EAAOlZ,QAAOuX,GACT2B,CAAAA,EAAAA,EAAOlZ,QAAO,CACjBonB,cAAa,UAAYrxB,KAAKo0B,WAEjCkW,EAAAhiB,KAAA,EACiBuJ,MAAMjoB,EAAKuZ,GAAO,KAAA,EAA3B,OAAAmnB,EAAAzhB,OACF,SAAA,IAAI/oB,EAAG,CAAEgyB,SADPwY,EAAAvhB,KACsBxS,SAAUqb,KAAKH,MAAQA,KAAM,KAAA,GAe1D,OAf0D6Y,EAAAjiB,KAAA,GAAAiiB,EAAAvY,GAAAuY,EAAA,MAAA,GAEtD/zB,EAAWqb,KAAKH,MAAQA,EAK9BzxB,KAAK0nB,QAAQpnB,MACX,CACEsJ,IAAAA,EACA2M,SAAAA,EACAg0B,UARE7Y,EAAoB,CACxBvY,KAAM,2BACNhQ,QAAO,0CAAAmhC,EAAAvY,IAOLzxB,MAAKgqC,EAAAvY,IAEP,iBACAuY,EAAAzhB,OAAA,SACK,IAAIxoB,EAAIqxB,IAAI,KAAA,GAAA,IAAA,MAAA,OAAA4Y,EAAAthB,OAAA,GAAAqhB,EAAArqC,KAAA,CAAA,CAAA,EAAA,KAEtB,KAAA,OAAA,SAAAwqC,EAAAC,GAAA,OAAAnZ,EAAApI,MAAAlpB,KAAAmpB,UAAA,CAAA,CAhC4B,GAgC5BlpB,EAEa6oB,oBAAmB,WAAA,IAAAqJ,EAAArK,GAAAC,KAAAC,MAAzB,SAAA0iB,EACNne,GAMC,IAAAhP,EAAA8U,EAAAX,EAAAY,EAAAC,EAAAC,EAAAmY,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAhjB,KAAAI,MAAA,SAAA6iB,GAAA,cAAAA,EAAA3iB,KAAA2iB,EAAA1iB,MAAA,KAAA,EAAA,IAEGiE,EAAInsB,QAAO,CAAA4qC,EAAA1iB,KAAA,EAAA,KAAA,CAAA,OAAA0iB,EAAAniB,OAAA,SACN0D,GAAG,KAAA,EAAA,OAAAye,EAAA1iB,KAAA,EAKOiE,EAAIxsB,MAAM+xB,SAASvU,OAAM,KAAA,EAAtCA,EAAIytB,EAAAjiB,KAENsJ,EAAO,KAAI2Y,EAAA3iB,KAAA,EAEbgK,EAAO1J,KAAK+J,MAAMnV,GAAMytB,EAAA1iB,KAAA,GAAA,MAAA,KAAA,GAiBtB,OAjBsB0iB,EAAA3iB,KAAA,GAAA2iB,EAAAjZ,GAAAiZ,EAAA,MAAA,GAOxBhrC,KAAK0nB,QAAQpnB,MACX,CACEiqC,UAPE7Y,EAAoB,CACxBvY,KAAM,6BACNhQ,QAAO,4CAAA6hC,EAAAjZ,IAMLY,WAAUqY,EAAAjZ,GACVa,QAASrV,EACTnW,OAAQmlB,EAAIxsB,MAAM+xB,SAAS1qB,OAC3BwC,IAAK2iB,EAAIxsB,MAAM+xB,SAASloB,IACxB2M,SAAUgW,EAAIxsB,MAAMwW,UAEtB,iBACAy0B,EAAAniB,OAAA,SACK,IAAIxoB,EAAIqxB,IAAI,KAAA,GAAA,GAGhBnF,EAAIxsB,MAAM+xB,SAASe,GAAE,CAAAmY,EAAA1iB,KAAA,GAAA,KAAA,CACD,IACnByK,GADErB,EAAMY,OAAHA,EAAGD,QAAAC,EAAAA,EAAMhyB,OACK,CAAA0qC,EAAA1iB,KAAA,GAAA,KAAA,CASnB,OARFtoB,KAAK0nB,QAAQpnB,MACX,CACEiqC,UAAW7Y,EACXtqB,OAAQmlB,EAAIxsB,MAAM+xB,SAAS1qB,OAC3BwC,IAAK2iB,EAAIxsB,MAAM+xB,SAASloB,IACxB2M,SAAUgW,EAAIxsB,MAAMwW,UAEtB,iBACAy0B,EAAAniB,OAAA,SACK,IAAIxoB,EAAIqxB,IAAI,KAAA,GAejB,OATF1xB,KAAK0nB,QAAQpnB,MACX,CACEiqC,UANE7Y,EAAoB,CACxBvY,KAAM,0BACNhQ,QAAS,wCAKPkpB,KAAAA,EACAjrB,OAAQmlB,EAAIxsB,MAAM+xB,SAAS1qB,OAC3BwC,IAAK2iB,EAAIxsB,MAAM+xB,SAASloB,IACxB2M,SAAUgW,EAAIxsB,MAAMwW,UAEtB,iBACAy0B,EAAAniB,OAAA,SACK,IAAIxoB,EAAIqxB,IAAI,KAAA,GAAAsZ,EAAA1iB,KAAA,GAAA,MAAA,KAAA,GAIK,GADpBoJ,EAAMiZ,OAAHA,EAAGtY,QAAAsY,EAAAA,EAAMrqC,MACZisB,EAAMqe,OAAHA,EAAGvY,QAAAuY,EAAAA,EAAM9Y,UAEdJ,IAAOqB,GAAerB,GAAI,CAAAsZ,EAAA1iB,KAAA,GAAA,KAAA,CAU1B,OATFtoB,KAAK0nB,QAAQpnB,MACX,CACEiqC,UAAW7Y,EACXW,KAAAA,EACAjrB,OAAQmlB,EAAIxsB,MAAM+xB,SAAS1qB,OAC3BwC,IAAK2iB,EAAIxsB,MAAM+xB,SAASloB,IACxB2M,SAAUgW,EAAIxsB,MAAMwW,UAEtB,iBACAy0B,EAAAniB,OAAA,SACK,IAAIxoB,EAAIqxB,IAAI,KAAA,GAAA,IACVnF,EAAG,CAAAye,EAAA1iB,KAAA,GAAA,KAAA,CAAA,OAAA0iB,EAAAniB,OAAA,SACL,IAAI/oB,EAAGysB,IAAI,KAAA,GAehB,OATFvsB,KAAK0nB,QAAQpnB,MACX,CACEiqC,UANE7Y,EAAoB,CACxBvY,KAAM,6BACNhQ,QAAS,2CAKPkpB,KAAAA,EACAjrB,OAAQmlB,EAAIxsB,MAAM+xB,SAAS1qB,OAC3BwC,IAAK2iB,EAAIxsB,MAAM+xB,SAASloB,IACxB2M,SAAUgW,EAAIxsB,MAAMwW,UAEtB,iBACAy0B,EAAAniB,OAAA,SACK,IAAIxoB,EAAIqxB,IAAI,KAAA,GAAA,IAAA,MAAA,OAAAsZ,EAAAhiB,OAAA,GAAA0hB,EAAA1qC,KAAA,CAAA,CAAA,EAAA,KAGxB,KAAA,OAAA,SAAAirC,GAAA,OAAA9Y,EAAAjJ,MAAAlpB,KAAAmpB,UAAA,CAAA,CA1GgC,GA0GhCgL,CAAA,CA7yDiB,GCxNP+W,GAAyB,CACpC,OACA,oBACA,eACA,SACA,aAEA,UCvHI,SAAUC,GAAYC,GAC1B,MAAM,IAAIjgC,OAEO,iBAANigC,EAAiBziB,KAAKC,UAAUwiB,GAAKA,sDAGlD,CCKO,IAAMC,GAAQ,CAAC,QAAS,UAAW,OAAQ,QACrCC,GAAe,CAAC,QAAS,UAAW,QAEjD,SAASC,GACP5yB,GAEA,OAAOe,OAAO8xB,YAAY7yB,EAAIuB,KAAI,SAACtB,GAAC,MAAK,CAACA,EAAG,KAAK,IAGpD,CAEO,IAAM6yB,GAAa3qC,EAAEygB,MAAMgqB,GAAUF,KAI/BK,GAAmB5qC,EAAEygB,MAAMgqB,GAAUD,KAwJ5CK,GAAsB,mBChKfC,GAAyB9qC,EAAEuB,KAAK,CAC3CwpC,MAAO5pB,EAAcA,eACrB6pB,KAAMJ,KCpBKK,GAAwB,CAAC,QAAS,UAAW,QCI7CC,GAAyB,CAAC,MAAO,YAmFjCC,GAAuBnrC,EAAEuB,KAAK,CACzC8W,KAAM8I,EAAcA,eACpB5c,KAAM4c,EAAcA,eACpBiqB,kBAAmBprC,EAAS,QAC5BqrC,eAAgBrrC,EAAS,QACzBsrC,gBAAiBtrC,EAAS,QAC1BurC,qBAAsBvrC,EAAS,QAC/BwrC,gBAAiBxrC,EAAS,QAC1ByrC,kBAAmBzrC,EAAS,QAC5B0rC,oBAAqB1rC,EAAS,QAC9B2rC,oBAAqB3rC,EAAS,QAC9B4rC,YAAa5rC,EAAE2B,MAAM,CAAC3B,EAAEY,OAAQirC,EAAAA,mBAChCC,qBAAsB9rC,EAAEygB,MAAM,CAC5Bjd,IAAK,KACLuoC,SAAU,OAEZC,iBAAkBhsC,EAAE2B,MAAM,CAAC3B,EAAEY,OAAQirC,EAAAA,mBACrCI,0BAA2BjsC,EAAE2B,MAAM,CAAC3B,EAAEY,OAAQirC,EAAAA,mBAC9CK,2BAA4BlsC,EAAE2B,MAAM,CAAC3B,EAAEY,OAAQirC,EAAAA,mBAC/CM,SAAUnsC,EAAE2B,MAAM,CAAC3B,EAAEY,OAAQirC,EAAAA,mBAC7BO,UAAWpsC,EAAE2B,MAAM,CAAC3B,EAAEY,OAAQirC,EAAAA,qBAKnBQ,GAA8BrsC,EAAEuB,KAAK,CAChD+qC,qBAAsBnrB,EAAcA,eACpCorB,SAAUprB,EAAAA,iBClHCqrB,GAAqB,CAChC,SACA,SACA,iBCUWC,GACX,CAAC,OAAQ,QAAS,QCWd,SAAUC,GAAgBtkC,GAC9B,MACiB,iBAARA,GACC,OAARA,GACA,YAAaA,GACU,iBAAhBA,EAAIC,SACX,SAAUD,GACU,iBAAbA,EAAIiQ,IAEf,CAIA,IAAas0B,GAAQ,WAKnB,SAAAA,EACErpB,EACAmD,GAAuBvnB,KANzB0nB,aAAO,EAAA1nB,KACPwnB,UAAI,EAAAxnB,KACJo0B,aAAO,EAMLp0B,KAAKwnB,KAAOpD,EAAOxa,IACnB5J,KAAK0nB,QAAUH,EACfvnB,KAAKo0B,QAAUhQ,EAAOiQ,MACxB,CAAC,IAAAp0B,EAAAwtC,EAAAvtC,UAqSA,OArSAD,EAEDytC,OAAA,WACE,OAAO1tC,KAAKwnB,MACbvnB,EAEK0tC,iBAAgB,WAAA,IAAAC,EAAA9lB,GAAAC,KAAAC,MAAtB,SAAAC,EAAA7I,GAAA,IAAAyuB,EAAAC,EAAAplB,EAAA,OAAAX,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAuCG,OAnCDwlB,EAAiB1uB,EAAjB0uB,kBAaMplB,EAWF,CACFR,SA5BM9I,EAAR8I,SA6BE6lB,SA5BM3uB,EAAR2uB,WACAF,EAAmBzuB,EAAnByuB,uBA+BEnlB,EAAKslB,qBAAuBH,GAG1BC,IACFplB,EAAKulB,mBAAqBH,GAC3B1lB,EAAAE,KAAA,EAEsBtoB,KAAKuoB,gBAAmBvoB,KAAKwnB,KAAoB,eAAA,CACtEjL,OAAQ,OACRtS,QAAS,CACP,eAAgB,oBAElBye,KAAMC,KAAKC,UAAUF,KACrB,KAAA,EANY,OAAAN,EAAAS,OAAA,SAOP7oB,KAAK8oB,oBAPEV,EAAAW,OAO2B,KAAA,EAAA,IAAA,MAAA,OAAAX,EAAAY,OAAA,GAAAf,EAAAjoB,KAC1C,KAAA,OAAA,SAAAipB,GAAA,OAAA2kB,EAAA1kB,MAAAlpB,KAAAmpB,UAAA,CAAA,CAjDqB,GAiDrBlpB,EAEKiuC,mBAAkB,WAAA,IAAAC,EAAArmB,GAAAC,KAAAC,MAAxB,SAAAsB,EAAAnP,GAAA,IAAA+N,EAAAzd,EAAA0O,EAAAi1B,EAAA,OAAArmB,KAAAI,MAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,KAAA,EAIa,OAHXJ,EAAQ/N,EAAR+N,SACAzd,EAAY0P,EAAZ1P,aACA0O,EAAIgB,EAAJhB,KACAi1B,EAAWj0B,EAAXi0B,YAAW7kB,EAAAjB,KAAA,EAOYtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAoB/c,gBAAAA,EAC5B,YAAA,CACE8R,OAAQ,OACRtS,QAAS,CACP,eAAgB,oBAElBye,KAAMC,KAAKC,UAAU,CACnBV,SAAAA,EACA/O,KAAAA,EACAk1B,aAAcD,MAGnB,KAAA,EAba,OAAA7kB,EAAAV,OAAA,SAcP7oB,KAAK8oB,oBAdES,EAAAR,OAc2B,KAAA,EAAA,IAAA,MAAA,OAAAQ,EAAAP,OAAA,GAAAM,EAAAtpB,KAC1C,KAAA,OAAA,SAAAwpB,GAAA,OAAA2kB,EAAAjlB,MAAAlpB,KAAAmpB,UAAA,CAAA,CA1BuB,GA0BvBlpB,EAEKquC,eAAc,WAAA,IAAAC,EAAAzmB,GAAAC,KAAAC,MAApB,SAAA2B,EAAAC,GAAA,IAAA1B,EAAAzd,EAAA,OAAAsd,KAAAI,MAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,KAAA,EAEc,OADZJ,EAAQ0B,EAAR1B,SACAzd,EAAYmf,EAAZnf,aAAYof,EAAAvB,KAAA,EAYWtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAoB/c,gBAAAA,EAC5B,gBAAA,CACE8R,OAAQ,OACRtS,QAAS,CACP,eAAgB,oBAElBye,KAAMC,KAAKC,UAAU,CACnBV,SAAAA,MAGL,KAAA,EAXa,OAAA2B,EAAAhB,OAAA,SAYP7oB,KAAK8oB,oBAZEe,EAAAd,OAY2B,KAAA,EAAA,IAAA,MAAA,OAAAc,EAAAb,OAAA,GAAAW,EAAA3pB,KAC1C,KAAA,OAAA,SAAA8pB,GAAA,OAAAykB,EAAArlB,MAAAlpB,KAAAmpB,UAAA,CAAA,CA3BmB,GA2BnBlpB,EAEKuuC,gBAAe,WAAA,IAAAC,EAAA3mB,GAAAC,KAAAC,MAArB,SAAAiC,EAAAgC,GAAA,IAAA/D,EAAAwmB,EAAAlkC,EAAAsrB,EAAA,OAAA/N,KAAAI,MAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,KAAA,EAIa,OAHXJ,EAAQ+D,EAAR/D,SACAwmB,EAAMziB,EAANyiB,OACAlkC,EAAWyhB,EAAXzhB,YACAsrB,EAAW7J,EAAX6J,YAAW5L,EAAA5B,KAAA,EAOYtoB,KAAKuoB,gBAAmBvoB,KAAKwnB,KAAoB,eAAA,CACtEjL,OAAQ,OACRtS,QAAS,CACP,eAAgB,oBAElBye,KAAMC,KAAKC,UAAU,CACnBV,SAAAA,EACA6lB,SAAU,CACRY,QAASD,EACTE,aAAcpkC,GAEhBnD,QAASyuB,MAEX,KAAA,EAbY,OAAA5L,EAAArB,OAAA,SAcP7oB,KAAK8oB,oBAdEoB,EAAAnB,OAc2B,KAAA,EAAA,IAAA,MAAA,OAAAmB,EAAAlB,OAAA,GAAAiB,EAAAjqB,KAC1C,KAAA,OAAA,SAAAmqB,GAAA,OAAAskB,EAAAvlB,MAAAlpB,KAAAmpB,UAAA,CAAA,CA1BoB,GA0BpBlpB,EAEK4uC,eAAc,WAAA,IAAAC,EAAAhnB,GAAAC,KAAAC,MAApB,SAAAsC,EAAAyC,GAAA,IAAAgiB,EAAA,OAAAhnB,KAAAI,MAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,KAAA,EACe,OAAbymB,EAAahiB,EAAbgiB,cAAaxkB,EAAAjC,KAAA,EAIUtoB,KAAKuoB,gBACvBvoB,KAAKwnB,KAAoBunB,gBAAAA,GAC7B,KAAA,EAFa,OAAAxkB,EAAA1B,OAAA,SAGP7oB,KAAK8oB,oBAHEyB,EAAAxB,OAG2B,KAAA,EAAA,IAAA,MAAA,OAAAwB,EAAAvB,OAAA,GAAAsB,EAAAtqB,KAC1C,KAAA,OAAA,SAAAwqB,GAAA,OAAAskB,EAAA5lB,MAAAlpB,KAAAmpB,UAAA,CAAA,CATmB,GASnBlpB,EAEasoB,gBAAe,WAAA,IAAA+I,EAAAxJ,GAAAC,KAAAC,MAArB,SAAA2C,EACN/gB,EACA4nB,GAAkB,IAAAC,EAAAtO,EAAA5M,EAAAmb,EAAA,OAAA3J,KAAAI,MAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,KAAA,EASjB,OAPKmJ,EAAMG,KAAKH,MACXtO,EAAM3B,GAAA,GAAQgQ,GAChBxxB,KAAKo0B,UACPjR,EAAOlZ,QAAOuX,GACT2B,CAAAA,EAAAA,EAAOlZ,QAAO,CACjBonB,cAAa,UAAYrxB,KAAKo0B,WAEjCxJ,EAAAvC,KAAA,EAAAuC,EAAAtC,KAAA,EAEmBuJ,MAAMjoB,EAAKuZ,GAAO,KAAA,EAA3B,OAAAyH,EAAA/B,OACF,SAAA,IAAI/oB,EAAG,CAAEgyB,SADPlH,EAAA7B,KACsBxS,SAAUqb,KAAKH,MAAQA,KAAM,KAAA,GAe1D,OAf0D7G,EAAAvC,KAAA,GAAAuC,EAAAmH,GAAAnH,EAAA,MAAA,GAEtDrU,EAAWqb,KAAKH,MAAQA,EAK9BzxB,KAAK0nB,QAAQpnB,MACX,CACEsJ,IAAAA,EACA2M,SAAAA,EACAy4B,WAREtd,EAAqB,CACzBvY,KAAM,2BACNhQ,QAAO,2CAAAyhB,EAAAmH,IAOLzxB,MAAKsqB,EAAAmH,IAEP,kBACAnH,EAAA/B,OAAA,SACK,IAAIxoB,EAAIqxB,IAAI,KAAA,GAAA,IAAA,MAAA,OAAA9G,EAAA5B,OAAA,GAAA2B,EAAA3qB,KAAA,CAAA,CAAA,EAAA,KAEtB,KAAA,OAAA,SAAA6qB,EAAAK,GAAA,OAAAoG,EAAApI,MAAAlpB,KAAAmpB,UAAA,CAAA,CAhC4B,GAgC5BlpB,EAEa6oB,oBAAmB,WAAA,IAAAqJ,EAAArK,GAAAC,KAAAC,MAAzB,SAAAgD,EACNuB,GAMC,IAAAhP,EAAA8U,EAAAX,EAAAY,EAAAC,EAAAC,EAAAmY,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAhjB,KAAAI,MAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,KAAA,EAAA,IAEGiE,EAAInsB,QAAO,CAAA6qB,EAAA3C,KAAA,EAAA,KAAA,CAAA,OAAA2C,EAAApC,OAAA,SACN0D,GAAG,KAAA,EAAA,OAAAtB,EAAA3C,KAAA,EAKOiE,EAAIxsB,MAAM+xB,SAASvU,OAAM,KAAA,EAAtCA,EAAI0N,EAAAlC,KAENsJ,EAAO,KAAIpH,EAAA5C,KAAA,EAEbgK,EAAO1J,KAAK+J,MAAMnV,GAAM0N,EAAA3C,KAAA,GAAA,MAAA,KAAA,GAiBtB,OAjBsB2C,EAAA5C,KAAA,GAAA4C,EAAA8G,GAAA9G,EAAA,MAAA,GAOxBjrB,KAAK0nB,QAAQpnB,MACX,CACE0uC,WAPEtd,EAAqB,CACzBvY,KAAM,6BACNhQ,QAAO,6CAAA8hB,EAAA8G,IAMLY,WAAU1H,EAAA8G,GACVa,QAASrV,EACTnW,OAAQmlB,EAAIxsB,MAAM+xB,SAAS1qB,OAC3BwC,IAAK2iB,EAAIxsB,MAAM+xB,SAASloB,IACxB2M,SAAUgW,EAAIxsB,MAAMwW,UAEtB,kBACA0U,EAAApC,OAAA,SACK,IAAIxoB,EAAIqxB,IAAI,KAAA,GAAA,GAGhBnF,EAAIxsB,MAAM+xB,SAASe,GAAE,CAAA5H,EAAA3C,KAAA,GAAA,KAAA,CACD,IACnBklB,GADE9b,EAAMY,OAAHA,EAAGD,QAAAC,EAAAA,EAAMhyB,OACM,CAAA2qB,EAAA3C,KAAA,GAAA,KAAA,CASpB,OARFtoB,KAAK0nB,QAAQpnB,MACX,CACE0uC,WAAYtd,EACZtqB,OAAQmlB,EAAIxsB,MAAM+xB,SAAS1qB,OAC3BwC,IAAK2iB,EAAIxsB,MAAM+xB,SAASloB,IACxB2M,SAAUgW,EAAIxsB,MAAMwW,UAEtB,kBACA0U,EAAApC,OAAA,SACK,IAAIxoB,EAAIqxB,IAAI,KAAA,GAejB,OATF1xB,KAAK0nB,QAAQpnB,MACX,CACE0uC,WANEtd,EAAqB,CACzBvY,KAAM,0BACNhQ,QAAS,yCAKPkpB,KAAAA,EACAjrB,OAAQmlB,EAAIxsB,MAAM+xB,SAAS1qB,OAC3BwC,IAAK2iB,EAAIxsB,MAAM+xB,SAASloB,IACxB2M,SAAUgW,EAAIxsB,MAAMwW,UAEtB,kBACA0U,EAAApC,OAAA,SACK,IAAIxoB,EAAIqxB,IAAI,KAAA,GAAAzG,EAAA3C,KAAA,GAAA,MAAA,KAAA,GAIK,GADpBoJ,EAAMiZ,OAAHA,EAAGtY,QAAAsY,EAAAA,EAAMrqC,MACZisB,EAAMqe,OAAHA,EAAGvY,QAAAuY,EAAAA,EAAM9Y,UAEdJ,IAAO8b,GAAgB9b,GAAI,CAAAzG,EAAA3C,KAAA,GAAA,KAAA,CAU3B,OATFtoB,KAAK0nB,QAAQpnB,MACX,CACE2uC,WAAYvd,EACZW,KAAAA,EACAjrB,OAAQmlB,EAAIxsB,MAAM+xB,SAAS1qB,OAC3BwC,IAAK2iB,EAAIxsB,MAAM+xB,SAASloB,IACxB2M,SAAUgW,EAAIxsB,MAAMwW,UAEtB,kBACA0U,EAAApC,OAAA,SACK,IAAIxoB,EAAIqxB,IAAI,KAAA,GAAA,IACVnF,EAAG,CAAAtB,EAAA3C,KAAA,GAAA,KAAA,CAAA,OAAA2C,EAAApC,OAAA,SACL,IAAI/oB,EAAGysB,IAAI,KAAA,GAehB,OATFvsB,KAAK0nB,QAAQpnB,MACX,CACE0uC,WANEtd,EAAqB,CACzBvY,KAAM,6BACNhQ,QAAS,4CAKPkpB,KAAAA,EACAjrB,OAAQmlB,EAAIxsB,MAAM+xB,SAAS1qB,OAC3BwC,IAAK2iB,EAAIxsB,MAAM+xB,SAASloB,IACxB2M,SAAUgW,EAAIxsB,MAAMwW,UAEtB,kBACA0U,EAAApC,OAAA,SACK,IAAIxoB,EAAIqxB,IAAI,KAAA,GAAA,IAAA,MAAA,OAAAzG,EAAAjC,OAAA,GAAAgC,EAAAhrB,KAAA,CAAA,CAAA,EAAA,KAGxB,KAAA,OAAA,SAAAurB,GAAA,OAAA4G,EAAAjJ,MAAAlpB,KAAAmpB,UAAA,CAAA,CA1GgC,GA0GhCskB,CAAA,CAjTkB,GC/BfyB,GAAQ,IAAIC,IAqDjB,SAAAC,KAAA,OAAAA,GAAAtnB,GAAAC,KAAAC,MA1CM,SAAAC,EAAA7I,GAAA,IAAAgF,EAAAmD,EAAAW,EAAAzd,EAAA4kC,EAAA9iB,EAAA,OAAAxE,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAqBiC,GApBtClE,EAAMhF,EAANgF,OACAmD,EAAMnI,EAANmI,OACAW,EAAQ9I,EAAR8I,YAkBMmnB,EAASH,GAAMI,IAjBrB7kC,EAAY2U,EAAZ3U,gBAmBc4kC,EAAOE,aAAe3d,KAAKH,OAAK,CAAArJ,EAAAE,KAAA,EAAA,KAAA,CAAA,OAAAF,EAAAS,OAAA,SACrC,IAAI/oB,EAAGuvC,IAAO,KAAA,EAAA,OAAAjnB,EAAAE,KAAA,EAGL,IAAImlB,GAASrpB,EAAQmD,GAAQ+mB,eAAe,CAC5DpmB,SAAAA,EACAzd,aAAAA,IACA,KAAA,EAHO,KAAH8hB,EAAGnE,EAAAW,MAKD3oB,QAAO,CAAAgoB,EAAAE,KAAA,EAAA,KAAA,CAAA,OAAAF,EAAAS,OAAA,SACN0D,GAAG,KAAA,EAMT,OAHH2iB,GAAMM,IAAI/kC,EAAY+W,GAAA,CACpB+tB,aAAc3d,KAAKH,MAlDc,KAmD9BlF,EAAIxsB,QACNqoB,EAAAS,OAAA,SAEI0D,GAAG,KAAA,GAAA,IAAA,MAAA,OAAAnE,EAAAY,OAAA,GAAAf,EACX,MAAAiB,MAAAlpB,KAAAmpB,UAAA,CCrCA,SAAAsmB,KAAA,OAAAA,GAAA3nB,GAAAC,KAAAC,MAlBM,SAAAC,EAAA7I,GAAA,IAAAgF,EAAAmD,EAAAwnB,EAAAxiB,EAAA,OAAAxE,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAGQ,OAFblE,EAAMhF,EAANgF,OACAmD,EAAMnI,EAANmI,OACAwnB,EAAa3vB,EAAb2vB,cAAa3mB,EAAAE,KAAA,EAMK,IAAImlB,GAASrpB,EAAQmD,GAAQsnB,eAAe,CAC5DE,cAAAA,IACA,KAAA,EAFO,KAAHxiB,EAAGnE,EAAAW,MAID3oB,QAAO,CAAAgoB,EAAAE,KAAA,EAAA,KAAA,CAAA,OAAAF,EAAAS,OAAA,SACN0D,GAAG,KAAA,EAAA,OAAAnE,EAAAS,OAAA,SAGL0D,GAAG,KAAA,EAAA,IAAA,MAAA,OAAAnE,EAAAY,OAAA,GAAAf,EACX,MAAAiB,MAAAlpB,KAAAmpB,UAAA,CCrBM,IAAMumB,GAAkB,CAC7B,aACA,mBACA,oBASWC,GAAkB,CAC7B,aACA,SACA,eACA,WACA,SACA,QACA,OACA,YACA,UACA,cAKI,SAAUC,GAAgB1mC,GAC9B,OAAOymC,GAAgB9uC,SAASqI,EAClC,CAUM,SAAU2mC,GACd3mC,GAEA,IAAM4mC,EAAa5mC,EACnB,MACsC,iBAA7B4mC,EAAWC,eACY,iBAAvBD,EAAW7rB,SAClB2rB,GAAgBE,EAAW5nB,YACJ,YAAtB4nB,EAAW1oC,QAA8C,cAAtB0oC,EAAW1oC,OAEnD,KA4Ba4oC,GAA0C,CACrD,OACA,SAMWC,GAAwB,CACnC,YACA,QACA,WACA,cAkBWC,GAA6BpvC,EAAEuB,KAAK,CAC/C8tC,SAAUrvC,EAAEe,OACZuuC,SAAUtvC,EAAEe,OACZwuC,QAASvvC,EAAEe,OACXiqC,KAAMhrC,EAAEe,OACRyuC,UAAWxvC,EAAEe,SAIF0uC,GAAiCzvC,EAAEuB,KAAK,CACnDA,KAAMvB,EAAEe,OACR2uC,WAAY1vC,EAAEe,OACd4uC,eAAgB3vC,EAAEe,OAClB6uC,YAAa5vC,EAAEe,OACf8uC,aAAc7vC,EAAEe,OAChB+uC,UAAW9vC,EAAEe,OACbgvC,SAAU/vC,EAAEe,OACZivC,UAAWhwC,EAAEe,OACbkvC,4BAA6BjwC,EAAEe,OAC/BmvC,qBAAsBlwC,EAAEe,OACxBovC,gBAAiBnwC,EAAEe,SAORqvC,GAAwCpwC,EAAEuB,KAAK,CAC1DA,KAAMvB,EAAEe,OACR2uC,WAAY1vC,EAAEe,OACd4uC,eAAgB3vC,EAAEe,OAClB6uC,YAAa5vC,EAAEe,OACf8uC,aAAc7vC,EAAEe,OAChB+uC,UAAW9vC,EAAEe,OACbgvC,SAAU/vC,EAAEe,OACZivC,UAAWhwC,EAAEe,OACbkvC,4BAA6BjwC,EAAEe,OAC/BmvC,qBAAsBlwC,EAAEe,OACxBovC,gBAAiBnwC,EAAEe,OACnBsvC,SAAUrwC,EAAEe,SAODuvC,GAA0BtwC,EAAEuB,KAAK,CAC5CgvC,QAASvwC,EAAEe,SAIAyvC,GAA8BxwC,EAAEuB,KAAK,CAChDuuC,UAAW9vC,EAAEe,OACb0vC,cAAezwC,EAAEe,SC9FlB,SAAA2vC,KAAA,OAAAA,GAAA1pB,GAAAC,KAAAC,MA3DM,SAAAC,EAAA7I,GAAA,IAAAqyB,EAAA5kC,EAAAqb,EAAAwpB,EAAAC,EAAA,OAAA5pB,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAKM,OAJXmpB,EAAmBryB,EAAnBqyB,oBACA5kC,EAAKuS,EAALvS,MACAqb,EAAQ9I,EAAR8I,SACAwpB,EAAOtyB,EAAPsyB,QACAC,EAAWvyB,EAAXuyB,YAAWvpB,EAAAS,OAAA,SAQJ,IAAImO,SAAQ,SAACC,GAClB,IAAIrtB,EAAS6nC,EAAyB5kC,MAAAA,EAAMspB,IAAG,UAAUjO,EAAQ,kBAAkBwpB,EAC/EC,IACF/nC,GAAG,gBAAoB4e,mBAAmBG,KAAKC,UAAU+oB,KAE3D,IAAMC,EAAaC,OAAOpsC,KAAKmE,GAC3BkoC,GAAe,EAEbC,EAA4B,SAA5BA,EAA6B3a,GACjC,GAAIA,EAAM4a,SAAWH,OAAOV,SAASa,QAIb,yBAApB5a,EAAMpsB,KAAK3I,KAAiC,CAC9CyvC,GAAe,EACf,IAAMhC,EAAa1Y,EAAMpsB,KAAK8kC,WAC1BD,GAAsBC,GACxB7Y,EAAQ,IAAIn3B,EAAGgwC,IAEf7Y,EACE,IAAI52B,EACF,IAAI8K,MAAM,uDAIhB0mC,OAAOI,oBAAoB,UAAWF,GACtCH,MAAAA,GAAAA,EAAYM,OACd,GAGFL,OAAOM,iBAAiB,UAAWJ,GAEnC,IAAMK,EAAmBC,aAAY,WAC/BT,GAAcA,EAAWU,SAC3BT,OAAOI,oBAAoB,UAAWF,GACtCQ,cAAcH,GACdI,YAAW,WACJV,GACH7a,EACE,IAAI52B,EAAI,IAAI8K,MAAM,iDAGvB,GAAE,KAEN,GAAE,IACJ,KAAC,KAAA,EAAA,IAAA,MAAA,OAAAid,EAAAY,OAAA,GAAAf,EACH,MAAAiB,MAAAlpB,KAAAmpB,UAAA,CClED,IAAIspB,QAAmC7vC,WAEvB8vC,KAId,OAHKD,KACHA,GAAe,IAAIE,EAAAA,QAEdF,EACT,CCHsBG,SAAAA,GAAW3pB,GAAA,OAAA4pB,GAAA3pB,MAAAlpB,KAAAmpB,UAAA,CAuBhC,SAAA0pB,KAAA,OAAAA,GAAA/qB,GAAAC,KAAAC,MAvBM,SAAAC,EAAA7I,GAAA,IAAA4yB,EAAAc,EAAAL,EAAAM,EAAA,OAAAhrB,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAkBF,OAjBH0pB,EAAM5yB,EAAN4yB,OACAc,EAAQ1zB,EAAR0zB,SAKML,EAAeC,MAEfK,EAASC,EAAAA,aAAa,CAC1BppC,IAAKkpC,KAEAG,GAAG,SAAS,SAACvhB,GAAG,OAAKwhB,QAAQC,IAAI,qBAAsBzhB,MAC9DqhB,EAAOE,GAAG,WAAW,WACnBR,EAAaW,UAAU,yBAA0B,EAAG,CAACpB,GACvD,IACAe,EAAOE,GAAG,OAAO,WACfR,EAAaY,UAAU,yBAA0B,EAAG,CAACrB,GACvD,IAAG5pB,EAAAE,KAAA,EAEGyqB,EAAOO,UAAS,KAAA,EAAA,OAAAlrB,EAAAS,OAAA,SAEfkqB,GAAM,KAAA,EAAA,IAAA,MAAA,OAAA3qB,EAAAY,OAAA,GAAAf,EACd,KAAA4qB,GAAA3pB,MAAAlpB,KAAAmpB,UAAA,CCuED,IAAMoqB,GAAwC,CAAA,EAAG,SAElCC,GAAIvqB,GAAA,OAAAwqB,GAAAvqB,MAAAlpB,KAAAmpB,UAAA,CAAA,SAAAsqB,KAWlB,OAXkBA,GAAA3rB,GAAAC,KAAAC,MAAnB,SAAAsB,EAAoBoqB,GAAW,OAAA3rB,KAAAI,MAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,KAAA,EAAA,OAAAiB,EAAAV,OAAA,SACtB,IAAImO,SAAc,SAACC,GACpBsc,GAAMG,GACRH,GAAMG,GAAKC,KAAK1c,IAIhBsc,GAAMG,GAAO,GACbzc,IAEH,KAAC,KAAA,EAAA,IAAA,MAAA,OAAA1N,EAAAP,OAAA,GAAAM,EACH,MAAAJ,MAAAlpB,KAAAmpB,UAAA,CAED,SAASyqB,GAAOF,GACd,QAAmB9wC,IAAf2wC,GAAMG,GACR,MAAM,IAAIvoC,MAAM,2CAGlB,GAA0B,IAAtBooC,GAAMG,GAAK/kB,OAAf,CAKA,IAAMklB,EAAWN,GAAMG,GAAKI,MAC5B,IAAKD,EACH,MAAM,IAAI1oC,MAAM,2CAElB0oC,GANA,aAFSN,GAAMG,EASjB,CC9HA,IAAA7uB,GAAqDC,QAAQC,IAArDgvB,GAA8BlvB,GAA9BkvB,+BAAgCC,GAAQnvB,GAARmvB,SA+DvC,SAAAC,KAAA,OAAAA,GAAAnsB,GAAAC,KAAAC,MA5DM,SAAAC,EAAA7I,GAAA,IAAA80B,EAAA3sB,EAAA4sB,EAAAhrC,EAAAojB,EAAA6nB,EAAA,OAAArsB,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAEC,GADN4rB,EAAO90B,EAAP80B,QACA3sB,EAAMnI,EAANmI,OAKiB,eAAbysB,GAAyB,CAAA5rB,EAAAE,KAAA,EAAA,KAAA,CAAA,OAAAF,EAAAS,OAAA,UAAA,KAAA,EAAA,GAIxBkrB,GAA8B,CAAA3rB,EAAAE,KAAA,EAAA,KAAA,CAC4B,OAA7Df,EAAO2F,KAAK,GAAI,6CAA6C9E,EAAAS,OAAA,UAAA,KAAA,EAK3DsrB,EAAW,UAEf,IACEA,EAAWE,EAAcC,SAAS,sBAAsBnyC,WAAWoyC,MACpE,CAAC,MAAOj0C,GACPinB,EAAOjnB,MAAM,GAAI,0BACnB,CAE2G,OAArG6I,EAAO,sDAA4D+qC,EAAO,iBAAmBC,EAAQ,IAAA/rB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAGvFuJ,MAAM,yCAA0C,CAChEtV,OAAQ,OACRtS,QAAS,CACP,eAAgB,mBAChBonB,cAAyB0iB,UAAAA,IAE3BrrB,KAAMC,KAAKC,UAAU,CACnB4rB,QAAS,cACTj3B,KAAM,GACN+G,OAAQ,CACN,CACEjiB,KAAM,UACNkb,KAAM,CACJlb,KAAM,SACNkb,KAAMpU,KAIZsrC,SAAS,MAEX,KAAA,GApBO,OAAHloB,EAAGnE,EAAAW,KAAAX,EAAAE,KAAA,GAsBaiE,EAAI8F,OAAM,KAAA,IAA1B+hB,EAAOhsB,EAAAW,MACA8J,IACXtL,EAAOjnB,MACL,CAAEA,MAAO8zC,EAAQ9zC,OACjB,oCAEH8nB,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAA2J,GAAA3J,EAAA,MAAA,GAEDb,EAAOjnB,MAAM,CAAEA,MAAK8nB,EAAA2J,IAAW,oCAAoC,KAAA,GAAA,IAAA,MAAA,OAAA3J,EAAAY,OAAA,GAAAf,EAAA,KAAA,CAAA,CAAA,EAAA,KAEtE,MAAAiB,MAAAlpB,KAAAmpB,UAAA,CCnEM,IAAMurB,GAAyB,CACpC,iBACA,6BACA,mBACA,gCACA,mBACA,oBACA,yBACA,mCACA,sCACA,qDACA,mBACA,+CACA,8BACA,mBACA,gBACA,mBACA,sBACA,mCACA,qBACA,6BACA,0BACA,6BCGF,SAASC,GAAiBv1B,GASzB,IALC8I,EAAQ9I,EAAR8I,SAUA,OATa9I,EAAbw1B,cASqBC,QACnB,SAACC,EAAKhzC,GAAC,IAAAizC,EAAA,OAAAvzB,GAAA,GACFszB,IAAGC,EAAAA,IACLjzC,GAA4BomB,wBAAAA,EAAS0L,QAAQ,IAAK,IAAO9xB,IAAAA,EACvD8xB,QAAQ,IAAK,KACbohB,cAAaD,GAChB,GACF,CAIC,EAEL,CAEO,IC5CHE,GD4CSC,GAAa,CACxBC,WAAYR,GAAkB,CAC5BzsB,SAAU,aACV0sB,cAAe,CAAC,QAAS,UAE3BvgC,OAAQsgC,GAAkB,CACxBzsB,SAAU,SACV0sB,cAAe,CACb,aACA,YACA,iBACA,YAEA,SAEA,QAEA,cAEA,gBAGJxgC,aAAcugC,GAAkB,CAC9BzsB,SAAU,eAIV0sB,cAAe,CAAC,iBAAkB,SAAU,iBAE9CtgC,SAAUqgC,GAAkB,CAC1BzsB,SAAU,WACV0sB,cAAe,CACb,aACA,eACA,eACA,OACA,UACA,iBAGJQ,UAAWT,GAAkB,CAC3BzsB,SAAU,YAIV0sB,cAAe,CAAC,SAAU,iBAE5BzgC,OAAQwgC,GAAkB,CACxBzsB,SAAU,SACV0sB,cAAe,CAAC,iBAAkB,iBAAkB,WAAY,UAElE1gC,MAAOygC,GAAkB,CACvBzsB,SAAU,QACV0sB,cAAe,CAAC,UAAW,SAAU,cAEvCS,UAAWV,GAAkB,CAC3BzsB,SAAU,YACV0sB,cAAe,CAAC,WAAY,SAAU,WAExCU,WAAYX,GAAkB,CAC5BzsB,SAAU,aACV0sB,cAAe,CAAC,YAElBW,QAASZ,GAAkB,CACzBzsB,SAAU,UACV0sB,cAAe,CACb,QACA,cACA,WACA,UAEA,UAEA,YAGJY,SAAUb,GAAkB,CAC1BzsB,SAAU,WACV0sB,cAAe,CAAC,WAAY,SAAU,WAExCa,WAAYd,GAAkB,CAC5BzsB,SAAU,aACV0sB,cAAe,CAAC,WAAY,SAAU,WAExCc,KAAMf,GAAkB,CACtBzsB,SAAU,OACV0sB,cAAe,CAAC,aAAc,wBCpIrBe,YAAe/qC,GAAA,SAAA+qC,IAAA,OAAA/qC,EAAAse,MAAAlpB,KAAAmpB,YAAAnpB,IAAA,CAAA,OAAAiL,GAAA0qC,EAAA/qC,GAAA+qC,CAAA,EAAAzqC,GAAQC,QAE4C,SAEjEyqC,GAAc3sB,GAAA,OAAA4sB,GAAA3sB,MAAAlpB,KAAAmpB,UAAA,CAAA,SAAA0sB,KAoB5B,OApB4BA,GAAA/tB,GAAAC,KAAAC,MAA7B,SAAAC,EAAA7I,GAAA,IAAA4yB,EAAA8D,EAAA,OAAA/tB,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAOqD,GANnD0pB,EAAM5yB,EAAN4yB,OAMM8D,EALE12B,EAAR0zB,UAK8BhuB,QAAQC,IAAI+wB,UAC5B,CAAA1tB,EAAAE,KAAA,EAAA,KAAA,CAAA,MACN,IAAInd,MAAM,4BAA2B,KAAA,EAAA,GAGxC8pC,GAAsB,CAAA7sB,EAAAE,KAAA,EAAA,KAAA,CAAA,OAAAF,EAAAE,KAAA,EACMsqB,GAAY,CACzCZ,OAAAA,EACAc,SAAUgD,IACV,KAAA,EAHFb,GAAsB7sB,EAAAW,KAAA,KAAA,EAAA,OAAAX,EAAAS,OAAA,SAMjBosB,IAAsB,KAAA,EAAA,IAAA,MAAA,OAAA7sB,EAAAY,OAAA,GAAAf,EAC9B,MAAAiB,MAAAlpB,KAAAmpB,UAAA,CAEM,IAAM4sB,GAAsB,eAE7BC,GAAqB,SAACtC,GAAW,OAAQqC,OAAuBrC,CAAG,EAmExE,SAAAuC,KAAA,OAAAA,GAAAnuB,GAAAC,KAAAC,MA5DM,SAAAsB,EAAAnP,GAAA,IAAAu5B,EAAAwC,EAAAC,EAAA5uB,EAAAurB,EAAAL,EAAAhhB,EAAA2kB,EAAAngC,EAAAogC,EAAAC,EAAAC,EAAA,OAAAxuB,KAAAI,MAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,KAAA,EAiBqE,OAhB1EorB,EAAGv5B,EAAHu5B,IACAwC,EAAe/7B,EAAf+7B,gBACAC,EAAgBh8B,EAAhBg8B,iBACA5uB,EAAMpN,EAANoN,OACAurB,EAAQ34B,EAAR24B,SAMML,EAAeC,KAEfjhB,EAAM,IAAIG,KACVwkB,EAAWJ,GAAmBtC,GAC9Bz9B,EAAiB,GAEnBogC,OAA6DzzC,EAAS2mB,EAAAlB,KAAA,EAAAkB,EAAAjB,KAAA,EAE1DstB,GAAe,CAAE5D,OAAQ,eAAgBc,SAAAA,IAAW,KAAA,EAA7D,OAALuD,EAAK9sB,EAAAR,KAAAQ,EAAAjB,KAAA,GAEmB+tB,EAAMG,OAC5BJ,GACA,IAAIxkB,MAAO6kB,UAA+B,IAAnBN,EACvB,QACD,KAAA,GAC4C,MAAvCG,EAAYJ,EALH3sB,EAAAR,MAMC,GAAC,CAAAQ,EAAAjB,KAAA,GAAA,KAAA,CAAA,OAAAiB,EAAAjB,KAAA,GACT+tB,EAAMK,KAAKN,EAAU,CACzBO,OAAO,IAAI/kB,MAAO6kB,UAClB12C,MAAOiB,EAAAA,OACP,KAAA,GAAA,OAAAuoB,EAAAjB,KAAA,GACI+tB,EAAMO,OAAOR,EAA6B,EAAnBD,GAAqB,KAAA,GAAA5sB,EAAAjB,KAAA,GAAA,MAAA,KAAA,GAElDmqB,EAAaW,UAAU,6BAA8B,EAAGn9B,GAAM,KAAA,GAQ9D,OANIsgC,GAAc,IAAI3kB,MAAO6kB,UAAYhlB,EAAIglB,UAE/ChE,EAAaoE,aACX,mCACAN,EACAtgC,GACAsT,EAAAV,OAEKytB,SAAAA,EAAY,EAAIA,EAAY,GAAC,KAAA,GAapC,OAboC/sB,EAAAlB,KAAA,GAAAkB,EAAAwI,GAAAxI,EAAA,MAAA,GAEpCkpB,EAAaW,UAAU,0BAA2B,EAAGn9B,GACrDsR,EAAOjnB,MACL,CACEozC,IAAAA,EACAwC,gBAAAA,EACAC,iBAAAA,EACA71C,MAAKipB,EAAAwI,yBAKTxI,EAAAV,OAAA,SACO,GAAC,KAAA,GAAA,IAAA,MAAA,OAAAU,EAAAP,OAAA,GAAAM,EAAA,KAAA,CAAA,CAAA,EAAA,KAEX,KAAA2sB,GAAA/sB,MAAAlpB,KAAAmpB,UAAA,CAkBA,SAAA2tB,KAAA,OAAAA,GAAAhvB,GAAAC,KAAAC,MAhBM,SAAA2B,EAAAC,GAAA,IAAA8pB,EAAAZ,EAAAuD,EAAAD,EAAA,OAAAruB,KAAAI,MAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,KAAA,EAIqE,OAH1EorB,EAAG9pB,EAAH8pB,IACAZ,EAAQlpB,EAARkpB,SAEIuD,OAA6DzzC,EAASinB,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAG1DstB,GAAe,CAAE5D,OAAQ,eAAgBc,SAAAA,IAAW,KAAA,EAC1B,OADxCuD,EAAKxsB,EAAAd,KACCqtB,EAAWJ,GAAmBtC,GAAI7pB,EAAAvB,KAAA,EAEhB+tB,EAAMO,OAAOR,EAAU,GAAE,KAAA,EAAlC,OAAAvsB,EAAAhB,OAAA,SAER,IAAI/oB,EAFI+pB,EAAAd,OAES,KAAA,GAAA,OAAAc,EAAAxB,KAAA,GAAAwB,EAAAkI,GAAAlI,EAAA,MAAA,GAAAA,EAAAhB,OAEjB,SAAA,IAAIxoB,EAAGwpB,EAAAkI,KAAc,KAAA,GAAA,IAAA,MAAA,OAAAlI,EAAAb,OAAA,GAAAW,EAAA,KAAA,CAAA,CAAA,EAAA,KAE/B,KAAAmtB,GAAA5tB,MAAAlpB,KAAAmpB,UAAA,UClHe4tB,GACdxvB,EACAyvB,EAA0BC,GACuC,IAAA73B,WAAA63B,EAAF,CAAE,EAAAA,EAAAC,EAAA93B,EAA/D+3B,QAAAA,OAAU,IAAHD,EAAG,GAAEA,EAAAE,EAAAh4B,EAAEi4B,sBAAAA,OAAwB,IAAHD,EAAG,IAAIA,EAE5C,GAAID,EAAU,EACZ,MAAM,IAAIhsC,MAAM,wBAElB,OAAA,WAAA,IAAAgP,EAAA2N,GAAAC,KAAAC,MAAO,SAAAC,EAAO/I,GAAG,IAAAo4B,EAAAC,EAAAC,EAAAx/B,EAAA,OAAA+P,KAAAI,MAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,KAAA,EACTgvB,EAAS,GAAEC,EAAAxvB,KAAAC,eAAAuvB,IAAA,IAAAE,EAAA,OAAA1vB,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGA0uB,EAAG93B,GAAI,KAAA,EAAA,OAAAkJ,EAAA2J,GAAA3J,EAAAW,KAAAX,EAAAS,OAAA,SAAA,CAAAjQ,EAAAwP,EAAA2J,KAAA,KAAA,EAWlB,OAXkB3J,EAAAC,KAAA,EAAAD,EAAAsvB,GAAAtvB,EAAA,MAAA,GAEdqvB,EAAYJ,EAAqBM,KAAAC,IAAI5/B,EAAI,EAAM,GACrDuP,EAAOswB,KACL,CACEv3C,MAAK8nB,EAAAsvB,GACLI,QAAS9/B,EAAI,EACbm/B,QAASA,EACTM,UAAWA,GAEb,yDACArvB,EAAAE,KAAA,GACI,IAAI0O,SAAQ,SAACC,GAAO,OAAKub,WAAWvb,EAASwgB,MAAW,KAAA,GAC9DH,EAAO3D,KAAIvrB,EAAAsvB,IAAI,KAAA,GAAA,IAAA,MAAA,OAAAtvB,EAAAY,OAAA,GAAAuuB,EAAA,KAAA,CAAA,CAAA,EAAA,IAAA,IAfVv/B,EAAI,EAAC,KAAA,EAAA,KAAEA,EAAIm/B,GAAO,CAAA5tB,EAAAjB,KAAA,GAAA,KAAA,CAAA,OAAAiB,EAAAwuB,cAAAR,IAAA,KAAA,GAAA,KAAA,EAAA,KAAAC,EAAAjuB,EAAAwI,IAAA,CAAAxI,EAAAjB,KAAA,EAAA,KAAA,CAAA,OAAAiB,EAAAV,OAAA2uB,SAAAA,EAAA5+B,GAAA,KAAA,EAAEZ,IAAGuR,EAAAjB,KAAA,EAAA,MAAA,KAAA,GAAA,MAmB1B,IAAInd,MAAMmsC,EAAO1oB,KAAK,OAAM,KAAA,GAAA,IAAA,MAAA,OAAArF,EAAAP,OAAA,GAAAf,EACnC,KAAA,OAAA,SAAAgB,GAAA,OAAA9O,EAAA+O,MAAAlpB,KAAAmpB,UAAA,CAAA,CAtBD,EAuBF,UC5BgB6uB,GAAwB54B,GAOtC,OALMA,EAANpC,YADUoC,EAAV64B,UAOF,UA2BgBC,GACdt3C,EACAoc,EACAm7B,GAGA,IAAMC,EAAqB,CACzBC,YAAY,EACZC,UAAW,EACXL,WAAY,EACZM,kBAAmB,IAIf1hB,EAAS,IAAI2hB,SACjB,CACEC,UAASA,SAACpzC,EAAMqzC,GAGD,QAATrzC,GAAkBqzC,EAAa,QAAKP,EACjCC,EAAMC,WAITD,EAAME,aAHNF,EAAMC,YAAa,EACnBD,EAAME,UAAY,GAIXF,EAAMC,YAEfD,EAAME,WAET,EAEDK,OAAM,SAACp7B,GAED66B,EAAMC,aAGRD,EAAMG,mBAAqBh7B,EAAKqW,QAAQ,QAAS,IAAI2gB,OAAS,IAEjE,EAEDqE,WAAU,WAEJR,EAAMC,aACRD,EAAME,YAGkB,IAApBF,EAAME,YACRF,EAAMC,YAAa,EAGfD,EAAMG,kBAAkBhE,QAC1BsE,EAAqBlF,KACdqE,KAAAA,GAAyB,CAC5BC,WAAYG,EAAMH,WAClBj7B,OAAAA,IACKo7B,KAAAA,EAAMG,kBAAkBhE,OAAM,MAKzC6D,EAAMH,aACNG,EAAMG,kBAAoB,IAG/B,EAEDO,QAAO,SAACpnB,GAENmnB,EAAqBE,QAAQrnB,EAC/B,GAEF,CAAEsnB,gBAAgB,IAIdH,EAAuB,IAAII,YAAU,CACzCC,YAAY,EAEZC,mBAAUC,EAAeC,EAAWC,GAClC,IACEziB,EAAO0iB,MAAMH,EAAMj3C,YACnBm3C,GACD,CAAC,MAAOh5C,GACHA,aAAiB6K,MACnBmuC,EAASh5C,GAETg5C,EACE,IAAInuC,MACe,iBAAV7K,EACHA,EACA,qDAIZ,CACD,EAEDk5C,MAAK,SAACF,GACJ,IAEEziB,EAAO4iB,MAGHrB,EAAMC,YAAcD,EAAMG,kBAAkBhE,QAC9Cv0C,KAAK2zC,KACEqE,KAAAA,GAAyB,CAC5BC,WAAYG,EAAMH,WAClBj7B,OAAAA,IACKo7B,KAAAA,EAAMG,kBAAkBhE,OAAM,MAIzC+E,GACD,CAAC,MAAOh5C,GACHA,aAAiB6K,MACnBmuC,EAASh5C,GAETg5C,EACE,IAAInuC,MACe,iBAAV7K,EACHA,EACA,iDAIZ,CACF,IAQF,OAJAM,EAAMqyC,GAAG,SAAS,SAAC3yC,GAAK,OAAKu4C,EAAqBE,QAAQz4C,MAC1Du4C,EAAqB5F,GAAG,SAAS,SAAC3yC,GAAK,OAAKM,EAAMm4C,QAAQz4C,MAGnDM,EAAM84C,KAAKb,EACpB,CC7IgB,SAAAc,GACd/4C,EACAg5C,GAGA,IAAMxB,EAAqB,CACzBniC,KAAM,GACN4jC,WAAY,IAIRhjB,EAAS,IAAI2hB,SACjB,CACEC,UAAS,SAACpzC,GACR+yC,EAAMniC,KAAK09B,KAAKtuC,EACjB,EAEDszC,OAAM,SAACp7B,GACL,IAAMu8B,EAAa1B,EAAMniC,KAAKmiC,EAAMniC,KAAK0Y,OAAS,GAE9CmrB,IAAeF,EACjBf,EAAqBlF,KAAI,GAAI16B,GAAesE,QAhD9C,OAiDWu8B,GACT1B,EAAMyB,WAAWlG,KAAKp2B,EAEzB,EAEDq7B,WAAU,SAACvzC,GACT,IAAM00C,EAAU3B,EAAMniC,KAAK69B,MAC3B,GAAIzuC,IAAS00C,EACX,MAAM,IAAI5uC,MAAM,qBAEhB,GA5DH,OA4DO4uC,EAA2B,CAC7B,IAAMC,EAAMpxB,EAASA,UAAC,CAACwvB,EAAMyB,aAC7BhB,EAAqBlF,KAAKqG,GAC1B5B,EAAMyB,WAAa,EACrB,CAEH,EAEDf,QAAO,SAACpnB,GAENmnB,EAAqBE,QAAQrnB,EAC/B,GAEF,CAAEsnB,gBAAgB,IAIdH,EAAuB,IAAII,YAAU,CACzCC,YAAY,EAEZC,mBAAUC,EAAeC,EAAWC,GAClC,IACEziB,EAAO0iB,MAAMH,EAAMj3C,YACnBm3C,GACD,CAAC,MAAOh5C,GACHA,aAAiB6K,MACnBmuC,EAASh5C,GAETg5C,EACE,IAAInuC,MACe,iBAAV7K,EACHA,EACA,qDAIZ,CACD,EAEDk5C,MAAK,SAACF,GACJ,IAEEziB,EAAO4iB,MAEPH,GACD,CAAC,MAAOh5C,GACHA,aAAiB6K,MACnBmuC,EAASh5C,GAETg5C,EACE,IAAInuC,MACe,iBAAV7K,EACHA,EACA,iDAIZ,CACF,IAQF,OAJAM,EAAMqyC,GAAG,SAAS,SAAC3yC,GAAK,OAAKu4C,EAAqBE,QAAQz4C,MAC1Du4C,EAAqB5F,GAAG,SAAS,SAAC3yC,GAAK,OAAKM,EAAMm4C,QAAQz4C,MAGnDM,EAAM84C,KAAKb,EACpB,CCvHA,IAAMoB,GAAoBn5C,EAAEuB,KAAK,CAC/B,eAAgBvB,EAAEe,OAClB,iBAAkBf,EAAEe,SAWTq4C,GAAkD,CAC7D,kBAAmB,WACnB,4EACE,gBAKEC,GAAwB,CAC5B,kBACA,qBACA,gCACA,4EACA,0EACA,oEACA,4BAaIC,GAAuC,CAC3C,kBAAmB,CACjBC,QAAS,OACTT,SAAU,OACVU,YAAa,YAEf,gCAAiC,CAC/BD,QAAS,OACTT,SAAU,gBACVU,YAAa,YAEf,4EAA6E,CAC3ED,QAAS,OACTT,SAAU,gBACVU,YAAa,YAEf,oEAAqE,CACnED,QAAS,OACTT,SAAU,KACVU,YAAa,OAEf,2BAA4B,CAC1BD,QAAS,OACTT,SAAU,KACVU,YAAa,QAaJC,GAAc,WACzB,SAAAA,EACW3wC,EACA69B,GAGRznC,KAJQ4J,SAAA,EAAA5J,KACAynC,aAAA,EADAznC,KAAG4J,IAAHA,EACA5J,KAAOynC,QAAPA,CAIR,CAAC,IAAAxnC,EAAAs6C,EAAAr6C,UAqQH,OArQGD,EAEJu6C,qBAAA,WACE,MAAO,CACL,wBAAyBx6C,KAAKynC,QAAQgT,UAAY,OAAS,SAC3D,wBAdwB,IAcuBt4C,WAEnD,EAEAlC,EACMy6C,WAAU,WAAA,IAAAC,EAAA7yB,GAAAC,KAAAC,MAAhB,SAAAC,EACE2yB,EACA/gC,GAAkC,IAAAiY,EAAA,OAAA/J,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EAEXtoB,KAAK66C,UAAUD,EAAY/gC,GAAY,KAAA,EAAhD,KAARiY,EAAQ1J,EAAAW,MACD3oB,QAAO,CAAAgoB,EAAAE,KAAA,EAAA,KAAA,CAAA,OAAAF,EAAAS,OAAA,SACXiJ,GAAQ,KAAA,EAAA,OAAA1J,EAAAS,OAGV,SAAA7oB,KAAK86C,gBAAgBhpB,EAAS/xB,QAAM,KAAA,EAAA,IAAA,MAAA,OAAAqoB,EAAAY,OAAA,GAAAf,EAAAjoB,KAC5C,KAAA,OAAA,SAAAipB,EAAAO,GAAA,OAAAmxB,EAAAzxB,MAAAlpB,KAAAmpB,UAAA,EAVe,GAYhBlpB,EACM86C,WAAU,WAAA,IAAAC,EAAAlzB,GAAAC,KAAAC,MAAhB,SAAAsB,EACE2xB,EACAphC,GAAkC,IAAAiY,EAAAopB,EAAA92B,EAAAk2B,EAAAV,EAAA,OAAA7xB,KAAAI,MAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,KAAA,EAAA,OAAAiB,EAAAjB,KAAA,EAEXyuB,GACrB/2C,KAAKynC,QAAQlgB,QACb,SAAAnI,GAAA,IAIE67B,EAAU77B,EAAV67B,WAAU,OAOVppB,MAVGzS,EAAHxV,IAUsB,SAAA,CACpB2S,OAAQ,MACRtS,QAAOuX,GAAA,CACL,eAXOpC,EAAXvF,aADiBuF,EAAjB+7B,mBAeEzyB,KAAM0yB,EAAAA,SAASC,MAAMJ,GACrBK,OAAQ,WAEZ,CACEnE,QAAS,EACTE,sBAAuB,KAxBJN,CA0BrB,CACAntC,IAAK5J,KAAK4J,IACVuxC,kBAAmBn7C,KAAKw6C,uBACxB3gC,YAAAA,EACAohC,WAAAA,IACA,KAAA,EA/BY,IAARnpB,EAAQvI,EAAAR,MAiCAL,KAAI,CAAAa,EAAAjB,KAAA,EAAA,KAAA,CAAA,MACV,IAAInd,MAAM,yBAAwB,KAAA,EAKG,GAFvC+vC,EC7JDE,EAAQA,SAACG,QD6JkCzpB,EAASpJ,QAEnDtE,EAASg2B,GAAkBvgC,IAEvB,CAAA0P,EAAAjB,KAAA,GAAA,KAAA,CACasxB,EAAax1B,EAAbw1B,SAAQrwB,EAAAwI,GAArBuoB,EAA0Bl2B,EAA1Bk2B,YACW/wB,EAAAjB,KACZ,aADYiB,EAAAwI,GACFxI,GAIV,QAJUA,EAAAwI,GAIL,GAAA,GAAA,MAAA,KAAA,GAH2C,OAAAxI,EAAAV,OAC5CqvB,SAAAA,GAAgBgD,EADRhB,GAAwBrgC,GACQ+/B,IAAS,KAAA,GAAA,OAAArwB,EAAAV,OAAA,SAGjD8wB,GAAqBuB,EAAgBtB,IAAS,KAAA,GAGrDzO,GAAYmP,GAAa,KAAA,GAAA,OAAA/wB,EAAAV,OAAA,SAIxBqyB,GAAc,KAAA,GAAA,IAAA,MAAA,OAAA3xB,EAAAP,OAAA,GAAAM,EAAAtpB,KACtB,KAAA,OAAA,SAAA8pB,EAAAK,GAAA,OAAA6wB,EAAA9xB,MAAAlpB,KAAAmpB,UAAA,EA7De,GA+DhBlpB,EACc46C,UAAS,WAAA,IAAAW,EAAA1zB,GAAAC,KAAAC,MAAf,SAAA2B,EACNixB,EACA/gC,GAAkC,IAAA4hC,EAAAC,EAAAC,EAAA7pB,EAAA8pB,EAAAC,EAAAl9B,EAAA,OAAAoJ,KAAAI,MAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,KAAA,EAM0B,OADtDqzB,EACmCF,OADxBA,EACe,OADfC,EACftB,GAAkBvgC,SAAY,EAA9B6hC,EAAgCrB,SAAOoB,EAzGrB,OAyGwC5xB,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAGnCyuB,GACrB/2C,KAAKynC,QAAQlgB,QACb,SAAApN,GAAA,IAKEygC,EAAUzgC,EAAVygC,WAAU,OAQV/oB,MAZG1X,EAAHvQ,IAYY,SAVDuQ,EAAXwhC,YAUoC,CAClCp/B,OAAQ,MACRtS,QAAOuX,GAAA,CACLs6B,OAAQ,mBACR,eAbO3hC,EAAXN,aAFiBM,EAAjBghC,mBAkBEzyB,KAAMkyB,MAEV,CACEzD,QAAS,EACTE,sBAAuB,KA1BJN,CA4BrB,CACAntC,IAAK5J,KAAK4J,IACVuxC,kBAAmBn7C,KAAKw6C,uBACxBmB,YAAAA,EACA9hC,YAAAA,EACA+gC,WAAAA,IACA,KAAA,EAlCY,IAAR9oB,EAAQjI,EAAAd,MAoCA8J,GAAE,CAAAhJ,EAAAvB,KAAA,EAAA,KAAA,CAAA,OAAAuB,EAAAhB,OAAA,SACP,IAAIxoB,EAAI,IAAI8K,MAA4B2mB,sBAAAA,EAAS1qB,UAAU,KAAA,EAAA,OAAAyiB,EAAAvB,KAAA,EAGjDwJ,EAASO,OAAM,KAAA,EACmB,GAA/CupB,EAAiB3B,GAAkBriB,OAD/B/N,EAAAd,OAENgzB,EAAAA,OAAOH,GAAe,CAAA/xB,EAAAvB,KAAA,GAAA,KAAA,CAC8C,OAAhEuzB,EAAYG,EAASC,uBAAuBL,EAAeM,MAAKryB,EAAAhB,OAAA,SAC/D,IAAIxoB,EAAI,IAAI8K,MAAK,4BAA6B0wC,KAAa,KAAA,GAAA,OAAAhyB,EAAAhB,OAG7D,SAAA,IAAI/oB,EAAG87C,EAAeO,QAAM,KAAA,GAKsB,OALtBtyB,EAAAxB,KAAA,GAAAwB,EAAAkI,GAAAlI,EAAA,MAAA,GAEnC7pB,KAAKynC,QAAQlgB,OAAOjnB,MAAM,CAAEA,MAAKupB,EAAAkI,IAAS,+BAEpCpT,EACJkL,EAAAkI,cAAe5mB,MAAQ0e,EAAAkI,GAAI5oB,QAAU,mBAAkB0gB,EAAAhB,OAAA,SAElD,IAAIxoB,EAAI,IAAI8K,MAAK,2BAA4BwT,KAAgB,KAAA,GAAA,IAAA,MAAA,OAAAkL,EAAAb,OAAA,GAAAW,EAAA3pB,KAAA,CAAA,CAAA,EAAA,KAEvE,KAAA,OAAA,SAAAwqB,EAAAK,GAAA,OAAA2wB,EAAAtyB,MAAAlpB,KAAAmpB,UAAA,EAnEsB,GAqEvBlpB,EACQ66C,gBAAA,SACNhpB,GAAsB,IAAAsqB,EAIhBjE,EACmD,OADvCiE,EAChBhC,GAHkBtoB,EAAS,uBAG4B,EAAvDsqB,EAAyDxC,SAC3D,OAAIzB,EACKn4C,KAAKq8C,yBAAyBvqB,EAAUqmB,GAG1Cn4C,KAAKs8C,uBAAuBxqB,EACrC,EAEA7xB,EACQo8C,yBAAA,SACNvqB,EACAyqB,GAEA,IAEMC,EAASpB,EAAAA,SAASriC,KAFX+Y,EAAS,mBAMtB,OAAO,IAAIkF,SAAsC,SAACC,GAChD,IAAMwlB,EAA6B,GAC/BC,EAAqB,GACrBrE,GAAa,EACbJ,EAAa,EACbK,EAAY,EAEVzhB,EAAS,IAAI2hB,SACjB,CACEC,UAASA,SAACpzC,EAAMqzC,GAID,QAATrzC,GAAkBqzC,EAAa,QAAK6D,GACtClE,GAAa,EACbJ,IACAyE,EAAqB,GACrBpE,EAAY,GACHD,GAGTC,GAEH,EACDK,OAAM,SAACp7B,GAED86B,IACFqE,GAAsBn/B,EAAKg3B,OAAS,IAEvC,EACDqE,WAAU,WAEJP,GAGgB,KAFlBC,IAGED,GAAa,EACTqE,EAAmBnI,QACrBkI,EAAY9I,KAAK,CACfsE,WAAYA,EACZ5wC,QAASq1C,EAAmBnI,SAGhCmI,EAAqB,GAG1B,EACD5D,QAAO,SAACpnB,GACN,OAAOuF,EAAQ,IAAI52B,EAAIqxB,GACzB,GAEF,CAAEsnB,gBAAgB,IAGpBwD,EAAOvJ,GAAG,QAAQ,SAACmG,GACjBviB,EAAO0iB,MAAMH,EAAMj3C,WACrB,IAEAq6C,EAAOvJ,GAAG,OAAO,WAEf,OADApc,EAAO4iB,MACAxiB,EAAQ,IAAIn3B,EAAG28C,GACxB,IAEAD,EAAOvJ,GAAG,SAAS,SAACvhB,GAClB,OAAOuF,EAAQ,IAAI52B,EAAIqxB,GACzB,GACF,GACF,EAEAzxB,EACQq8C,uBAAA,SACNxqB,GAKA,OAAOkF,QAAQC,QACb,IAAIn3B,EAAG,CAAC,CAAEm4C,WAAY,EAAG5wC,QAJXyqB,EAAS,kBAImByiB,YAE7CgG,CAAA,CA5QwB,GEhD1B,SAAAoC,KAAA,OAAAA,GAAA70B,GAAAC,KAAAC,MAhDM,SAAAC,EAAA7I,GAAA,IAAAjW,EAAAoe,EAAAitB,EAAA3vB,EAAAkvB,EAAA6I,EAAArwB,EAAA6nB,EAAA,OAAArsB,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EASkE,GARvEnf,EAAOiW,EAAPjW,QACAoe,EAAMnI,EAANmI,OACAitB,EAAOp1B,EAAPo1B,QAAO3vB,EAOLC,QAAQC,IAD8B63B,EAA+B/3B,EAA/B+3B,iCAAhC7I,EAA8BlvB,EAA9BkvB,iCAGgC6I,EAA+B,CAAAx0B,EAAAE,KAAA,EAAA,KAAA,CAInE,OAHFf,EAAO2F,KACL,GACA,gFACA9E,EAAAS,OAAA,UAAA,KAAA,EAAA,OAAAT,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAKgBuJ,MAAM,yCAA0C,CAChEtV,OAAQ,OACRtS,QAAS,CACP,eAAgB,mBAChBonB,cAAyB0iB,UAAAA,GAE3BrrB,KAAMC,KAAKC,UAAU,CACnB4rB,QAASA,MAAAA,EAAAA,EAAWoI,EACpBr/B,KAAMpU,MAER,KAAA,EAVO,OAAHojB,EAAGnE,EAAAW,KAAAX,EAAAE,KAAA,GAYaiE,EAAI8F,OAAM,KAAA,IAA1B+hB,EAAOhsB,EAAAW,MACA8J,IACXtL,EAAOjnB,MACL,CAAEA,MAAO8zC,EAAQ9zC,OACjB,+DAIJ8nB,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAA2J,GAAA3J,EAAA,MAAA,GAEAb,EAAOjnB,MACL,CAAEA,MAAK8nB,EAAA2J,IACP,+DACA,KAAA,GAAA,IAAA,MAAA,OAAA3J,EAAAY,OAAA,GAAAf,EAAA,KAAA,CAAA,CAAA,EAAA,KAEL,KAAA00B,GAAAzzB,MAAAlpB,KAAAmpB,UAAA,CCCA,SAAA0zB,KAAA,OAAAA,GAAA/0B,GAAAC,KAAAC,MAtCM,SAAAsB,EACLwzB,EACAC,EAA8C39B,GAAA,IAAA49B,EAAAC,EAAAp+B,EAAAhW,EAkB/Bq0C,EAAMC,EAAA,OAAAp1B,KAAAI,MAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,KAAA,EAYrB,OAZqB60B,aAQpB,OARoBA,EAAAr1B,GAAAC,KAAAC,MAArB,SAAAC,IAAA,IAAAm1B,EAAA,OAAAr1B,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,KAIU80B,EAAOv0C,EAAMw0C,SAAO,CAAAj1B,EAAAE,KAAA,EAAA,KAAA,CAAA,OAAAF,EAAAE,KAAA,EACLy0B,EAASK,EAAKE,KAAMF,EAAKG,OAAM,KAAA,EACpD1+B,EAAQu+B,EAAKG,OADDn1B,EAAAW,KACiBX,EAAAE,KAAA,EAAA,MAAA,KAAA,EAAA,IAAA,MAAA,OAAAF,EAAAY,OAAA,GAAAf,EAEhC,MAAAiB,MAAAlpB,KAAAmpB,UAAA,EARc+zB,aAAM,OAAAC,EAAAj0B,MAAAlpB,KAAAmpB,UAAA,EAjBnB8zB,OAAW,KAiBQD,EAAA59B,EAjBnB69B,aAAc,EAACD,EAEXn+B,EAAe,IAAI/F,MAAMgkC,EAAMnuB,QAI/B9lB,EAAQi0C,EAAM5iC,KAAI,SAACojC,EAAMC,GAAK,MAAM,CAAED,KAAAA,EAAMC,MAAAA,EAAO,IAuBzDh0B,EAAAjB,KAAA,EACM0O,QAAQwmB,IACZ1kC,MAAMC,KAAK,CAAE4V,OAAQgpB,KAAKp2C,IAAI07C,EAAaH,EAAMnuB,UAAW,WAAA,OAAMuuB,GAAQ,KAC3E,KAAA,EAAA,OAAA3zB,EAAAV,OAAA,SAEMhK,GAAO,KAAA,EAAA,IAAA,MAAA,OAAA0K,EAAAP,OAAA,GAAAM,EACf,KAAAuzB,GAAA3zB,MAAAlpB,KAAAmpB,UAAA,CCnDD,IAAas0B,GAAiB,WAAA,SAAAA,IAAA,CA2B3B,OA3B2BA,EAGrBC,eAAP,SAAsBhK,GACpB,IAAMiK,EAAc39C,KAAK49C,MAAMlK,GAE/B,IAAKiK,EAAa,CAChB,IAAM59C,EAAQ+kB,QAAQC,IAAI2uB,GAC1B,QAAc9wC,IAAV7C,EACF,MAAM,IAAIoL,MAASuoC,8BAIrB,OAFA1zC,KAAK49C,MAAMlK,GAAO3zC,EAEXA,CACT,CAEA,OAAO49C,GACRF,EAEMI,uBAAP,SAA8BnK,GAC5B,IAAK1zC,KAAK49C,MAAMlK,GAAM,CACpB,IAAM3zC,EAAQ+kB,QAAQC,IAAI2uB,GACtB3zC,IACFC,KAAK49C,MAAMlK,GAAO3zC,EAEtB,CACA,OAAOC,KAAK49C,MAAMlK,IACnB+J,CAAA,CA3B2B,GCAxB,SAAUK,GAAcx9C,GAC5B,OAAIA,aAAiB6K,MACZ7K,EAAM6I,QACa,iBAAV7I,EACTA,EAGFqoB,KAAKC,UAAUtoB,EACxB,CDRam9C,GACIG,MAAgC,CAAE,EEGnD,IAAIG,IAAO,ECFL,SAAUC,GAAIC,GAClB,OAAOC,EAAOC,WAAW,OAAOC,OAAOH,GAAKI,OAAO,MACrD,CAEA,SAASC,GAAU5K,EAAa6K,QAAI,IAAJA,IAAAA,EAAO,IACrC,IAAQC,EAAmC15B,QAAQC,IAA3Cy5B,+BACR,OAAON,EACJC,WAAW,UACXC,OAAOI,EAAiC9K,GACxC2K,OAAO,UACPI,UAAU,EAAGF,EAClB,CCkBA,SAASG,GAAuBvlC,GAC9B,OAAOA,GAAQ,OAAUA,GAAQ,KACnC,CAcM,SAAUwlC,GAAQphC,GACtB,OAAOA,EACJqhC,UAAU,QACVhrB,QAAQ,mBAAoB,IAC5BA,QAAQ,qBAAsB,SAC9BohB,cACAT,OACA3gB,QAAQ,OAAQ,KAChBA,QAAQ,SAAU,KAClBA,QAAQ,OAAQ,IACrB,CCnDairB,IAAAA,YAAiCj0C,GAAA,SAAAi0C,IAAA,OAAAj0C,EAAAse,MAAAlpB,KAAAmpB,YAAAnpB,IAAA,CAAA,OAAAiL,GAAA4zC,EAAAj0C,GAAAi0C,CAAA,EAAA3zC,GAAQC,QAChD2zC,YAAgBC,GAAA,SAAAD,IAAA,OAAAC,EAAA71B,MAAAlpB,KAAAmpB,YAAAnpB,IAAA,CAAA,OAAAiL,GAAA6zC,EAAAC,GAAAD,CAAA,EAAA5zC,GAAQC,QAyCR6zC,SAAAA,GAAc/1B,GAAA,OAAAg2B,GAAA/1B,MAAAlpB,KAAAmpB,UAAA,CAwCpC,SAAA81B,KAHC,OAGDA,GAAAn3B,GAAAC,KAAAC,MAxCO,SAAAC,EAA8B+xB,GAAW,IAAAkF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1oB,EAAA2oB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA/3B,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAG1C42B,OAAgCt8C,EAChCu8C,EAAqB,EAACC,EAAA,EAAAC,EACV,CAAC,IAAK,IAAK,MAAK,KAAA,EAAA,KAAAD,EAAAC,EAAA1wB,QAAA,CAAAvG,EAAAE,KAAA,GAAA,KAAA,CAArBg3B,EAACD,EAAAD,GACJG,EAAuB,GAAEn3B,EAAAC,KAAA,EAIvBwO,EAASnE,EAAKA,MAACsnB,EAAK,CAAEkF,UAAWI,EAAGS,GAAI,EAAGC,gBAAgB,IAAOR,GAAA,EAAAC,GAAA,EAAAr3B,EAAAC,KAAA,GAAAs3B,EAAAM,GAC7CppB,GAAM,KAAA,GAAA,OAAAzO,EAAAE,KAAA,GAAAq3B,EAAAr3B,OAAA,KAAA,GAAA,KAAAk3B,IAAAI,EAAAx3B,EAAAW,MAAA0O,MAAA,CAAArP,EAAAE,KAAA,GAAA,KAAA,CACV,GAArBi3B,EAAQ5L,KADaiM,EAAA7/C,OAEE,IAAnBw/C,EAAQ5wB,OAAY,CAAAvG,EAAAE,KAAA,GAAA,KAAA,CAAA,OAAAF,EAAAS,OAAA,QAAA,IAAA,KAAA,GAAA22B,GAAA,EAAAp3B,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAA2J,GAAA3J,EAAA,MAAA,IAAAq3B,GAAA,EAAAC,EAAAt3B,EAAA2J,GAAA,KAAA,GAAA,GAAA3J,EAAAC,KAAA,GAAAD,EAAAC,KAAA,IAAAm3B,GAAA,MAAAG,EAAA,OAAA,CAAAv3B,EAAAE,KAAA,GAAA,KAAA,CAAA,OAAAF,EAAAE,KAAA,GAAAq3B,EAAA,SAAA,KAAA,GAAA,GAAAv3B,EAAAC,KAAA,IAAAo3B,EAAA,CAAAr3B,EAAAE,KAAA,GAAA,KAAA,CAAA,MAAAo3B,EAAA,KAAA,GAAA,OAAAt3B,EAAA6P,OAAA,IAAA,KAAA,GAAA,OAAA7P,EAAA6P,OAAA,IAAA,KAAA,GAAA7P,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAA,OAAAF,EAAAC,KAAA,GAAAD,EAAAsvB,GAAAtvB,EAAA,MAAA,GAAAA,EAAAS,OAAA,WAAA,IAAA,KAAA,GAU5B,GADOg3B,EAA6BN,EAAO,GAAvBO,EAAgBP,EACpC,GACiB,CAAAn3B,EAAAE,KAAA,GAAA,KAAA,CAAA,OAAAF,EAAAS,OAAA,WAAA,IAAA,KAAA,GAIXg3B,EAAYlxB,QAAUkxB,EAAYlxB,SAAWmxB,EAAanxB,QAC1DkxB,EAAYlxB,OAASwwB,IACvBA,EAAqBU,EAAYlxB,OACjCuwB,EAAYI,GAEf,KAAA,GAAAF,IAAAh3B,EAAAE,KAAA,EAAA,MAAA,KAAA,GAAA,OAAAF,EAAAS,OAAA,SAGIq2B,GAAS,KAAA,GAAA,IAAA,MAAA,OAAA92B,EAAAY,OAAA,GAAAf,EAAA,KAAA,CAAA,CAAA,EAAA,IAAA,CAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,CAAA,GAAA,KACjB,MAAAiB,MAAAlpB,KAAAmpB,UAAA,CAmCA,SAAA+2B,KAAA,OAAAA,GAAAp4B,GAAAC,KAAAC,MA/BM,SAAAsB,EAAoC62B,GAAgB,IAAAjB,EAAAK,EAAA1oB,EAAAupB,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAz4B,KAAAI,MAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,KAAA,EAAA,OAAAiB,EAAAjB,KAAA,EACjC02B,GAAemB,GAAS,KAAA,EAA1CjB,EAAS31B,EAAAR,KACTw2B,EAAqB,GAAEh2B,EAAAlB,KAAA,EAGrBwO,EAASnE,EAAKA,MAACytB,EAAU,CAC7BjB,UAAAA,EACAc,gBAAgB,EAChBS,QAAS,SAACv+C,GAAC,OAAKA,CAAC,IACjBk+C,GAAA,EAAAC,GAAA,EAAA92B,EAAAlB,KAAA,EAAAk4B,EAAAN,GAEyBppB,GAAM,KAAA,GAAA,OAAAtN,EAAAjB,KAAA,GAAAi4B,EAAAj4B,OAAA,KAAA,GAAA,KAAA83B,IAAAI,EAAAj3B,EAAAR,MAAA0O,MAAA,CAAAlO,EAAAjB,KAAA,GAAA,KAAA,CAC/Bi3B,EAAQ5L,KADa6M,EAAAzgD,OACA,KAAA,GAAAqgD,GAAA,EAAA72B,EAAAjB,KAAA,GAAA,MAAA,KAAA,GAAAiB,EAAAjB,KAAA,GAAA,MAAA,KAAA,GAAAiB,EAAAlB,KAAA,GAAAkB,EAAAwI,GAAAxI,EAAA,MAAA,GAAA82B,GAAA,EAAAC,EAAA/2B,EAAAwI,GAAA,KAAA,GAAA,GAAAxI,EAAAlB,KAAA,GAAAkB,EAAAlB,KAAA,IAAA+3B,GAAA,MAAAG,EAAA,OAAA,CAAAh3B,EAAAjB,KAAA,GAAA,KAAA,CAAA,OAAAiB,EAAAjB,KAAA,GAAAi4B,EAAA,SAAA,KAAA,GAAA,GAAAh3B,EAAAlB,KAAA,IAAAg4B,EAAA,CAAA92B,EAAAjB,KAAA,GAAA,KAAA,CAAA,MAAAg4B,EAAA,KAAA,GAAA,OAAA/2B,EAAA0O,OAAA,IAAA,KAAA,GAAA,OAAA1O,EAAA0O,OAAA,IAAA,KAAA,GAAA1O,EAAAjB,KAAA,GAAA,MAAA,KAAA,GAAA,MAAAiB,EAAAlB,KAAA,GAAAkB,EAAAmuB,GAAAnuB,EAAA,MAAA,GAGjB,IAAIu1B,GACRv1B,EAAAmuB,cAAegJ,EAAQA,SACan3B,gCAAAA,EAAAmuB,GAAIvuC,QACpC,8BACL,KAAA,GAAA,OAAAogB,EAAAV,OAGI,SAAA,IAAImO,SAAQ,SAACC,EAASC,GAC3BtO,EAAAA,UAAU22B,EAAS,CAAEoB,QAAQ,IAAQ,SAACjvB,EAAKrS,GACrCqS,EACFwF,EAAO,IAAI4nB,GAAgB,wCAE3B7nB,EAAQ5X,EAEZ,GACD,KAAC,KAAA,GAAA,IAAA,MAAA,OAAAkK,EAAAP,OAAA,GAAAM,EAAA,KAAA,CAAA,CAAA,EAAA,IAAA,CAAA,EAAA,GAAA,GAAA,IAAA,CAAA,GAAA,CAAA,GAAA,KACH,MAAAJ,MAAAlpB,KAAAmpB,UAAA,+BzCuB6E,CAC5Ey3B,cAAe,gBACfC,iCAAkC,eAClCC,+BAAgC,gBAChCC,oBAAqB,cACrBC,2BAA4B,iBAC5BC,+BAAgC,0BAChCC,eAAgB,kBAChBC,iBAAkB,YAClBC,iBAAkB,iBAClBC,qBAAsB,mBACtBC,oBAAqB,kBACrBC,iBAAkB,gF0CSsB,CACxC,SACA,YACA,YACA,mClDlK6B,8DOwBc,CAC3C,WACA,UACA,uGAnBsD,CACtDC,cAAe,gBACfC,QAAS,UACTC,SAAU,WACVC,SAAU,4DAKR,CACFH,cAAe,EACfC,QAAS,GACTC,SAAU,GACVC,SAAU,g+DxBnBuB,CACjC,QACA,QACA,SACA,iCAP2B,CAAC,QAAS,6VmE0RM,iCC3RQ,uCC2CU,CAC7D,EAAG,UACH,EAAG,UACH,EAAG,WACH,EAAG,WACH,EAAG,WACH,EAAG,8DpCfH,CACEC,OAAQ,CACNzhB,SAAU,8BACVC,YAAa,SACbyhB,YAAa,UACbC,eARwB,KAU1BC,QAAS,CACP5hB,SAAU,gBACVC,YAAa,UACbyhB,YAAa,UACbC,eAdwB,kEqC/BG,CAAC,YAAa,iDAChB,CAAC,iQDmCyC,CACvEE,MAAO,QACPC,MAAO,YACPC,OAAQ,aACRC,QAAS,giEpCTmB,oGkC6Pa,wFlChBN,wpCsCpMD,yCApEQ,CAC1C,SACA,SACA,gTpDwDsC,CAAC,ieoBlBJ,CACnC,SACA,QACA,sFiChDkC,CAAC,QAAS,OAAQ,k+BCqDnB,CACjC,CAAE7hC,MAAO,kBAAmBvgB,MAAO,gBACnC,CAAEugB,MAAO,mBAAoBvgB,MAAO,cACpC,CAAEugB,MAAO,oBAAqBvgB,MAAO,cACrC,CAAEugB,MAAO,sBAAuBvgB,MAAO,cACvC,CAAEugB,MAAO,qBAAsBvgB,MAAO,cACtC,CAAEugB,MAAO,mBAAoBvgB,MAAO,gbzEVuC,CAC3E6J,IAAK,GACLC,MAAO,EACPC,eAAgB,GAChBC,UAAW,UACXC,eAAgB,UAChBC,QAAS,CAAE,gCAzDuB,+BACA,yHAgDS,0XiDXvC,SACJ+sC,EACAoL,EACAC,EACAvP,GAEA,GAAIuP,EAAQ,MACV,MAAM,IAAIl3C,MAAM,sCAGlB,OAAA2c,GAAAC,KAAAC,MAAO,SAAAC,IAAA,IAAAq6B,EAAAC,EAAA7O,EAAA8O,EAAAC,EAAAC,EAAAv5B,UAAA,OAAApB,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,GACAwqB,EAAQ,CAAA1qB,EAAAE,KAAA,EAAA,KAAA,CACwC,GAA7Cg6B,EAAkBx9B,QAAQC,IAAIu9B,gBAChB,CAAAl6B,EAAAE,KAAA,EAAA,KAAA,CAAA,MACZ,IAAInd,MAAM,8BAA6B,KAAA,EAE/C2nC,EAAWwP,EAAgB,KAAA,EAK6B,OAHtDC,OACF3/C,EAEI8wC,EAAG,kBAAqBsD,EAAG3xC,KAAI,IAAI+8C,EAAQl5B,WAAAw5B,EAAAA,GAASt6B,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAGvCsqB,GAAY,CAC3BZ,OAAQ,mBACRc,SAAAA,IACA,KAAA,GAHM,OAARyP,EAAQn6B,EAAAW,KAAAX,EAAAE,KAAA,GAIai6B,EAASjT,IAAIoE,GAAI,KAAA,GAA1B,KAAR8O,EAAQp6B,EAAAW,MACA,CAAAX,EAAAE,KAAA,GAAA,KAAA,CAAA,OAAAF,EAAAS,OAAA,SACHF,KAAK+J,MAAM8vB,IAAgC,KAAA,GAAA,OAAAp6B,EAAAC,KAAA,GAAAD,EAAAE,KAAA,GAO5CkrB,GAAKE,GAAI,KAAA,GAAA,OAAAtrB,EAAAE,KAAA,GACEi6B,EAASjT,IAAIoE,GAAI,KAAA,GAA1B,KAAR8O,EAAQp6B,EAAAW,MACI,CAAAX,EAAAE,KAAA,GAAA,KAAA,CAAA,OAAAF,EAAAS,OAAA,SACHF,KAAK+J,MAAM8vB,IAAgC,KAAA,GAAA,OAAAp6B,EAAAE,KAAA,GAG/B0uB,EAAE9tB,WAAA,EAAAw5B,GAAS,KAAA,GAApB,OAAND,EAAMr6B,EAAAW,KAAAX,EAAAE,KAAA,GACNi6B,EAAS/S,IAAIkE,EAAK/qB,KAAKC,UAAU65B,GAAS,CAC9CE,GAAIN,IACJ,KAAA,GAAA,OAAAj6B,EAAAS,OAAA,SACK45B,GAAM,KAAA,GAED,OAFCr6B,EAAAC,KAAA,GAEburB,GAAOF,GAAKtrB,EAAA6P,OAAA,IAAA,KAAA,GAAA,GAAA7P,EAAAC,KAAA,IAGVk6B,EAAQ,CAAAn6B,EAAAE,KAAA,GAAA,KAAA,CAAA,OAAAF,EAAAE,KAAA,GACJi6B,EAASK,OAAM,KAAA,GAAA,OAAAx6B,EAAA6P,OAAA,IAAA,KAAA,GAAA,IAAA,MAAA,OAAA7P,EAAAY,OAAA,GAAAf,EAAA,KAAA,CAAA,CAAA,EAAA,CAAA,GAAA,IAAA,CAAA,GAAA,CAAA,GAAA,KAG1B,IACH,+BxC48BgB,SACd46B,EACAC,GAGA,GAAID,EAAEE,eAAiBD,EAAEC,aACvB,OAAQ,EAEV,GAAID,EAAEC,eAAiBF,EAAEE,aACvB,OAAO,EAGT,GAAIF,EAAE1sB,MAAQlpB,QAAiBA,kBAAC8G,KAC9B,OAAQ,EAEV,GAAI+uC,EAAE3sB,MAAQlpB,QAAiBA,kBAAC8G,KAC9B,OAAO,EAIT,GAAI8uC,EAAE1sB,MAAQlpB,QAAiBA,kBAAC+G,KAC9B,OAAQ,EAEV,GAAI8uC,EAAE3sB,MAAQlpB,QAAiBA,kBAAC+G,KAC9B,OAAO,EAIT,GAAgB,WAAZ6uC,EAAExqC,OAAkC,WAAZyqC,EAAEzqC,MAC5B,OAAQ,EAEV,GAAgB,WAAZyqC,EAAEzqC,OAAkC,WAAZwqC,EAAExqC,MAC5B,OAAO,EAIT,IAAM2qC,EAASlvC,GAAamvC,QAAQJ,EAAE1sB,KAChC+sB,EAASpvC,GAAamvC,QAAQH,EAAE3sB,KAEtC,OAAgB,IAAZ6sB,IAA6B,IAAZE,EACZF,EAASE,GAGF,IAAZF,GACM,GAEM,IAAZE,EACK,EAIFL,EAAEx9C,KAAK89C,cAAcL,EAAEz9C,KAAM,KAAM,CAAE+9C,YAAa,QAC3D,6BmDplCA,SAAwCn6B,EAAAO,EAAAM,GAAA,OAAA+yB,GAAA3zB,MAAAlpB,KAAAmpB,UAAA,4CnBUlC,SACJk6B,GAEA,OAAQA,GACN,IAAK,OACH,MAAO,OAET,IAAK,QACH,MAAO,OAET,IAAK,OACH,MAAO,qBAET,QACElY,GAAYkY,GAElB,kC7BqOM,SACJC,GAAiB,IAAAC,EAQjB,OAEEA,OAAAA,EAPc7pC,OAAOO,QAAQX,IAOrBkqC,MAAK,SAAApkC,GAAU,OAAAA,EAAA,GAAY5F,KAAK3Y,SAASyiD,EAAU,UAA3DC,EAAAA,EAA+D,KAAM,IAEzE,kCsB7MM,SACJ7gD,GAIA,IAFA,IAAM+gD,EAAsC,CAAA,EAE5CrE,EAAAsE,EAAAA,EAAyBhqC,OAAOO,QAAQvX,GAAK08C,EAAAsE,EAAA/0B,OAAAywB,IAAE,CAA1C,IAAAuE,EAAAD,EAAAtE,GAAO1L,EAAGiQ,EAAA,GAAEzkC,EAAGykC,EAAA,GAClB,OAAQzkC,EAAI7c,MACV,IAAK,OAGL,IAAK,SACHohD,EAAW/P,GAAO5yC,EAAEe,OACpB,MACF,IAAK,SACH4hD,EAAW/P,GAAO5yC,EAAEY,OACpB,MACF,IAAK,UACH+hD,EAAW/P,GAAO5yC,EAAS,QAC3B,MACF,IAAK,OACH,IAAKgY,MAAM8qC,QAAQ1kC,EAAI2kC,SAAW3kC,EAAI2kC,OAAOl1B,OAAS,EACpD,MAAM,IAAIxjB,MACUuoC,kBAAAA,qCAGtB+P,EAAW/P,GAAO5yC,EAAE2B,OAClB3B,EAAEyB,QAAQ2c,EAAI2kC,OAAO,IACrB/iD,EAAEyB,QAAQ2c,EAAI2kC,OAAO,KAAGC,OACrB5kC,EAAI2kC,OAAO3vB,MAAM,GAAGha,KAAI,SAACtB,GAAC,OAAK9X,EAAEyB,QAAQqW,EAAE,MAGtD,CAEA,OAAO9X,EAAEuB,KAAKohD,EAChB,8DH7FwC,SACtCM,GAEA,IAAMjuB,EAA+B,CAAA,EAsDrC,OArDAiuB,EAAUC,SAAQ,SAAC97B,GACjB,IAAM9D,EAASuE,KAAK+J,MAAMxK,EAAS9D,QAMnC,OAAQ8D,EAASpb,YACf,IAAK,SACHgpB,EAA4B,eAAI1R,EAAOitB,QACvC,MACF,IAAK,SACHvb,EAA4B,eAAI1R,EAAOitB,QACvC,MACF,IAAK,OACHvb,EAA0B,aAAI1R,EAAOitB,QACrC,MACF,IAAK,eACHvb,EAAkC,qBAAI1R,EAAOitB,QAC7Cvb,EAAmC,sBAAI1R,EAAO6/B,SAC9C,MACF,IAAK,YACHnuB,EAA+B,kBAAI1R,EAAOitB,QAC1C,MACF,IAAK,UACHvb,EAA6B,gBAAI1R,EAAOitB,QACxC,MACF,IAAK,YACHvb,EAA+B,kBAAI1R,EAAOitB,QAC1C,MACF,IAAK,UACHvb,EAA0B,aAAI1R,EAAOitB,QACrC,MACF,IAAK,SACHvb,EAA4B,eAAI1R,EAAOitB,QACvC,MACF,IAAK,iBACHvb,EAAiC,oBAAI1R,EAAOitB,QAC5C,MACF,IAAK,mBACHvb,EAAsC,yBAAI1R,EAAOitB,QACjD,MACF,IAAK,aACHvb,EAAgC,mBAAI1R,EAAOitB,QAC3C,MACF,IAAK,WACHvb,EAA8B,iBAAI1R,EAAOitB,QACzC,MACF,IAAK,YACHvb,EAA+B,kBAAI1R,EAAOitB,QAGhD,IACOvb,CACT,kBiCpDgB,SAAQouB,EAAmBxQ,GACzC,IAAMyQ,EAAKnG,GAAItK,GAAK+K,UAAU,EAAG,IAC3B2F,EAAWlG,EAAOmG,iBAAiB,cAAe/F,GAAU5K,GAAMyQ,GAGxE,OAFgBC,EAAShG,OAAO8F,EAAW,MAAO,QACrCE,EAAc,MAAC,OAE9B,wCUgBM,SACJl4C,GAEA,MAAO,CACLA,eAAAA,EACAo4C,aAAa,EACbC,kBAAmB,GACnBC,WAAY,KAEhB,oDVvCgB,SAAQjnC,EAAcm2B,GACpC,IAAMyQ,EAAKnG,GAAItK,GAAK+K,UAAU,EAAG,IAC3BgG,EAASvG,EAAOwG,eAAe,cAAepG,GAAU5K,GAAMyQ,GAGpE,OAFgBM,EAAOrG,OAAO7gC,EAAM,OAAQ,OAC/BknC,EAAY,MAAC,MAE5B,yBpDiDgB,SACd5qC,EACA8qC,GAEA,IAAM5qC,EAASD,GAAcD,GAE7B,QAAIE,GACK4qC,GAAYzrC,GAAea,EAAOR,IAI7C,wDyCwBsBqrC,SAAoB96B,GAAA,OAAAgtB,GAAA5tB,MAAAlpB,KAAAmpB,UAAA,mCzCuJpC,SACJtP,GAEA,IAAME,EAASD,GAAcD,GAE7B,OAAIE,EACKA,EAAOP,KAGT,EACT,6BwBlLM,SAA6BqrC,GAIjC,OAAOA,EACH,CAACA,EAAKC,UAAWD,EAAKE,UAAUnuC,OAAOouC,SAASp2B,KAAK,KACrD,IACN,2CbjEgD,WAC9C,IAAMq2B,EAA2B,GAMjC,OALAnlC,GAAqBkkC,SAAQ,SAACkB,GAC5BnlC,GAAsBikC,SAAQ,SAACmB,GAC7BF,EAAetR,KAAI,MAAOuR,EAAK,IAAIC,EACrC,GACF,IACOF,CACT,mCqBjCsBG,SAAwBn8B,GAAA,OAAAwmB,GAAAvmB,MAAAlpB,KAAAmpB,UAAA,iD+B6ED/J,GAM5C,IALCimC,EAAOjmC,EAAPimC,QAMM/B,EALgBlkC,EAAtBkmC,uBAKyCzxB,MAAM,KAAKigB,MAChDjsC,EAAWw9C,EAAgB,UAI/B,OAHI/B,IACFz7C,OAAay7C,GAERz7C,CACT,gC/DyIM,SACJgS,GAEA,IAAME,EAASD,GAAcD,GAE7B,OAAIE,EACKA,EAAOR,IAGT,IACT,mCHuwBM,SAAmCgsC,GACvC,OAAQA,GACN,KAAKt4C,QAAAA,kBAAkB+G,KACvB,KAAK/G,QAAAA,kBAAkBu4C,GACvB,KAAKv4C,QAAAA,kBAAkBw4C,QACvB,KAAKx4C,QAAAA,kBAAkBy4C,kBACvB,KAAKz4C,QAAiBA,kBAACgH,QACrB,MAAO,SACT,KAAKhH,QAAAA,kBAAkB2H,eACvB,KAAK3H,QAAAA,kBAAkBsH,cACvB,KAAKtH,QAAAA,kBAAkBuH,gBACvB,KAAKvH,QAAAA,kBAAkByH,kBACvB,KAAKzH,QAAAA,kBAAkBwH,eACvB,KAAKxH,QAAiBA,kBAAC0H,SACrB,MAAO,YACT,KAAK1H,QAAAA,kBAAkB4H,cACvB,KAAK5H,QAAAA,kBAAkB6H,eACvB,KAAK7H,QAAiBA,kBAAC8H,cACrB,MAAO,UACT,KAAK9H,QAAiBA,kBAAC+H,WACrB,MAAO,SACT,KAAK/H,QAAiBA,kBAAC04C,YACrB,MAAO,WACT,QACE,MAAO,OAEb,qDH5/BM,SACJt4B,GAKA,IAAMu4B,EAAQv4B,EAAWwG,MAAM,WAG/B,MAAO,CAAEvoB,aAFYs6C,EAAM,GAAGhyB,QAAQ,sBAAuB,IAEtCroB,cADDq6C,EAAM,GAE9B,8CAnBgB,SACdt6C,EACAC,GAEA,OAAOF,GAAsBC,EAAcC,EAC7C,kEuB0BM,SACJtB,GAEA,IAAM47C,EAAW57C,EAAQ6Z,GAAmBkxB,eAC5C,MAAwB,iBAAb6Q,GAAyBA,EAAStR,OAAO5lB,OAAS,EACpDk3B,EAAShyB,MAAM,KAAK3Z,KAAI,SAACtS,GAAE,OAAKA,EAAG2sC,eAE1C,CAEJ,gCAEM,SAAgCsR,GAA8B,IAAAzmC,EAClE,GAAKymC,EAIL,OAAAzmC,EAAA,IACG0E,IAAqB+hC,EAASj3B,KAAK,KAAIxP,CAE5C,iCO+HM,SAAiCysB,GAAyB,IAAAzsB,EAC9D,GAAKysB,EAIL,OAAAzsB,MACGusB,IAAsBE,EAAKzsB,CAEhC,oCwCrMM,SAAoCtc,GACxC,MAAA,iBAAwBA,CAC1B,mCnEwEM,SACJ+J,GAEA,OAAID,GAAsBC,EAAO,aACxBiF,GAELlF,GAAsBC,EAAO,UACxB0D,GAEL3D,GAAsBC,EAAO,oBACxB2F,GAEL5F,GAAsBC,EAAO,WACxBuF,GAEF,IACT,gGFZM,SACJib,GAIA,OAAOzhB,GAAyByhB,EAClC,8BAzEgB,SACdvqB,EACAgjD,GAEA,IAAIC,qBAA4BjjD,EAIhC,OAHIgjD,IACFC,GAAU,sBAELA,CACT,wCoCJsBC,SAA6B/8B,GAAA,OAAAmmB,GAAAlmB,MAAAlpB,KAAAmpB,UAAA,0EuBT7C,SACJ88B,GAEA,IACE,IAAMlmD,EAAQkmD,EAAWpR,QAAiB,SAACC,EAAKoR,GAG9C,IAAMC,EAAyB,cAATD,EAAuBA,EAAOvH,GAAQuH,GAE5D,GAAKpR,EAAIj0C,SAASslD,IAAmBA,EAAcx3B,OAE5C,CAEL,IADA,IAAIy3B,GAAmB,EACdpuC,EAAI,EAAGA,EAAI,GAAIA,IACtB,IAAK88B,EAAIj0C,SAAS89C,GAAWwH,EAAiBnuC,IAAAA,IAAO,CACnD88B,EAAInB,KAAKgL,GAAWwH,EAAa,IAAInuC,IACrCouC,GAAmB,EACnB,KACF,CAGF,IAAKA,EACH,MAAM,IAAIvH,GACgDqH,wDAAAA,+BAG9D,MAhBEpR,EAAInB,KAAKwS,GAiBX,OAAOrR,CACR,GAAE,IACH,OAAO,IAAIh1C,EAAGC,EACf,CAAC,MAAOsmD,GACP,OAAIA,aAAal7C,MACR,IAAI9K,EAAIgmD,GAER,IAAIhmD,EAAI,IAAI8K,MAAM,6BAE7B,CACF,mCzDYM,SACJ0B,GAEA,OAAID,GAAsBC,EAAO,UACxB4D,GAEL7D,GAAsBC,EAAO,aACxBmF,GAELpF,GAAsBC,EAAO,oBACxB4F,GAEL7F,GAAsBC,EAAO,WACxByF,GAEF,IACT,qCGiNgB,SACdiH,GAEA,YAFA,IAAAA,IAAAA,OAAsC3W,GAE/BiW,GACLH,GACEgB,OAAOmqC,OAAOvqC,IAAcgtC,SAAQ,SAACvsC,GAAM,OACxCR,GAAOQ,EAAOR,MAAQA,EAAoB,GAAdQ,EAAOP,IAAS,KAIrD,yCC9Q8C,WAC5C,IAAA+sC,EAAiCvsC,KAA1BwsC,EAAKD,EAAA,GAAEE,EAAMF,EAAA,GAAKG,EAAIH,EAAAryB,MAAA,GAC7B,OAAOpzB,EAAE2B,MACP3B,CAAAA,EAAEyB,QAAQikD,GACV1lD,EAAEyB,QAAQkkD,IAAO3C,OACd4C,EAAKxsC,KAAI,SAACna,GAAK,OAAKe,EAAEyB,QAAQxC,EAAM,KAE3C,wDD0QE,OAAO8Y,GACLH,GACEgB,OAAOmqC,OAAOvqC,IAAcgtC,SAAQ,SAACvsC,GAAM,MAC1B,UAAfA,EAAOR,IAAkBQ,EAAOP,KAAO,EAAE,KAIjD,wFSpQM,SAA8CW,GAUnD,IATCwsC,EAAaxsC,EAAbwsC,cACAC,EAAkBzsC,EAAlBysC,mBACAC,EAAa1sC,EAAb0sC,cAQA,IAAKF,IAAkBC,EACrB,OAAO,KAGT,IAAME,EAAY3nC,GAA+B,CAAEE,OAX7ClF,EAANkF,SAiBI0nC,EAAwB,GAO5B,OANIF,IACFE,EACE,eACOF,EAAa,qDAAqDC,EAA8C,uCAPzH,aACOH,8BAAyCG,EAAS,OAAOF,EAA6B,YAS7DG,CACpC,mFgCmDM,SACJC,GAEA,OAAQA,GACN,IAAK,MACH,OAAO,MAGT,IAAK,WACH,OAAO,OAET,QACE,OAAO,EAEb,wC7CzBM,SACJ/6C,GAIA,GAAiB,UAFAD,GAAiCC,GAGhD,IAAA,IAA6B2zC,EAA7BD,EAAAsH,GAAgBh7C,EAASgK,QAAI2pC,EAAAD,KAAAloB,MAAE,CAAA,IAApB32B,EAAC8+C,EAAA7/C,MACV,GAAIe,EAAEomD,WAAW,gBACf,MAAA,IAAWpmD,EAAE29C,UAAU,GAE3B,CAGF,IAAA,IAA6B+B,EAA7BD,EAAA0G,GAAgBh7C,EAASgK,QAAIuqC,EAAAD,KAAA9oB,MAAE,CAAA,IAApB32B,EAAC0/C,EAAAzgD,MACV,GAAIe,EAAEomD,WAAW,UACf,OAAOpmD,EAAE29C,UAAU,EAEvB,CAEA,OAAOxyC,EAASowB,UAClB,kC4BgDM,SAAkCpyB,GAGtC,IAAM4hC,EAAQ5hC,EAAQ0hC,IACtB,GAAqB,iBAAVE,EACT,OAAOA,CAIX,gDyCvLM,SACJ/oC,GAEA,MAAA,cAAqBA,CACvB,mCARM,SAAmCA,GACvC,MAAA,gBAAuBA,CACzB,+CvE0CM,SAA+CA,GACnD,MAAA,+BAAsCA,CACxC,uDkEeM,SACJqkD,GAEA,MAAO,UAAWA,CACpB,8C5ErBgB,SACdnsB,EACAosB,GAEA,IAAMC,EAAiBD,EAAMxvB,OAAOoD,GACpC,GAAI+gB,EAAAA,OAAOsL,GAAiB,CAC1B,IAAMxL,EAAYG,EAASC,uBAAuBoL,EAAenL,MACjE,OAAO,IAAI77C,EAAIw7C,EACjB,CAEA,OAAO,IAAI/7C,EAAGunD,EAAelL,MAC/B,6BkFuFM,SAA6BjzC,GACjC,MACiB,iBAARA,GACC,OAARA,GACA,UAAWA,GA7Bf,SAAoBA,GAClB,MACiB,iBAARA,GACC,OAARA,GACA,YAAaA,GACU,iBAAhBA,EAAIC,SACX,SAAUD,GACU,iBAAbA,EAAI7G,IAGf,CAoBIilD,CAAWp+C,EAAI5I,MAEnB,+BhD/HM,SACJwxB,GAEA,OAAOy1B,EAAOA,QAACxjC,GAAyB6T,OAAO9F,GACjD,2BMEM,SAA2Bga,GAC/B,OAAOR,GAAazqC,SAASirC,EAC/B,kBAiEM,SACJj/B,GAEA,IAAKA,EACH,OAAO,EAET,OAAQA,EAAMi/B,MACZ,IAAK,QACH,OAAO,EACT,IAAK,UACL,IAAK,OACL,IAAK,OACH,OAAO,EACT,QACEX,GAAYt+B,EAAMi/B,MAExB,yBXlFM,SAAyB5sB,GAC7B,YAAiDtc,IAAzCsc,EAAqB5E,eAC/B,6BA8JM,SAA6B4E,GACjC,MAAoB,kBAAbA,EAAI7c,IACb,4BLpHM,SAA4BmlD,GAChC,OAAOA,aAAkB1oC,EAC3B,wBRdM,SAAwBy/B,GAC5B,OAAOA,EAHa,GAItB,4CiCuHM,SACJzoB,GAEA,MACE,SAAUA,GACV,eAAgBA,GAChB,aAAcA,CAElB,6BzB7BM,SACJ5W,GAEA,MAAoB,kBAAbA,EAAI7c,IACb,gCAfM,SACJ6c,GAEA,QACIA,GACa,iBAARA,GACP,SAAUA,GACG,yBAAbA,EAAI7c,IAER,oBgBhDM,SACJwK,GAEA,IAAKA,EACH,OAAO,EAET,OAAQA,EAAMi/B,MACZ,IAAK,QACL,IAAK,UACH,OAAO,EACT,IAAK,OACL,IAAK,OACH,OAAO,EACT,QACEX,GAAYt+B,EAAMi/B,MAExB,oChC1GM,SACJpa,GAEA,OAAOA,aAAe/mB,IAAwC,MAAf+mB,EAAItqB,MACrD,2B4BCM,SAA2BqgD,GAC/B,OAAQpgC,GAA+CxmB,SAAS4mD,EAClE,8BJTM,SAA8BA,GAClC,OAAQ7jC,GAA4C/iB,SAAS4mD,EAC/D,gFfkCM,SACJC,GAEA,MAAO,gBAAiBA,CAC1B,4CkEcM,SACJC,GAEA,MAAgC,qBAAzBA,EAAgB7b,IACzB,gCCvCM,SACJ5sB,GAEA,MAAoB,qBAAbA,EAAI7c,IACb,iD5D+JM,SACJ6c,GAEA,QACIA,GACa,iBAARA,GACP,SAAUA,GACG,4CAAbA,EAAI7c,IAER,2DAEM,SACJ6c,GAEA,MAAoB,qCAAbA,EAAI7c,IACb,yDyB7HM,SAA+B6G,GACnC,OAAO+mC,GAAsBpvC,SAASqI,EACxC,gCjB5BM,SAAgC7D,GAEpC,OAAuB,IADPA,EAAKkvC,OACT5lB,OACH,IAAItuB,EAAI,mCAEbgF,EAAK6hD,WAAW,YACX,IAAI7mD,EAAI,2DAGV,IAAIP,OAAG8C,EAChB,8CZvBM,SACJ0b,GAEA,OAAOD,GAA8BC,IAA0B,SAAbA,CACpD,wBhBtCM,SAAwBve,GAC5B,OAAO2J,GAAa7I,SAASd,EAC/B,mCiFrBE,OAAO+kB,CACT,kG7DkEM,SACJ5F,GAEA,MAAoB,wBAAbA,EAAI7c,IACb,oCAhBM,SACJ6c,GAEA,QACIA,GACa,iBAARA,GACP,SAAUA,GACG,+BAAbA,EAAI7c,IAER,0B6D9DM,SAA0BulD,GAC9B,OAAOA,EAAEzxB,MAAQrR,QAAQC,IAAI8iC,4BAC/B,wBtEIM,SAAwB5J,GAC5B,OAAIA,SAGkB,KAAfA,EAAI1J,MACb,yGSuLM,SACJr1B,GAEA,MAAoB,+BAAbA,EAAI7c,IACb,2CAfM,SACJ6c,GAEA,QACIA,GACa,iBAARA,GACP,SAAUA,GACG,sCAAbA,EAAI7c,IAER,2CAfM,SACJ6c,GAEA,MAAoB,mCAAbA,EAAI7c,IACb,8CAfM,SACJ6c,GAEA,QACIA,GACa,iBAARA,GACP,SAAUA,GACG,0CAAbA,EAAI7c,IAER,4BS5JM,SAA4BtC,GAChC,MAAiB,WAAVA,CACT,6CvBWM,SACJstB,GAEA,OACEA,EAAW65B,WAAW,wBACtB75B,EAAWxsB,SAAS,UAExB,sBuB1BM,SAAsBd,GAC1B,OAAO8jB,GAAYhjB,SAASd,EAC9B,qCUbM,SACJA,GAEA,OAAQisC,GAA+CnrC,SAASd,EAClE,+BDTM,SACJA,GAEA,OAAOgsC,GAAsBlrC,SAASd,EACxC,oB7ByLyB,SAAC2P,GAAe,OACvCJ,GAAUzO,SAAS6O,EAAuB,4BA7JX,SAC/B5C,GAAkB,OAElBT,GAAmBxL,SAASiM,EAAkC,6BoC8I1D,SACJgpB,GAEA,MAAO,YAAaA,CACtB,gHA9KM,SAAyB5sB,GAC7B,OAAOwmC,GAAgB7uC,SAASqI,EAClC,sBT6JM,SACJ2D,GAEA,QAAKA,GAGiB,UAAfA,EAAMi/B,IACf,wBAhBM,SACJj/B,GAEA,QAAKA,GAGiB,YAAfA,EAAMi/B,IACf,qBAhBM,SACJj/B,GAEA,QAAKA,GAGiB,SAAfA,EAAMi/B,IACf,8BhBjDM,SACJ5sB,GAEA,MAAoB,mBAAbA,EAAI7c,IACb,kHyBdM,SACJ6G,GAEA,OAAO8mC,GAAwCnvC,SAC7CqI,EAEJ,oCjCiGM,SACJwoC,GAEA,MAAO,CAAC,gBAAgB7wC,SAAS6wC,EACnC,mCQrEM,SACJxyB,GAEA,QACIA,GACa,iBAARA,GACP,SAAUA,GACG,4BAAbA,EAAI7c,IAER,gCAtDM,SACJ6c,GAEA,MAAoB,qBAAbA,EAAI7c,IACb,mCAfM,SACJ6c,GAEA,QACIA,GACa,iBAARA,GACP,SAAUA,GACG,4BAAbA,EAAI7c,IAER,8BamEgB,SACdylD,EACApwC,GAEA,IAF0B,IA+BzB8/B,EA/ByBD,EAAAA,WAErB,IAAAoM,EAAAD,EAAAtE,GAAO2I,EAACpE,EAAA,GAAE/qC,EAAC+qC,EAAA,GACd,GAAU,OAAN/qC,EAAY,OAAA,EAGhB,GAAiB,iBAANA,GAAsC,IAApBA,EAAE27B,OAAO5lB,OAAc,OAAA,EAGpD,IAAMq5B,EAActwC,EAAO8rC,MAAK,SAAC1hD,GAAC,OAAKA,EAAEuD,OAAS0iD,KAClD,OAAKC,EAI0B,QAA3BA,EAAYC,YAAqC,iBAANrvC,GAET,UAA3BovC,EAAYC,YAAuC,iBAANrvC,GAElB,SAA3BovC,EAAYC,YAAsC,iBAANrvC,GAEjB,SAA3BovC,EAAYC,YAAsC,kBAANrvC,GAG1B,aAA3BovC,EAAYC,aACE,iBAANrvC,IACLA,GACkB,iBAAZA,EAAEsvC,OACRtvC,EAAEuvC,cAA0C,iBAAnBvvC,EAAEuvC,cAb+B,CAAAvvC,GACtD,QAOF,EAZW,CAAAA,GACT,EAoBV,EA7BDwmC,EAAAsE,EAAAA,EAAqBhqC,OAAOO,QAAQ6tC,EAAI/nD,OAAMq/C,EAAAsE,EAAA/0B,OAAAywB,IAAA,GAE1C,KAF0C5H,EAAAD,MAEjCC,EAAA,OAAAA,EAAA5+B,EA6Bb,OAAO,CACT,kCYGM,SACJkd,GAEA,MAAO,cAAeA,GAAe,kBAAmBA,CAC1D,sCzB1EM,SACJ5W,GAEA,QACIA,GACa,iBAARA,GACP,SAAUA,GACG,gCAAbA,EAAI7c,IAER,2GrB3HM,SACJuW,GAEA,OAAOxP,GAA4Bg/C,GAAGxvC,EACxC,kCAkBM,SACJ7Y,GAEA,MAAiB,iBAAVA,GAAsC,mBAAVA,CACrC,sBkEqBM,SAAsBwd,GAC1B,MAAO,eAAexb,KAAKwb,EAC7B,iCpBiHM,SACJuY,GAEA,MAAO,aAAcA,GAAe,aAAcA,CACpD,mBlC3KM,SAAmB/1B,GACvB,MAAwB,iBAAVA,CAChB,8CCmNM,SACJ8Z,GAEA,IAAME,EAASD,GAAcD,GAE7B,QAAIE,GACoB,cAAfA,EAAOR,GAIlB,kD6BtNuD,SACrD8pC,GAAgB,OAEhB9V,GAAwC1sC,SACtCwiD,EACD,4E7B2LG,SACJxpC,GAEA,IAAME,EAASD,GAAcD,GAE7B,QAAIE,GACoB,UAAfA,EAAOR,GAIlB,8DsB9FM,SACJ8uC,GAEA,OAAOnd,GAAuBrqC,SAASwnD,EACzC,4BL3GM,SAA4BtoD,GAChC,MAAiB,WAAVA,CACT,kCT6BM,SACJmf,GAEA,MAAoB,wBAAbA,EAAI7c,IACb,qCAfM,SACJ6c,GAEA,QACIA,GACa,iBAARA,GACP,SAAUA,GACG,+BAAbA,EAAI7c,IAER,iCMsCM,SACJtC,GAEA,OACE+Y,MAAM8qC,QAAQ7jD,IAAUA,EAAMuoD,OAAM,SAAC1vC,GAAC,OAAKuH,GAAoBtf,SAAS+X,KAE5E,wBqDlEM,SAAwBvR,GAC5B,MAAwB,SAAjBA,EAAQhF,IACjB,+CtB2DM,SACJwX,GAEA,OAAOsgC,GAAsBt5C,SAASgZ,EACxC,sBjDlEM,SAAsBqF,GAC1B,YACkCtc,IAA/Bsc,EAAkB3I,eACS3T,IAA3Bsc,EAAkB1I,IAEvB,4BgCXM,SAA4B+xC,GAChC,OAAOjb,GAAmBzsC,SAAS0nD,EACrC,iBJ8GM,SACJ17C,GAEA,IAAKA,EACH,OAAO,EAET,OAAQA,EAAMi/B,MACZ,IAAK,QACL,IAAK,UACL,IAAK,OACH,OAAO,EACT,IAAK,OACH,OAAO,EACT,QACEX,GAAYt+B,EAAMi/B,MAExB,4BX1CM,SAA4B5sB,GAChC,MAAoB,iBAAbA,EAAI7c,IACb,iCsD1BM,SACJmmD,GAEA,MAA4B,SAArBA,EAAY1c,IACrB,sC1ElEM,SACJ/rC,GAEA,MAAiB,aAAVA,GAAkC,UAAVA,GAA+B,QAAVA,CACtD,+D6EzBM,SAAsB0oD,GAC1B,OAAQ36B,MAAM26B,EAAKC,UACrB,oCrCmEM,SAAoC5mD,GACxC,MAAoB,iBAANA,GAAkBA,EAAEyyC,OAAO5lB,OAAS,CACpD,wCAEM,SAAwC7sB,GAC5C,MAAoB,iBAANA,GAAkBA,EAAEyyC,OAAO5lB,OAAS,CACpD,kCAdM,SAAkC7sB,GACtC,MACe,iBAANA,GACPA,EAAEolD,WAAW,aACbplD,EAAE6mD,SAAS,kBAEf,kCAZM,SAAkC7mD,GACtC,MACe,iBAANA,GAAkB,yCAAyCC,KAAKD,EAE3E,oClBuIM,SACJ/B,GAEA,MAAqB,iBAAVA,GAAgC,OAAVA,IAK/BqjB,GAA0BrjB,IAC1BijB,GAAiBjjB,IACjByjB,GAAsBzjB,IACtBsjB,GAA0BtjB,IAC1BwjB,GAAyBxjB,IACzB4jB,GAAqB5jB,GAEzB,oCwDzMM,SACJqkB,GAIA,YACiCxhB,KAAV,MAHOwhB,OAGP,EAHOA,EAGLxa,WACUhH,KAAZ,MAJOwhB,OAIP,EAJOA,EAILva,aACmBjH,KAA1CgmD,MAL4BxkC,OAK5BwkC,EAL4BxkC,EAKLta,sBACclH,KAArCgmD,MAN4BxkC,OAM5BwkC,EAN4BxkC,EAMLra,iBACmBnH,KAA1CgmD,MAP4BxkC,OAO5BwkC,EAP4BxkC,EAOLpa,sBACYpH,WARPwhB,SAAAA,EAQLna,QAE3B,gC/D+HM,SACJiV,GAEA,MAAoB,qBAAbA,EAAI7c,IACb,mCArCM,SACJ6c,GAEA,QACIA,GACa,iBAARA,GACP,SAAUA,GACG,4BAAbA,EAAI7c,IAER,oCJ9DM,SACJic,GAEA,MAAoB,YAAbA,GAAuC,WAAbA,CACnC,iCmCzCM,SACJuqC,GAEA,OAAOnU,GAAuB7zC,SAASgoD,EACzC,mCiC5BwC,CACtC,eACA,OACA,8ChFFI,SAAuC/lD,GAC3C,MAAA,mBAA0BA,CAC5B,8CQ2C2Cy7C,EAAcuK,GACvD,YAD+D,IAARA,IAAAA,EAAW,GAC9DvK,EAAO,KACCA,EAAKwK,QAAQD,GAAS,KAG9BvK,EAAO,SACEA,EAAO,MAAMwK,QAAQD,GAAS,MAGvCvK,EAAO,YACEA,EAAI,SAAkBwK,QAAQD,GAAS,OAGzCvK,EAAQ,YAAqBwK,QAAQD,GAAS,KAC3D,8DyEvDM,SAA+ChmD,GACnD,MAAA,+BAAsCA,CACxC,6CANM,SAA6CA,GACjD,MAAA,6BAAoCA,CACtC,yBvBMM,SAAyBxC,GAC7B,OAAIA,aAAiB6K,MACZ7K,EAGF,IAAI6K,MAAM2yC,GAAcx9C,GACjC,kEIyEsB0oD,SAAoBx/B,GAAA,OAAA02B,GAAAh3B,MAAAlpB,KAAAmpB,UAAA,oBDlDpC,SAAoB8/B,GACxB,OAAiB,IAAVA,EAAc,IAAM,EAC7B,4BpCbM,SAA4BC,GAChC,MAAmB,WAAfA,EAAMX,KACD,eAEFW,EAAM7jD,KAAKuuB,QAAQ,mBAAoB,GAChD,sBwBUsBu1B,SAAW3/B,GAAA,OAAAysB,GAAA/sB,MAAAlpB,KAAAmpB,UAAA,uBYoBjB,SAAa80B,EAAat8C,GACxC,MAAmB,iBAARs8C,GAIPA,EAAItvB,QAAUhtB,EAHTs8C,EAOQ,IAAImL,OAAOnL,EAAItvB,OAAShtB,GAAKs8C,EAAI/pB,OAAOvyB,EAE3D,oEMrDM,SACJ+V,GAEA,IAAI2xC,EACF,CAAA,EAoBF,OAlBI3xC,EAAOiX,OAAS,EAClBjX,EAAOssC,SAAQ,SAACsF,GACdD,EAAWC,EAAEjkD,MAAQ,CACnBhD,KAAMinD,EAAEjnD,KACR2N,YAAas5C,EAAEt5C,YAEnB,IAGAq5C,EAAa,CACXE,cAAe,CACblnD,KAAM,SACN2N,YACE,sFAKDq5C,CACT,wBNoCM,SAAwBpL,GAC5B,IACE,IAAM1xB,EAAM5D,KAAK+J,MAAMurB,GAEvB,OAAO,IAAIn+C,EAAGysB,EACf,CAAC,MAAOmF,GACP,OAAIA,aAAevmB,MACV,IAAI9K,EAAIqxB,GAGV,IAAIrxB,EAAI,IAAI8K,MAAM,0CAC3B,CACF,iCA/EE8yC,EACAuL,EACA/P,GAEA,MAgB+BtgC,EAhBA8kC,EAAIwL,WAAWD,KAiB/B,OAAUrwC,GAAQ,OAhB/BqwC,IAeJ,IAAiCrwC,EAV/B,SAHYvW,IAAR62C,IACFA,EAAMwE,EAAItvB,QAEL+vB,GAAuBT,EAAIwL,WAAWhQ,EAAM,KACjDA,IAEF,OAAOwE,EAAIQ,UAAU+K,EAAO/P,EAC9B,yBAcM,SAAyBiQ,GAC7B,OAAOA,EAAUnV,OAAOS,aAC1B,0BGJM,SAAU2U,EACdnsC,GAEA,MACE,IAAGA,EAAQR,QAAU,KAAKQ,EAAQnW,SAAW,IAC7CmW,EAAQP,SAAS/C,IAAIyvC,GAAiB/6B,KAAK,GAE/C,4BlBzCsBg7B,SAAiB3gC,GAAA,OAAAgrB,GAAA/qB,MAAAlpB,KAAAmpB,UAAA,mCSLjB0gC,SAAwB5gC,GAAA,OAAA0zB,GAAAzzB,MAAAlpB,KAAAmpB,UAAA,kCIIxC,SAAkC5B,GAClCw2B,GACFx2B,EAAO2F,KAAK,GAAI,uCAGlB6wB,IAAO,EACPj5B,QAAQmuB,GAAG,sBAAsB,SAAC33B,EAAQwuC,GAExC,IAAMC,EAAO/oD,EAAAA,KAEbkyC,QAAQ5yC,MAAM,qBAAsBwpD,EAASxuC,EAAQyuC,GAErDD,EAAa,OAAC,SAACxpD,GAGbinB,EAAOjnB,MAAM,CAAEA,MAAAA,EAAO0pD,OAAO,EAAMD,KAAAA,EAAMzuC,OAAAA,GAAU,sBACrD,GACF,IAEAwJ,QAAQmuB,GAAG,qBAAqB,SAAC3yC,GAC/BinB,EAAOjnB,MAAM,CAAEA,MAAAA,EAAO0pD,OAAO,GAAQ,qBACvC,IACF,+BjBnBsBC,SAAoBhhC,GAAA,OAAAuoB,GAAAtoB,MAAAlpB,KAAAmpB,UAAA,4CmBuFpC,SAAyB5L,GAC7B,OAAOA,EAAKqW,QAAQ,MAAO,GAC7B,0K7C4HM,SACJs2B,GAEAA,EAAY5xC,QAAQ0rC,SAAQ,SAACwD,GAC3B,GAAIvoC,GAAuBuoC,KAEM,SAA7BA,EAAOlxC,mBACsB,SAA7BkxC,EAAOlxC,mBAGP,MAAM,IAAInL,MACR,iEAIR,IAEA,IACMg/C,EAAqBD,EAE3B,GAH8BA,GAIQ,WAJRA,EAIF7xC,MACxB,MAAM,IAAIlN,MAAM,8BAIpB,GAAIg/C,EAAoB,CACtB,GAAiC,WAA7BA,EAAmB9xC,MACrB,MAAM,IAAIlN,MAAM,4BAGlB,GAAkC,aAA9Bg/C,EAAmB/iD,OACrB,MAAM,IAAI+D,MAAM,6BAEpB,CACF,mB6CrLM,SAAmBoS,EAAcoR,EAAgBy7B,GACrD,YAD6D,IAARA,IAAAA,EAAW,OACzD7sC,EAAKoR,OAASA,EACdpR,GAAAA,EAAKkhC,UAAU,EAAG9vB,EAASy7B,EAASz7B,QAAUy7B,EACjD7sC,CACN,wBtChCwD,CACtD,UACA,mBACA,mBACA"}