{"code":"export const CONNECTOR_PROVIDERS = [\n    \"confluence\",\n    \"github\",\n    \"google_drive\",\n    \"intercom\",\n    \"notion\",\n    \"slack\",\n    \"webcrawler\",\n];\nexport function isConnectorProvider(val) {\n    return CONNECTOR_PROVIDERS.includes(val);\n}\n//# sourceMappingURL=data_source.js.map","references":["/Users/edouardwautier/Projects/dust/types/src/shared/model_id.ts"],"map":"{\"version\":3,\"file\":\"data_source.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/front/data_source.ts\"],\"names\":[],\"mappings\":\"AAIA,MAAM,CAAC,MAAM,mBAAmB,GAAG;IACjC,YAAY;IACZ,QAAQ;IACR,cAAc;IACd,UAAU;IACV,QAAQ;IACR,OAAO;IACP,YAAY;CACJ,CAAC;AAGX,MAAM,UAAU,mBAAmB,CAAC,GAAW;IAC7C,OAAQ,mBAA2C,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AACpE,CAAC\"}","dtsmap":{"name":"/Users/edouardwautier/Projects/dust/types/node_modules/.cache/rollup-plugin-typescript2/placeholder/front/data_source.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"data_source.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/front/data_source.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,oBAAoB,CAAC;AAE7C,MAAM,MAAM,oBAAoB,GAAG,QAAQ,GAAG,SAAS,CAAC;AAExD,eAAO,MAAM,mBAAmB,gGAQtB,CAAC;AACX,MAAM,MAAM,iBAAiB,GAAG,CAAC,OAAO,mBAAmB,CAAC,CAAC,MAAM,CAAC,CAAC;AAErE,wBAAgB,mBAAmB,CAAC,GAAG,EAAE,MAAM,GAAG,GAAG,IAAI,iBAAiB,CAEzE;AAED,MAAM,MAAM,cAAc,GAAG;IAC3B,EAAE,EAAE,OAAO,CAAC;IACZ,IAAI,EAAE,MAAM,CAAC;IACb,WAAW,EAAE,MAAM,GAAG,IAAI,CAAC;IAC3B,UAAU,EAAE,oBAAoB,CAAC;IACjC,wBAAwB,EAAE,OAAO,CAAC;IAClC,gBAAgB,EAAE,MAAM,CAAC;IACzB,WAAW,EAAE,MAAM,GAAG,IAAI,CAAC;IAC3B,iBAAiB,EAAE,iBAAiB,GAAG,IAAI,CAAC;CAC7C,CAAC\"}"},"dts":{"name":"/Users/edouardwautier/Projects/dust/types/node_modules/.cache/rollup-plugin-typescript2/placeholder/front/data_source.d.ts","writeByteOrderMark":false,"text":"import { ModelId } from \"../shared/model_id\";\nexport type DataSourceVisibility = \"public\" | \"private\";\nexport declare const CONNECTOR_PROVIDERS: readonly [\"confluence\", \"github\", \"google_drive\", \"intercom\", \"notion\", \"slack\", \"webcrawler\"];\nexport type ConnectorProvider = (typeof CONNECTOR_PROVIDERS)[number];\nexport declare function isConnectorProvider(val: string): val is ConnectorProvider;\nexport type DataSourceType = {\n    id: ModelId;\n    name: string;\n    description: string | null;\n    visibility: DataSourceVisibility;\n    assistantDefaultSelected: boolean;\n    dustAPIProjectId: string;\n    connectorId: string | null;\n    connectorProvider: ConnectorProvider | null;\n};\n//# sourceMappingURL=data_source.d.ts.map"}}
