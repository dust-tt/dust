{"code":"export const FREE_BILLING_TYPES = [\"free\"];\nexport const PAID_BILLING_TYPES = [\n    \"fixed\",\n    \"monthly_active_users\",\n    \"per_seat\",\n];\nexport const SUBSCRIPTION_STATUSES = [\n    \"active\",\n    \"ended\",\n    \"ended_backend_only\", // Ended on the backend but not yet propagated to Stripe\n];\n//# sourceMappingURL=plan.js.map","references":[],"map":"{\"version\":3,\"file\":\"plan.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/front/plan.ts\"],\"names\":[],\"mappings\":\"AAmCA,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,MAAM,CAAU,CAAC;AACpD,MAAM,CAAC,MAAM,kBAAkB,GAAG;IAChC,OAAO;IACP,sBAAsB;IACtB,UAAU;CACF,CAAC;AAKX,MAAM,CAAC,MAAM,qBAAqB,GAAG;IACnC,QAAQ;IACR,OAAO;IACP,oBAAoB,EAAE,wDAAwD;CACtE,CAAC\"}","dtsmap":{"name":"/Users/edouardwautier/Projects/dust/types/node_modules/.cache/rollup-plugin-typescript2/placeholder/front/plan.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"plan.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/front/plan.ts\"],\"names\":[],\"mappings\":\"AAAA,MAAM,MAAM,wBAAwB,GAAG,KAAK,GAAG,UAAU,CAAC;AAE1D;;;KAGK;AACL,MAAM,MAAM,2BAA2B,GAAG;IACxC,mBAAmB,EAAE,OAAO,CAAC;IAC7B,cAAc,EAAE,OAAO,CAAC;IACxB,eAAe,EAAE,OAAO,CAAC;IACzB,oBAAoB,EAAE,OAAO,CAAC;IAC9B,eAAe,EAAE,OAAO,CAAC;IACzB,iBAAiB,EAAE,OAAO,CAAC;IAC3B,mBAAmB,EAAE,OAAO,CAAC;CAC9B,CAAC;AACF,MAAM,MAAM,UAAU,GAAG;IACvB,SAAS,EAAE;QACT,iBAAiB,EAAE,OAAO,CAAC;QAC3B,WAAW,EAAE,MAAM,CAAC;QACpB,oBAAoB,EAAE,wBAAwB,CAAC;KAChD,CAAC;IACF,WAAW,EAAE,2BAA2B,CAAC;IACzC,WAAW,EAAE;QACX,KAAK,EAAE,MAAM,CAAC;QACd,SAAS,EAAE;YACT,KAAK,EAAE,MAAM,CAAC;YACd,MAAM,EAAE,MAAM,CAAC;SAChB,CAAC;KACH,CAAC;IACF,KAAK,EAAE;QACL,QAAQ,EAAE,MAAM,CAAC;KAClB,CAAC;IACF,aAAa,EAAE,OAAO,CAAC;CACxB,CAAC;AAEF,eAAO,MAAM,kBAAkB,mBAAoB,CAAC;AACpD,eAAO,MAAM,kBAAkB,wDAIrB,CAAC;AAEX,MAAM,MAAM,eAAe,GAAG,CAAC,OAAO,kBAAkB,CAAC,CAAC,MAAM,CAAC,CAAC;AAClE,MAAM,MAAM,eAAe,GAAG,CAAC,OAAO,kBAAkB,CAAC,CAAC,MAAM,CAAC,CAAC;AAElE,eAAO,MAAM,qBAAqB,oDAIxB,CAAC;AACX,MAAM,MAAM,sBAAsB,GAAG,CAAC,OAAO,qBAAqB,CAAC,CAAC,MAAM,CAAC,CAAC;AAE5E,MAAM,MAAM,QAAQ,GAAG;IACrB,IAAI,EAAE,MAAM,CAAC;IACb,IAAI,EAAE,MAAM,CAAC;IACb,MAAM,EAAE,UAAU,CAAC;IACnB,eAAe,EAAE,MAAM,GAAG,IAAI,CAAC;IAC/B,WAAW,EAAE,eAAe,GAAG,eAAe,CAAC;IAC/C,eAAe,EAAE,MAAM,CAAC;CACzB,CAAC;AAEF,MAAM,MAAM,gBAAgB,GAAG;IAE7B,GAAG,EAAE,MAAM,GAAG,IAAI,CAAC;IACnB,MAAM,EAAE,sBAAsB,CAAC;IAC/B,QAAQ,EAAE,OAAO,CAAC;IAClB,oBAAoB,EAAE,MAAM,GAAG,IAAI,CAAC;IACpC,gBAAgB,EAAE,MAAM,GAAG,IAAI,CAAC;IAChC,SAAS,EAAE,MAAM,GAAG,IAAI,CAAC;IACzB,OAAO,EAAE,MAAM,GAAG,IAAI,CAAC;IACvB,mBAAmB,EAAE,MAAM,GAAG,IAAI,CAAC;IACnC,IAAI,EAAE,QAAQ,CAAC;CAChB,CAAC;AAEF,MAAM,MAAM,kBAAkB,GAAG;IAC/B,QAAQ,EAAE,MAAM,CAAC;IACjB,QAAQ,EAAE,MAAM,CAAC;IACjB,MAAM,EAAE,MAAM,CAAC;CAChB,CAAC\"}"},"dts":{"name":"/Users/edouardwautier/Projects/dust/types/node_modules/.cache/rollup-plugin-typescript2/placeholder/front/plan.d.ts","writeByteOrderMark":false,"text":"export type MaxMessagesTimeframeType = \"day\" | \"lifetime\";\n/**\n *  Expresses limits for usage of the product\n * Any positive number enforces the limit, -1 means no limit.\n * */\nexport type ManageDataSourcesLimitsType = {\n    isConfluenceAllowed: boolean;\n    isSlackAllowed: boolean;\n    isNotionAllowed: boolean;\n    isGoogleDriveAllowed: boolean;\n    isGithubAllowed: boolean;\n    isIntercomAllowed: boolean;\n    isWebCrawlerAllowed: boolean;\n};\nexport type LimitsType = {\n    assistant: {\n        isSlackBotAllowed: boolean;\n        maxMessages: number;\n        maxMessagesTimeframe: MaxMessagesTimeframeType;\n    };\n    connections: ManageDataSourcesLimitsType;\n    dataSources: {\n        count: number;\n        documents: {\n            count: number;\n            sizeMb: number;\n        };\n    };\n    users: {\n        maxUsers: number;\n    };\n    canUseProduct: boolean;\n};\nexport declare const FREE_BILLING_TYPES: readonly [\"free\"];\nexport declare const PAID_BILLING_TYPES: readonly [\"fixed\", \"monthly_active_users\", \"per_seat\"];\nexport type FreeBillingType = (typeof FREE_BILLING_TYPES)[number];\nexport type PaidBillingType = (typeof PAID_BILLING_TYPES)[number];\nexport declare const SUBSCRIPTION_STATUSES: readonly [\"active\", \"ended\", \"ended_backend_only\"];\nexport type SubscriptionStatusType = (typeof SUBSCRIPTION_STATUSES)[number];\nexport type PlanType = {\n    code: string;\n    name: string;\n    limits: LimitsType;\n    stripeProductId: string | null;\n    billingType: FreeBillingType | PaidBillingType;\n    trialPeriodDays: number;\n};\nexport type SubscriptionType = {\n    sId: string | null;\n    status: SubscriptionStatusType;\n    trialing: boolean;\n    stripeSubscriptionId: string | null;\n    stripeCustomerId: string | null;\n    startDate: number | null;\n    endDate: number | null;\n    paymentFailingSince: number | null;\n    plan: PlanType;\n};\nexport type PlanInvitationType = {\n    planCode: string;\n    planName: string;\n    secret: string;\n};\n//# sourceMappingURL=plan.d.ts.map"}}
