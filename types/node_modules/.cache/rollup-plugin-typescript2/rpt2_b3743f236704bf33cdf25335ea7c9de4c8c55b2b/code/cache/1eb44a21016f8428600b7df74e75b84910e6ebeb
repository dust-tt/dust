{"code":"import * as t from \"io-ts\";\nimport { ParsedNotionDatabaseSchema } from \"../notion\";\nexport const ConnectorsCommandSchema = t.type({\n    majorCommand: t.literal(\"connectors\"),\n    command: t.union([\n        t.literal(\"stop\"),\n        t.literal(\"delete\"),\n        t.literal(\"resume\"),\n        t.literal(\"full-resync\"),\n        t.literal(\"set-error\"),\n        t.literal(\"restart\"),\n    ]),\n    args: t.record(t.string, t.union([t.string, t.undefined])),\n});\nexport const GithubCommandSchema = t.type({\n    majorCommand: t.literal(\"github\"),\n    command: t.union([t.literal(\"resync-repo\"), t.literal(\"code-sync\")]),\n    args: t.record(t.string, t.union([t.string, t.undefined])),\n});\nexport const NotionCommandSchema = t.type({\n    majorCommand: t.literal(\"notion\"),\n    command: t.union([\n        t.literal(\"restart-all\"),\n        t.literal(\"skip-page\"),\n        t.literal(\"skip-database\"),\n        t.literal(\"upsert-page\"),\n        t.literal(\"upsert-database\"),\n        t.literal(\"search-pages\"),\n        t.literal(\"check-url\"),\n        t.literal(\"me\"),\n        t.literal(\"stop-all-garbage-collectors\"),\n        t.literal(\"update-parents-fields\"),\n    ]),\n    args: t.record(t.string, t.union([t.string, t.undefined])),\n});\nexport const GoogleDriveCommandSchema = t.type({\n    majorCommand: t.literal(\"google_drive\"),\n    command: t.union([\n        t.literal(\"garbage-collect-all\"),\n        t.literal(\"check-file\"),\n        t.literal(\"restart-google-webhooks\"),\n        t.literal(\"start-incremental-sync\"),\n        t.literal(\"skip-file\"),\n        t.literal(\"register-webhook\"),\n        t.literal(\"register-all-webhooks\"),\n    ]),\n    args: t.record(t.string, t.union([t.string, t.undefined])),\n});\nexport const SlackCommandSchema = t.type({\n    majorCommand: t.literal(\"slack\"),\n    command: t.union([\n        t.literal(\"enable-bot\"),\n        t.literal(\"sync-channel\"),\n        t.literal(\"sync-thread\"),\n        t.literal(\"uninstall-for-unknown-team-ids\"),\n        t.literal(\"whitelist-domains\"),\n        t.literal(\"whitelist-bot\"),\n    ]),\n    args: t.record(t.string, t.union([t.string, t.undefined])),\n});\nexport const BatchCommandSchema = t.type({\n    majorCommand: t.literal(\"batch\"),\n    command: t.union([t.literal(\"full-resync\"), t.literal(\"restart-all\")]),\n    args: t.record(t.string, t.union([t.string, t.undefined])),\n});\nexport const WebcrawlerCommandSchema = t.type({\n    majorCommand: t.literal(\"webcrawler\"),\n    command: t.literal(\"start-scheduler\"),\n});\nexport const BatchRestartAllResponseSchema = t.type({\n    succeeded: t.number,\n    failed: t.number,\n});\nexport const TemporalCommandSchema = t.type({\n    majorCommand: t.literal(\"temporal\"),\n    command: t.union([\n        t.literal(\"find-unprocessed-workflows\"),\n        t.literal(\"check-queue\"),\n    ]),\n    args: t.record(t.string, t.union([t.string, t.undefined])),\n});\n/**\n * <Intercom>\n */\nexport const IntercomCommandSchema = t.type({\n    majorCommand: t.literal(\"intercom\"),\n    command: t.union([\n        t.literal(\"check-conversation\"),\n        t.literal(\"fetch-conversation\"),\n        t.literal(\"check-missing-conversations\"),\n        t.literal(\"check-teams\"),\n    ]),\n    args: t.type({\n        connectorId: t.number,\n        conversationId: t.union([t.number, t.undefined]),\n        day: t.union([t.string, t.undefined]),\n    }),\n});\nexport const IntercomCheckConversationResponseSchema = t.type({\n    isConversationOnIntercom: t.boolean,\n    isConversationOnDB: t.boolean,\n    conversationTeamIdOnIntercom: t.union([t.string, t.undefined]),\n    conversationTeamIdOnDB: t.union([t.string, t.undefined, t.null]),\n});\nexport const IntercomFetchConversationResponseSchema = t.type({\n    conversation: t.union([t.UnknownRecord, t.null]), // intercom type, can't be iots'd\n});\nexport const IntercomCheckTeamsResponseSchema = t.type({\n    teams: t.array(t.type({\n        teamId: t.string,\n        name: t.string,\n        isTeamOnDB: t.boolean,\n    })),\n});\nexport const IntercomCheckMissingConversationsResponseSchema = t.type({\n    missingConversations: t.array(t.type({\n        conversationId: t.string,\n        teamId: t.union([t.number, t.null]),\n        open: t.boolean,\n        createdAt: t.number,\n    })),\n});\n/**\n * </ Intercom>\n */\nexport const AdminCommandSchema = t.union([\n    ConnectorsCommandSchema,\n    GithubCommandSchema,\n    NotionCommandSchema,\n    GoogleDriveCommandSchema,\n    SlackCommandSchema,\n    BatchCommandSchema,\n    WebcrawlerCommandSchema,\n    TemporalCommandSchema,\n    IntercomCommandSchema,\n]);\nexport const AdminSuccessResponseSchema = t.type({\n    success: t.literal(true),\n});\nexport const NotionUpsertResponseSchema = t.type({\n    workflowId: t.string,\n    workflowUrl: t.union([t.string, t.undefined]),\n});\nexport const NotionSearchPagesResponseSchema = t.type({\n    pages: t.array(t.type({\n        id: t.string,\n        title: t.union([t.string, t.undefined]),\n        type: t.union([t.literal(\"page\"), t.literal(\"database\")]),\n        isSkipped: t.boolean,\n        isFull: t.boolean,\n    })),\n});\nexport const NotionCheckUrlResponseSchema = t.union([\n    t.type({\n        page: t.UnknownRecord,\n        db: t.null,\n    }),\n    t.type({\n        page: t.null,\n        db: ParsedNotionDatabaseSchema,\n    }),\n    t.type({\n        page: t.null,\n        db: t.null,\n    }),\n]);\nexport const NotionMeResponseSchema = t.type({\n    me: t.UnknownRecord,\n    botOwner: t.UnknownRecord, // notion type, can't be iots'd\n});\nexport const GoogleDriveCheckFileResponseSchema = t.type({\n    status: t.number,\n    // all literals from js `typeof`\n    type: t.union([\n        t.literal(\"undefined\"),\n        t.literal(\"object\"),\n        t.literal(\"boolean\"),\n        t.literal(\"number\"),\n        t.literal(\"string\"),\n        t.literal(\"function\"),\n        t.literal(\"symbol\"),\n        t.literal(\"bigint\"),\n    ]),\n    content: t.unknown, // google drive type, can't be iots'd\n});\nexport const TemporalCheckQueueResponseSchema = t.type({\n    taskQueue: t.UnknownRecord, // temporal type, can't be iots'd\n});\nexport const TemporalUnprocessedWorkflowsResponseSchema = t.type({\n    queuesAndPollers: t.array(t.type({ queue: t.string, pollers: t.number })),\n    unprocessedQueues: t.array(t.string),\n});\nexport const AdminResponseSchema = t.union([\n    AdminSuccessResponseSchema,\n    BatchRestartAllResponseSchema,\n    NotionUpsertResponseSchema,\n    NotionSearchPagesResponseSchema,\n    NotionCheckUrlResponseSchema,\n    NotionMeResponseSchema,\n    GoogleDriveCheckFileResponseSchema,\n    TemporalCheckQueueResponseSchema,\n    TemporalUnprocessedWorkflowsResponseSchema,\n    IntercomCheckConversationResponseSchema,\n    IntercomFetchConversationResponseSchema,\n    IntercomCheckTeamsResponseSchema,\n    IntercomCheckMissingConversationsResponseSchema,\n]);\n//# sourceMappingURL=cli.js.map","references":["/Users/edouardwautier/Projects/dust/types/node_modules/io-ts/lib/index.d.ts","/Users/edouardwautier/Projects/dust/types/src/connectors/notion.ts"],"map":"{\"version\":3,\"file\":\"cli.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/connectors/admin/cli.ts\"],\"names\":[],\"mappings\":\"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\"}","dtsmap":{"name":"/Users/edouardwautier/Projects/dust/types/node_modules/.cache/rollup-plugin-typescript2/placeholder/connectors/admin/cli.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"cli.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/connectors/admin/cli.ts\"],\"names\":[],\"mappings\":\"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\"}"},"dts":{"name":"/Users/edouardwautier/Projects/dust/types/node_modules/.cache/rollup-plugin-typescript2/placeholder/connectors/admin/cli.d.ts","writeByteOrderMark":false,"text":"import * as t from \"io-ts\";\nexport declare const ConnectorsCommandSchema: t.TypeC<{\n    majorCommand: t.LiteralC<\"connectors\">;\n    command: t.UnionC<[t.LiteralC<\"stop\">, t.LiteralC<\"delete\">, t.LiteralC<\"resume\">, t.LiteralC<\"full-resync\">, t.LiteralC<\"set-error\">, t.LiteralC<\"restart\">]>;\n    args: t.RecordC<t.StringC, t.UnionC<[t.StringC, t.UndefinedC]>>;\n}>;\nexport type ConnectorsCommandType = t.TypeOf<typeof ConnectorsCommandSchema>;\nexport declare const GithubCommandSchema: t.TypeC<{\n    majorCommand: t.LiteralC<\"github\">;\n    command: t.UnionC<[t.LiteralC<\"resync-repo\">, t.LiteralC<\"code-sync\">]>;\n    args: t.RecordC<t.StringC, t.UnionC<[t.StringC, t.UndefinedC]>>;\n}>;\nexport type GithubCommandType = t.TypeOf<typeof GithubCommandSchema>;\nexport declare const NotionCommandSchema: t.TypeC<{\n    majorCommand: t.LiteralC<\"notion\">;\n    command: t.UnionC<[t.LiteralC<\"restart-all\">, t.LiteralC<\"skip-page\">, t.LiteralC<\"skip-database\">, t.LiteralC<\"upsert-page\">, t.LiteralC<\"upsert-database\">, t.LiteralC<\"search-pages\">, t.LiteralC<\"check-url\">, t.LiteralC<\"me\">, t.LiteralC<\"stop-all-garbage-collectors\">, t.LiteralC<\"update-parents-fields\">]>;\n    args: t.RecordC<t.StringC, t.UnionC<[t.StringC, t.UndefinedC]>>;\n}>;\nexport type NotionCommandType = t.TypeOf<typeof NotionCommandSchema>;\nexport declare const GoogleDriveCommandSchema: t.TypeC<{\n    majorCommand: t.LiteralC<\"google_drive\">;\n    command: t.UnionC<[t.LiteralC<\"garbage-collect-all\">, t.LiteralC<\"check-file\">, t.LiteralC<\"restart-google-webhooks\">, t.LiteralC<\"start-incremental-sync\">, t.LiteralC<\"skip-file\">, t.LiteralC<\"register-webhook\">, t.LiteralC<\"register-all-webhooks\">]>;\n    args: t.RecordC<t.StringC, t.UnionC<[t.StringC, t.UndefinedC]>>;\n}>;\nexport type GoogleDriveCommandType = t.TypeOf<typeof GoogleDriveCommandSchema>;\nexport declare const SlackCommandSchema: t.TypeC<{\n    majorCommand: t.LiteralC<\"slack\">;\n    command: t.UnionC<[t.LiteralC<\"enable-bot\">, t.LiteralC<\"sync-channel\">, t.LiteralC<\"sync-thread\">, t.LiteralC<\"uninstall-for-unknown-team-ids\">, t.LiteralC<\"whitelist-domains\">, t.LiteralC<\"whitelist-bot\">]>;\n    args: t.RecordC<t.StringC, t.UnionC<[t.StringC, t.UndefinedC]>>;\n}>;\nexport type SlackCommandType = t.TypeOf<typeof SlackCommandSchema>;\nexport declare const BatchCommandSchema: t.TypeC<{\n    majorCommand: t.LiteralC<\"batch\">;\n    command: t.UnionC<[t.LiteralC<\"full-resync\">, t.LiteralC<\"restart-all\">]>;\n    args: t.RecordC<t.StringC, t.UnionC<[t.StringC, t.UndefinedC]>>;\n}>;\nexport type BatchCommandType = t.TypeOf<typeof BatchCommandSchema>;\nexport declare const WebcrawlerCommandSchema: t.TypeC<{\n    majorCommand: t.LiteralC<\"webcrawler\">;\n    command: t.LiteralC<\"start-scheduler\">;\n}>;\nexport declare const BatchRestartAllResponseSchema: t.TypeC<{\n    succeeded: t.NumberC;\n    failed: t.NumberC;\n}>;\nexport type BatchRestartAllResponseType = t.TypeOf<typeof BatchRestartAllResponseSchema>;\nexport type WebcrawlerCommandType = t.TypeOf<typeof WebcrawlerCommandSchema>;\nexport declare const TemporalCommandSchema: t.TypeC<{\n    majorCommand: t.LiteralC<\"temporal\">;\n    command: t.UnionC<[t.LiteralC<\"find-unprocessed-workflows\">, t.LiteralC<\"check-queue\">]>;\n    args: t.RecordC<t.StringC, t.UnionC<[t.StringC, t.UndefinedC]>>;\n}>;\nexport type TemporalCommandType = t.TypeOf<typeof TemporalCommandSchema>;\n/**\n * <Intercom>\n */\nexport declare const IntercomCommandSchema: t.TypeC<{\n    majorCommand: t.LiteralC<\"intercom\">;\n    command: t.UnionC<[t.LiteralC<\"check-conversation\">, t.LiteralC<\"fetch-conversation\">, t.LiteralC<\"check-missing-conversations\">, t.LiteralC<\"check-teams\">]>;\n    args: t.TypeC<{\n        connectorId: t.NumberC;\n        conversationId: t.UnionC<[t.NumberC, t.UndefinedC]>;\n        day: t.UnionC<[t.StringC, t.UndefinedC]>;\n    }>;\n}>;\nexport type IntercomCommandType = t.TypeOf<typeof IntercomCommandSchema>;\nexport declare const IntercomCheckConversationResponseSchema: t.TypeC<{\n    isConversationOnIntercom: t.BooleanC;\n    isConversationOnDB: t.BooleanC;\n    conversationTeamIdOnIntercom: t.UnionC<[t.StringC, t.UndefinedC]>;\n    conversationTeamIdOnDB: t.UnionC<[t.StringC, t.UndefinedC, t.NullC]>;\n}>;\nexport type IntercomCheckConversationResponseType = t.TypeOf<typeof IntercomCheckConversationResponseSchema>;\nexport declare const IntercomFetchConversationResponseSchema: t.TypeC<{\n    conversation: t.UnionC<[t.UnknownRecordC, t.NullC]>;\n}>;\nexport type IntercomFetchConversationResponseType = t.TypeOf<typeof IntercomFetchConversationResponseSchema>;\nexport declare const IntercomCheckTeamsResponseSchema: t.TypeC<{\n    teams: t.ArrayC<t.TypeC<{\n        teamId: t.StringC;\n        name: t.StringC;\n        isTeamOnDB: t.BooleanC;\n    }>>;\n}>;\nexport type IntercomCheckTeamsResponseType = t.TypeOf<typeof IntercomCheckTeamsResponseSchema>;\nexport declare const IntercomCheckMissingConversationsResponseSchema: t.TypeC<{\n    missingConversations: t.ArrayC<t.TypeC<{\n        conversationId: t.StringC;\n        teamId: t.UnionC<[t.NumberC, t.NullC]>;\n        open: t.BooleanC;\n        createdAt: t.NumberC;\n    }>>;\n}>;\nexport type IntercomCheckMissingConversationsResponseType = t.TypeOf<typeof IntercomCheckMissingConversationsResponseSchema>;\n/**\n * </ Intercom>\n */\nexport declare const AdminCommandSchema: t.UnionC<[t.TypeC<{\n    majorCommand: t.LiteralC<\"connectors\">;\n    command: t.UnionC<[t.LiteralC<\"stop\">, t.LiteralC<\"delete\">, t.LiteralC<\"resume\">, t.LiteralC<\"full-resync\">, t.LiteralC<\"set-error\">, t.LiteralC<\"restart\">]>;\n    args: t.RecordC<t.StringC, t.UnionC<[t.StringC, t.UndefinedC]>>;\n}>, t.TypeC<{\n    majorCommand: t.LiteralC<\"github\">;\n    command: t.UnionC<[t.LiteralC<\"resync-repo\">, t.LiteralC<\"code-sync\">]>;\n    args: t.RecordC<t.StringC, t.UnionC<[t.StringC, t.UndefinedC]>>;\n}>, t.TypeC<{\n    majorCommand: t.LiteralC<\"notion\">;\n    command: t.UnionC<[t.LiteralC<\"restart-all\">, t.LiteralC<\"skip-page\">, t.LiteralC<\"skip-database\">, t.LiteralC<\"upsert-page\">, t.LiteralC<\"upsert-database\">, t.LiteralC<\"search-pages\">, t.LiteralC<\"check-url\">, t.LiteralC<\"me\">, t.LiteralC<\"stop-all-garbage-collectors\">, t.LiteralC<\"update-parents-fields\">]>;\n    args: t.RecordC<t.StringC, t.UnionC<[t.StringC, t.UndefinedC]>>;\n}>, t.TypeC<{\n    majorCommand: t.LiteralC<\"google_drive\">;\n    command: t.UnionC<[t.LiteralC<\"garbage-collect-all\">, t.LiteralC<\"check-file\">, t.LiteralC<\"restart-google-webhooks\">, t.LiteralC<\"start-incremental-sync\">, t.LiteralC<\"skip-file\">, t.LiteralC<\"register-webhook\">, t.LiteralC<\"register-all-webhooks\">]>;\n    args: t.RecordC<t.StringC, t.UnionC<[t.StringC, t.UndefinedC]>>;\n}>, t.TypeC<{\n    majorCommand: t.LiteralC<\"slack\">;\n    command: t.UnionC<[t.LiteralC<\"enable-bot\">, t.LiteralC<\"sync-channel\">, t.LiteralC<\"sync-thread\">, t.LiteralC<\"uninstall-for-unknown-team-ids\">, t.LiteralC<\"whitelist-domains\">, t.LiteralC<\"whitelist-bot\">]>;\n    args: t.RecordC<t.StringC, t.UnionC<[t.StringC, t.UndefinedC]>>;\n}>, t.TypeC<{\n    majorCommand: t.LiteralC<\"batch\">;\n    command: t.UnionC<[t.LiteralC<\"full-resync\">, t.LiteralC<\"restart-all\">]>;\n    args: t.RecordC<t.StringC, t.UnionC<[t.StringC, t.UndefinedC]>>;\n}>, t.TypeC<{\n    majorCommand: t.LiteralC<\"webcrawler\">;\n    command: t.LiteralC<\"start-scheduler\">;\n}>, t.TypeC<{\n    majorCommand: t.LiteralC<\"temporal\">;\n    command: t.UnionC<[t.LiteralC<\"find-unprocessed-workflows\">, t.LiteralC<\"check-queue\">]>;\n    args: t.RecordC<t.StringC, t.UnionC<[t.StringC, t.UndefinedC]>>;\n}>, t.TypeC<{\n    majorCommand: t.LiteralC<\"intercom\">;\n    command: t.UnionC<[t.LiteralC<\"check-conversation\">, t.LiteralC<\"fetch-conversation\">, t.LiteralC<\"check-missing-conversations\">, t.LiteralC<\"check-teams\">]>;\n    args: t.TypeC<{\n        connectorId: t.NumberC;\n        conversationId: t.UnionC<[t.NumberC, t.UndefinedC]>;\n        day: t.UnionC<[t.StringC, t.UndefinedC]>;\n    }>;\n}>]>;\nexport type AdminCommandType = t.TypeOf<typeof AdminCommandSchema>;\nexport declare const AdminSuccessResponseSchema: t.TypeC<{\n    success: t.LiteralC<true>;\n}>;\nexport type AdminSuccessResponseType = t.TypeOf<typeof AdminSuccessResponseSchema>;\nexport declare const NotionUpsertResponseSchema: t.TypeC<{\n    workflowId: t.StringC;\n    workflowUrl: t.UnionC<[t.StringC, t.UndefinedC]>;\n}>;\nexport type NotionUpsertResponseType = t.TypeOf<typeof NotionUpsertResponseSchema>;\nexport declare const NotionSearchPagesResponseSchema: t.TypeC<{\n    pages: t.ArrayC<t.TypeC<{\n        id: t.StringC;\n        title: t.UnionC<[t.StringC, t.UndefinedC]>;\n        type: t.UnionC<[t.LiteralC<\"page\">, t.LiteralC<\"database\">]>;\n        isSkipped: t.BooleanC;\n        isFull: t.BooleanC;\n    }>>;\n}>;\nexport type NotionSearchPagesResponseType = t.TypeOf<typeof NotionSearchPagesResponseSchema>;\nexport declare const NotionCheckUrlResponseSchema: t.UnionC<[t.TypeC<{\n    page: t.UnknownRecordC;\n    db: t.NullC;\n}>, t.TypeC<{\n    page: t.NullC;\n    db: t.TypeC<{\n        id: t.StringC;\n        url: t.StringC;\n        title: t.UnionC<[t.StringC, t.UndefinedC]>;\n        parentType: t.UnionC<[t.LiteralC<\"database\">, t.LiteralC<\"page\">, t.LiteralC<\"block\">, t.LiteralC<\"workspace\">]>;\n        parentId: t.StringC;\n    }>;\n}>, t.TypeC<{\n    page: t.NullC;\n    db: t.NullC;\n}>]>;\nexport type NotionCheckUrlResponseType = t.TypeOf<typeof NotionCheckUrlResponseSchema>;\nexport declare const NotionMeResponseSchema: t.TypeC<{\n    me: t.UnknownRecordC;\n    botOwner: t.UnknownRecordC;\n}>;\nexport type NotionMeResponseType = t.TypeOf<typeof NotionMeResponseSchema>;\nexport declare const GoogleDriveCheckFileResponseSchema: t.TypeC<{\n    status: t.NumberC;\n    type: t.UnionC<[t.LiteralC<\"undefined\">, t.LiteralC<\"object\">, t.LiteralC<\"boolean\">, t.LiteralC<\"number\">, t.LiteralC<\"string\">, t.LiteralC<\"function\">, t.LiteralC<\"symbol\">, t.LiteralC<\"bigint\">]>;\n    content: t.UnknownC;\n}>;\nexport type GoogleDriveCheckFileResponseType = t.TypeOf<typeof GoogleDriveCheckFileResponseSchema>;\nexport declare const TemporalCheckQueueResponseSchema: t.TypeC<{\n    taskQueue: t.UnknownRecordC;\n}>;\nexport type TemporalCheckQueueResponseType = t.TypeOf<typeof TemporalCheckQueueResponseSchema>;\nexport declare const TemporalUnprocessedWorkflowsResponseSchema: t.TypeC<{\n    queuesAndPollers: t.ArrayC<t.TypeC<{\n        queue: t.StringC;\n        pollers: t.NumberC;\n    }>>;\n    unprocessedQueues: t.ArrayC<t.StringC>;\n}>;\nexport type TemporalUnprocessedWorkflowsResponseType = t.TypeOf<typeof TemporalUnprocessedWorkflowsResponseSchema>;\nexport declare const AdminResponseSchema: t.UnionC<[t.TypeC<{\n    success: t.LiteralC<true>;\n}>, t.TypeC<{\n    succeeded: t.NumberC;\n    failed: t.NumberC;\n}>, t.TypeC<{\n    workflowId: t.StringC;\n    workflowUrl: t.UnionC<[t.StringC, t.UndefinedC]>;\n}>, t.TypeC<{\n    pages: t.ArrayC<t.TypeC<{\n        id: t.StringC;\n        title: t.UnionC<[t.StringC, t.UndefinedC]>;\n        type: t.UnionC<[t.LiteralC<\"page\">, t.LiteralC<\"database\">]>;\n        isSkipped: t.BooleanC;\n        isFull: t.BooleanC;\n    }>>;\n}>, t.UnionC<[t.TypeC<{\n    page: t.UnknownRecordC;\n    db: t.NullC;\n}>, t.TypeC<{\n    page: t.NullC;\n    db: t.TypeC<{\n        id: t.StringC;\n        url: t.StringC;\n        title: t.UnionC<[t.StringC, t.UndefinedC]>;\n        parentType: t.UnionC<[t.LiteralC<\"database\">, t.LiteralC<\"page\">, t.LiteralC<\"block\">, t.LiteralC<\"workspace\">]>;\n        parentId: t.StringC;\n    }>;\n}>, t.TypeC<{\n    page: t.NullC;\n    db: t.NullC;\n}>]>, t.TypeC<{\n    me: t.UnknownRecordC;\n    botOwner: t.UnknownRecordC;\n}>, t.TypeC<{\n    status: t.NumberC;\n    type: t.UnionC<[t.LiteralC<\"undefined\">, t.LiteralC<\"object\">, t.LiteralC<\"boolean\">, t.LiteralC<\"number\">, t.LiteralC<\"string\">, t.LiteralC<\"function\">, t.LiteralC<\"symbol\">, t.LiteralC<\"bigint\">]>;\n    content: t.UnknownC;\n}>, t.TypeC<{\n    taskQueue: t.UnknownRecordC;\n}>, t.TypeC<{\n    queuesAndPollers: t.ArrayC<t.TypeC<{\n        queue: t.StringC;\n        pollers: t.NumberC;\n    }>>;\n    unprocessedQueues: t.ArrayC<t.StringC>;\n}>, t.TypeC<{\n    isConversationOnIntercom: t.BooleanC;\n    isConversationOnDB: t.BooleanC;\n    conversationTeamIdOnIntercom: t.UnionC<[t.StringC, t.UndefinedC]>;\n    conversationTeamIdOnDB: t.UnionC<[t.StringC, t.UndefinedC, t.NullC]>;\n}>, t.TypeC<{\n    conversation: t.UnionC<[t.UnknownRecordC, t.NullC]>;\n}>, t.TypeC<{\n    teams: t.ArrayC<t.TypeC<{\n        teamId: t.StringC;\n        name: t.StringC;\n        isTeamOnDB: t.BooleanC;\n    }>>;\n}>, t.TypeC<{\n    missingConversations: t.ArrayC<t.TypeC<{\n        conversationId: t.StringC;\n        teamId: t.UnionC<[t.NumberC, t.NullC]>;\n        open: t.BooleanC;\n        createdAt: t.NumberC;\n    }>>;\n}>]>;\nexport type AdminResponseType = t.TypeOf<typeof AdminResponseSchema>;\n//# sourceMappingURL=cli.d.ts.map"}}
