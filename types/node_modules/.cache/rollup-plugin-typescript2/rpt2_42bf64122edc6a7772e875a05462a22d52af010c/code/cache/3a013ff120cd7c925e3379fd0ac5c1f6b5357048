{"code":"const { DUST_MANAGED_OPENAI_API_KEY = \"\", DUST_MANAGED_ANTHROPIC_API_KEY = \"\", DUST_MANAGED_TEXTSYNTH_API_KEY = \"\", DUST_MANAGED_AZURE_OPENAI_API_KEY = \"\", DUST_MANAGED_AZURE_OPENAI_ENDPOINT = \"\", } = process.env;\nexport const credentialsFromProviders = (providers) => {\n    const credentials = {};\n    providers.forEach((provider) => {\n        const config = JSON.parse(provider.config);\n        switch (provider.providerId) {\n            case \"openai\":\n                credentials[\"OPENAI_API_KEY\"] = config.api_key;\n                break;\n            case \"cohere\":\n                credentials[\"COHERE_API_KEY\"] = config.api_key;\n                break;\n            case \"ai21\":\n                credentials[\"AI21_API_KEY\"] = config.api_key;\n                break;\n            case \"azure_openai\":\n                credentials[\"AZURE_OPENAI_API_KEY\"] = config.api_key;\n                credentials[\"AZURE_OPENAI_ENDPOINT\"] = config.endpoint;\n                break;\n            case \"anthropic\":\n                credentials[\"ANTHROPIC_API_KEY\"] = config.api_key;\n                break;\n            case \"textsynth\":\n                credentials[\"TEXTSYNTH_API_KEY\"] = config.api_key;\n                break;\n            case \"serpapi\":\n                credentials[\"SERP_API_KEY\"] = config.api_key;\n                break;\n            case \"serper\":\n                credentials[\"SERPER_API_KEY\"] = config.api_key;\n                break;\n            case \"browserlessapi\":\n                credentials[\"BROWSERLESS_API_KEY\"] = config.api_key;\n                break;\n        }\n    });\n    return credentials;\n};\nexport const dustManagedCredentials = () => {\n    return {\n        OPENAI_API_KEY: DUST_MANAGED_OPENAI_API_KEY,\n        ANTHROPIC_API_KEY: DUST_MANAGED_ANTHROPIC_API_KEY,\n        TEXTSYNTH_API_KEY: DUST_MANAGED_TEXTSYNTH_API_KEY,\n        AZURE_OPENAI_API_KEY: DUST_MANAGED_AZURE_OPENAI_API_KEY,\n        AZURE_OPENAI_ENDPOINT: DUST_MANAGED_AZURE_OPENAI_ENDPOINT,\n    };\n};\n//# sourceMappingURL=credentials.js.map","references":["/Users/edouardwautier/Projects/dust/types/src/front/provider.ts"],"map":"{\"version\":3,\"file\":\"credentials.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/front/lib/api/credentials.ts\"],\"names\":[],\"mappings\":\"AAEA,MAAM,EACJ,2BAA2B,GAAG,EAAE,EAChC,8BAA8B,GAAG,EAAE,EACnC,8BAA8B,GAAG,EAAE,EACnC,iCAAiC,GAAG,EAAE,EACtC,kCAAkC,GAAG,EAAE,GACxC,GAAG,OAAO,CAAC,GAAG,CAAC;AAEhB,MAAM,CAAC,MAAM,wBAAwB,GAAG,CACtC,SAAyB,EACR,EAAE;IACnB,MAAM,WAAW,GAAoB,EAAE,CAAC;IAExC,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;QAC7B,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAGxC,CAAC;QAEF,QAAQ,QAAQ,CAAC,UAAU,EAAE;YAC3B,KAAK,QAAQ;gBACX,WAAW,CAAC,gBAAgB,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC;gBAC/C,MAAM;YACR,KAAK,QAAQ;gBACX,WAAW,CAAC,gBAAgB,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC;gBAC/C,MAAM;YACR,KAAK,MAAM;gBACT,WAAW,CAAC,cAAc,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC;gBAC7C,MAAM;YACR,KAAK,cAAc;gBACjB,WAAW,CAAC,sBAAsB,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC;gBACrD,WAAW,CAAC,uBAAuB,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACvD,MAAM;YACR,KAAK,WAAW;gBACd,WAAW,CAAC,mBAAmB,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC;gBAClD,MAAM;YACR,KAAK,WAAW;gBACd,WAAW,CAAC,mBAAmB,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC;gBAClD,MAAM;YACR,KAAK,SAAS;gBACZ,WAAW,CAAC,cAAc,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC;gBAC7C,MAAM;YACR,KAAK,QAAQ;gBACX,WAAW,CAAC,gBAAgB,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC;gBAC/C,MAAM;YACR,KAAK,gBAAgB;gBACnB,WAAW,CAAC,qBAAqB,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC;gBACpD,MAAM;SACT;IACH,CAAC,CAAC,CAAC;IACH,OAAO,WAAW,CAAC;AACrB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,sBAAsB,GAAG,GAAoB,EAAE;IAC1D,OAAO;QACL,cAAc,EAAE,2BAA2B;QAC3C,iBAAiB,EAAE,8BAA8B;QACjD,iBAAiB,EAAE,8BAA8B;QACjD,oBAAoB,EAAE,iCAAiC;QACvD,qBAAqB,EAAE,kCAAkC;KAC1D,CAAC;AACJ,CAAC,CAAC\"}"}
