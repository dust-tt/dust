{"code":"export function renderSchemaPropertiesAsJSONSchema(schema) {\n    let jsonSchema = {};\n    if (schema.length > 0) {\n        schema.forEach((f) => {\n            jsonSchema[f.name] = {\n                type: f.type,\n                description: f.description,\n            };\n        });\n    }\n    else {\n        // Default schema for extraction.\n        jsonSchema = {\n            required_data: {\n                type: \"string\",\n                description: \"Minimal (short and concise) piece of information extracted to follow instructions\",\n            },\n        };\n    }\n    return jsonSchema;\n}\n//# sourceMappingURL=process.js.map","references":["/Users/edouardwautier/Projects/dust/types/src/front/assistant/actions/retrieval.ts","/Users/edouardwautier/Projects/dust/types/src/shared/model_id.ts"],"map":"{\"version\":3,\"file\":\"process.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/front/assistant/actions/process.ts\"],\"names\":[],\"mappings\":\"AAcA,MAAM,UAAU,kCAAkC,CAChD,MAAmC;IAEnC,IAAI,UAAU,GACZ,EAAE,CAAC;IAEL,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;QACrB,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;YACnB,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG;gBACnB,IAAI,EAAE,CAAC,CAAC,IAAI;gBACZ,WAAW,EAAE,CAAC,CAAC,WAAW;aAC3B,CAAC;QACJ,CAAC,CAAC,CAAC;KACJ;SAAM;QACL,iCAAiC;QACjC,UAAU,GAAG;YACX,aAAa,EAAE;gBACb,IAAI,EAAE,QAAQ;gBACd,WAAW,EACT,mFAAmF;aACtF;SACF,CAAC;KACH;IAED,OAAO,UAAU,CAAC;AACpB,CAAC\"}"}
