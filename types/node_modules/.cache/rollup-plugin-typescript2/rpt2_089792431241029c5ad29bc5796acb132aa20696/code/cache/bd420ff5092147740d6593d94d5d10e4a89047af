{"code":"import { redisClient } from \"../shared/redis_client\";\n// Wrapper function to cache the result of a function with Redis.\n// Usage:\n// const cachedFn = cacheWithRedis(fn, (fnArg1, fnArg2, ...) => `${fnArg1}-${fnArg2}`, 60 * 10 * 1000);\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function cacheWithRedis(fn, resolver, ttlMs, redisUri) {\n    if (!redisUri) {\n        const REDIS_CACHE_URI = process.env.REDIS_CACHE_URI;\n        if (!REDIS_CACHE_URI) {\n            throw new Error(\"REDIS_CACHE_URI is not set\");\n        }\n        redisUri = REDIS_CACHE_URI;\n    }\n    if (ttlMs > 60 * 60 * 24 * 1000) {\n        throw new Error(\"ttlMs should be less than 24 hours\");\n    }\n    return async function (...args) {\n        if (!redisUri) {\n            throw new Error(\"redisUrl is not set\");\n        }\n        let redisCli = undefined;\n        try {\n            redisCli = await redisClient(redisUri);\n            const key = `cacheWithRedis-${fn.name}-${resolver(...args)}`;\n            const cacheVal = await redisCli.get(key);\n            if (cacheVal) {\n                return JSON.parse(cacheVal);\n            }\n            const result = await fn(...args);\n            await redisCli.set(key, JSON.stringify(result), {\n                PX: ttlMs,\n            });\n            return result;\n        }\n        finally {\n            if (redisCli) {\n                await redisCli.quit();\n            }\n        }\n    };\n}\n//# sourceMappingURL=cache.js.map","references":["/Users/edouardwautier/Projects/dust/types/src/shared/redis_client.ts"],"map":"{\"version\":3,\"file\":\"cache.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/shared/cache.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAC;AAErD,iEAAiE;AACjE,SAAS;AACT,uGAAuG;AACvG,8DAA8D;AAC9D,MAAM,UAAU,cAAc,CAC5B,EAAK,EACL,QAA4C,EAC5C,KAAa,EACb,QAAiB;IAEjB,IAAI,CAAC,QAAQ,EAAE;QACb,MAAM,eAAe,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;QACpD,IAAI,CAAC,eAAe,EAAE;YACpB,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;SAC/C;QACD,QAAQ,GAAG,eAAe,CAAC;KAC5B;IAED,IAAI,KAAK,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,EAAE;QAC/B,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;KACvD;IAED,OAAO,KAAK,WAAW,GAAG,IAAmB;QAC3C,IAAI,CAAC,QAAQ,EAAE;YACb,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;SACxC;QACD,IAAI,QAAQ,GACV,SAAS,CAAC;QAEZ,IAAI;YACF,QAAQ,GAAG,MAAM,WAAW,CAAC,QAAQ,CAAC,CAAC;YACvC,MAAM,GAAG,GAAG,kBAAkB,EAAE,CAAC,IAAI,IAAI,QAAQ,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;YAC7D,MAAM,QAAQ,GAAG,MAAM,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACzC,IAAI,QAAQ,EAAE;gBACZ,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAA2B,CAAC;aACvD;YAED,MAAM,MAAM,GAAG,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;YACjC,MAAM,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBAC9C,EAAE,EAAE,KAAK;aACV,CAAC,CAAC;YAEH,OAAO,MAAM,CAAC;SACf;gBAAS;YACR,IAAI,QAAQ,EAAE;gBACZ,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;aACvB;SACF;IACH,CAAC,CAAC;AACJ,CAAC\"}","dtsmap":{"name":"/Users/edouardwautier/Projects/dust/types/node_modules/.cache/rollup-plugin-typescript2/placeholder/shared/cache.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"cache.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/shared/cache.ts\"],\"names\":[],\"mappings\":\"AAMA,wBAAgB,cAAc,CAAC,CAAC,SAAS,CAAC,GAAG,IAAI,EAAE,GAAG,EAAE,KAAK,OAAO,CAAC,GAAG,CAAC,EACvE,EAAE,EAAE,CAAC,EACL,QAAQ,EAAE,CAAC,GAAG,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC,KAAK,MAAM,EAC5C,KAAK,EAAE,MAAM,EACb,QAAQ,CAAC,EAAE,MAAM,GAChB,CAAC,GAAG,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAwC7D\"}"},"dts":{"name":"/Users/edouardwautier/Projects/dust/types/node_modules/.cache/rollup-plugin-typescript2/placeholder/shared/cache.d.ts","writeByteOrderMark":false,"text":"export declare function cacheWithRedis<T extends (...args: any[]) => Promise<any>>(fn: T, resolver: (...args: Parameters<T>) => string, ttlMs: number, redisUri?: string): (...args: Parameters<T>) => Promise<Awaited<ReturnType<T>>>;\n//# sourceMappingURL=cache.d.ts.map"}}
