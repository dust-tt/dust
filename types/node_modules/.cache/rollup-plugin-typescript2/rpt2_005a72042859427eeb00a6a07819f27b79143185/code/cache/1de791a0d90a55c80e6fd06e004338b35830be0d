{"code":"import * as t from \"io-ts\";\nexport const WEBCRAWLER_MAX_DEPTH = 5;\nexport const WEBCRAWLER_MAX_PAGES = 512;\nexport const CrawlingModes = [\"child\", \"website\"];\nexport const CrawlingFrequencies = [\n    \"never\",\n    \"daily\",\n    \"weekly\",\n    \"monthly\",\n];\nexport const DepthOptions = [0, 1, 2, 3, 4, 5];\nexport function isDepthOption(value) {\n    return DepthOptions.includes(value);\n}\nexport const WebCrawlerConfigurationTypeSchema = t.type({\n    url: t.string,\n    depth: t.union([\n        t.literal(0),\n        t.literal(1),\n        t.literal(2),\n        t.literal(3),\n        t.literal(4),\n        t.literal(5),\n    ]),\n    maxPageToCrawl: t.number,\n    crawlMode: t.union([t.literal(\"child\"), t.literal(\"website\")]),\n    crawlFrequency: t.union([\n        t.literal(\"never\"),\n        t.literal(\"daily\"),\n        t.literal(\"weekly\"),\n        t.literal(\"monthly\"),\n    ]),\n    headers: t.record(t.string, t.string),\n});\nexport const WebCrawlerHeaderRedactedValue = \"<REDACTED>\";\n//# sourceMappingURL=webcrawler.js.map","references":["/Users/edouardwautier/Projects/dust/types/node_modules/io-ts/lib/index.d.ts"],"map":"{\"version\":3,\"file\":\"webcrawler.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/connectors/webcrawler.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,CAAC,MAAM,OAAO,CAAC;AAE3B,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAAC,CAAC;AACtC,MAAM,CAAC,MAAM,oBAAoB,GAAG,GAAG,CAAC;AAExC,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,OAAO,EAAE,SAAS,CAAU,CAAC;AAG3D,MAAM,CAAC,MAAM,mBAAmB,GAAG;IACjC,OAAO;IACP,OAAO;IACP,QAAQ;IACR,SAAS;CACD,CAAC;AAGX,MAAM,CAAC,MAAM,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAU,CAAC;AAMxD,MAAM,UAAU,aAAa,CAAC,KAAc;IAC1C,OAAO,YAAY,CAAC,QAAQ,CAAC,KAAoB,CAAC,CAAC;AACrD,CAAC;AAED,MAAM,CAAC,MAAM,iCAAiC,GAAG,CAAC,CAAC,IAAI,CAAC;IACtD,GAAG,EAAE,CAAC,CAAC,MAAM;IACb,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC;QACb,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;KACb,CAAC;IACF,cAAc,EAAE,CAAC,CAAC,MAAM;IACxB,SAAS,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;IAC9D,cAAc,EAAE,CAAC,CAAC,KAAK,CAAC;QACtB,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC;QAClB,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC;QAClB,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC;QACnB,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC;KACrB,CAAC;IACF,OAAO,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC;CACtC,CAAC,CAAC;AAkBH,MAAM,CAAC,MAAM,6BAA6B,GAAG,YAAY,CAAC\"}","dtsmap":{"name":"/Users/edouardwautier/Projects/dust/types/node_modules/.cache/rollup-plugin-typescript2/placeholder/connectors/webcrawler.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"webcrawler.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/connectors/webcrawler.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,CAAC,MAAM,OAAO,CAAC;AAE3B,eAAO,MAAM,oBAAoB,IAAI,CAAC;AACtC,eAAO,MAAM,oBAAoB,MAAM,CAAC;AAExC,eAAO,MAAM,aAAa,+BAAgC,CAAC;AAC3D,MAAM,MAAM,YAAY,GAAG,CAAC,OAAO,aAAa,CAAC,CAAC,MAAM,CAAC,CAAC;AAE1D,eAAO,MAAM,mBAAmB,kDAKtB,CAAC;AACX,MAAM,MAAM,iBAAiB,GAAG,CAAC,OAAO,mBAAmB,CAAC,CAAC,MAAM,CAAC,CAAC;AAErE,eAAO,MAAM,YAAY,6BAA8B,CAAC;AACxD,MAAM,MAAM,WAAW,GAAG,CAAC,OAAO,YAAY,CAAC,CAAC,MAAM,CAAC,CAAC;AACxD,MAAM,MAAM,2BAA2B,GAAG,CAAC,CAAC,MAAM,CAChD,OAAO,iCAAiC,CACzC,CAAC;AAEF,wBAAgB,aAAa,CAAC,KAAK,EAAE,OAAO,GAAG,KAAK,IAAI,WAAW,CAElE;AAED,eAAO,MAAM,iCAAiC;;;;;;;EAmB5C,CAAC;AAEH,MAAM,MAAM,uBAAuB,GAAG,CAAC,CAAC,MAAM,CAC5C,OAAO,iCAAiC,CACzC,CAAC;AAEF,MAAM,MAAM,sBAAsB,GAAG,2BAA2B,GAAG,IAAI,CAAC;AAExE,MAAM,MAAM,uBAAuB,GAAG;IACpC,UAAU,EAAE,2BAA2B,CAAC;IACxC,MAAM,EAAE,IAAI,CAAC;IACb,KAAK,EAAE,IAAI,CAAC;IACZ,YAAY,EAAE,IAAI,CAAC;IACnB,MAAM,EAAE,IAAI,CAAC;IACb,UAAU,EAAE,IAAI,CAAC;IACjB,QAAQ,EAAE,IAAI,CAAC;CAChB,CAAC;AAEF,eAAO,MAAM,6BAA6B,eAAe,CAAC\"}"},"dts":{"name":"/Users/edouardwautier/Projects/dust/types/node_modules/.cache/rollup-plugin-typescript2/placeholder/connectors/webcrawler.d.ts","writeByteOrderMark":false,"text":"import * as t from \"io-ts\";\nexport declare const WEBCRAWLER_MAX_DEPTH = 5;\nexport declare const WEBCRAWLER_MAX_PAGES = 512;\nexport declare const CrawlingModes: readonly [\"child\", \"website\"];\nexport type CrawlingMode = (typeof CrawlingModes)[number];\nexport declare const CrawlingFrequencies: readonly [\"never\", \"daily\", \"weekly\", \"monthly\"];\nexport type CrawlingFrequency = (typeof CrawlingFrequencies)[number];\nexport declare const DepthOptions: readonly [0, 1, 2, 3, 4, 5];\nexport type DepthOption = (typeof DepthOptions)[number];\nexport type WebCrawlerConfigurationType = t.TypeOf<typeof WebCrawlerConfigurationTypeSchema>;\nexport declare function isDepthOption(value: unknown): value is DepthOption;\nexport declare const WebCrawlerConfigurationTypeSchema: t.TypeC<{\n    url: t.StringC;\n    depth: t.UnionC<[t.LiteralC<0>, t.LiteralC<1>, t.LiteralC<2>, t.LiteralC<3>, t.LiteralC<4>, t.LiteralC<5>]>;\n    maxPageToCrawl: t.NumberC;\n    crawlMode: t.UnionC<[t.LiteralC<\"child\">, t.LiteralC<\"website\">]>;\n    crawlFrequency: t.UnionC<[t.LiteralC<\"never\">, t.LiteralC<\"daily\">, t.LiteralC<\"weekly\">, t.LiteralC<\"monthly\">]>;\n    headers: t.RecordC<t.StringC, t.StringC>;\n}>;\nexport type WebCrawlerConfiguration = t.TypeOf<typeof WebCrawlerConfigurationTypeSchema>;\nexport type ConnectorConfiguration = WebCrawlerConfigurationType | null;\nexport type ConnectorConfigurations = {\n    webcrawler: WebCrawlerConfigurationType;\n    notion: null;\n    slack: null;\n    google_drive: null;\n    github: null;\n    confluence: null;\n    intercom: null;\n};\nexport declare const WebCrawlerHeaderRedactedValue = \"<REDACTED>\";\n//# sourceMappingURL=webcrawler.d.ts.map"}}
