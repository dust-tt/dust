{"code":"import { Err, Ok } from \"../../front/lib/result\";\nconst { CONNECTORS_API = \"http://127.0.0.1:3002\", DUST_CONNECTORS_SECRET = \"\", } = process.env;\nexport const CONNECTOR_PROVIDERS_USING_NANGO = [\n    \"slack\",\n    \"notion\",\n    \"google_drive\",\n    \"intercom\",\n];\nexport function connectorIsUsingNango(provider) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return CONNECTOR_PROVIDERS_USING_NANGO.includes(provider);\n}\nexport class ConnectorsAPI {\n    _logger;\n    constructor(logger) {\n        this._logger = logger;\n    }\n    async createConnector(provider, workspaceId, workspaceAPIKey, dataSourceName, connectionId) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/create/${provider}`, {\n            method: \"POST\",\n            headers: this.getDefaultHeaders(),\n            body: JSON.stringify({\n                workspaceId,\n                workspaceAPIKey,\n                dataSourceName,\n                connectionId,\n            }),\n        });\n        return this._resultFromResponse(res);\n    }\n    async updateConnector({ connectorId, params: { connectionId }, }) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/update/${connectorId}`, {\n            method: \"POST\",\n            headers: this.getDefaultHeaders(),\n            body: JSON.stringify({\n                connectionId,\n            }),\n        });\n        return this._resultFromResponse(res);\n    }\n    async pauseConnector(connectorId) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/pause/${connectorId}`, {\n            method: \"POST\",\n            headers: this.getDefaultHeaders(),\n        });\n        return this._resultFromResponse(res);\n    }\n    async resumeConnector(connectorId) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/resume/${connectorId}`, {\n            method: \"POST\",\n            headers: this.getDefaultHeaders(),\n        });\n        return this._resultFromResponse(res);\n    }\n    async syncConnector(connectorId) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/sync/${connectorId}`, {\n            method: \"POST\",\n            headers: this.getDefaultHeaders(),\n        });\n        return this._resultFromResponse(res);\n    }\n    async deleteConnector(connectorId, force = false) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/delete/${connectorId}?force=${force ? \"true\" : \"false\"}`, {\n            method: \"DELETE\",\n            headers: this.getDefaultHeaders(),\n        });\n        return this._resultFromResponse(res);\n    }\n    async getConnectorPermissions({ connectorId, parentId, filterPermission, }) {\n        let url = `${CONNECTORS_API}/connectors/${connectorId}/permissions?`;\n        if (parentId) {\n            url += `&parentId=${parentId}`;\n        }\n        if (filterPermission) {\n            url += `&filterPermission=${filterPermission}`;\n        }\n        const res = await fetch(url, {\n            method: \"GET\",\n            headers: this.getDefaultHeaders(),\n        });\n        return this._resultFromResponse(res);\n    }\n    async setConnectorPermissions({ connectorId, resources, }) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/${connectorId}/permissions`, {\n            method: \"POST\",\n            headers: this.getDefaultHeaders(),\n            body: JSON.stringify({\n                resources: resources.map(({ internalId, permission }) => ({\n                    internal_id: internalId,\n                    permission,\n                })),\n            }),\n        });\n        return this._resultFromResponse(res);\n    }\n    async getConnector(connectorId) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/${connectorId}`, {\n            method: \"GET\",\n            headers: this.getDefaultHeaders(),\n        });\n        return this._resultFromResponse(res);\n    }\n    async getBotEnabled(connectorId) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/${connectorId}/bot_enabled`, {\n            method: \"GET\",\n            headers: this.getDefaultHeaders(),\n        });\n        return this._resultFromResponse(res);\n    }\n    async setBotEnabled(connectorId, botEnabled) {\n        const headers = this.getDefaultHeaders();\n        const res = await fetch(`${CONNECTORS_API}/connectors/${connectorId}/bot_enabled`, {\n            method: \"POST\",\n            headers,\n            body: JSON.stringify({\n                botEnabled,\n            }),\n        });\n        return this._resultFromResponse(res);\n    }\n    async setConnectorConfig(connectorId, configKey, configValue) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/${connectorId}/config/${configKey}`, {\n            method: \"POST\",\n            headers: this.getDefaultHeaders(),\n            body: JSON.stringify({\n                configValue,\n            }),\n        });\n        return this._resultFromResponse(res);\n    }\n    async getConnectorConfig(connectorId, configKey) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/${connectorId}/config/${configKey}`, {\n            method: \"GET\",\n            headers: this.getDefaultHeaders(),\n        });\n        return this._resultFromResponse(res);\n    }\n    async getResourcesParents({ connectorId, resourceInternalIds, }) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/${connectorId}/resources/parents`, {\n            method: \"POST\",\n            headers: this.getDefaultHeaders(),\n            body: JSON.stringify({\n                resourceInternalIds,\n            }),\n        });\n        return this._resultFromResponse(res);\n    }\n    async getResourcesTitles({ connectorId, resourceInternalIds, }) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/${connectorId}/resources/titles`, {\n            method: \"POST\",\n            headers: this.getDefaultHeaders(),\n            body: JSON.stringify({\n                resourceInternalIds,\n            }),\n        });\n        return this._resultFromResponse(res);\n    }\n    async linkSlackChannelsWithAgent({ connectorId, slackChannelIds, agentConfigurationId, }) {\n        const res = await fetch(`${CONNECTORS_API}/slack/channels/linked_with_agent`, {\n            method: \"PATCH\",\n            headers: this.getDefaultHeaders(),\n            body: JSON.stringify({\n                connector_id: connectorId,\n                agent_configuration_id: agentConfigurationId,\n                slack_channel_ids: slackChannelIds,\n            }),\n        });\n        return this._resultFromResponse(res);\n    }\n    async getSlackChannelsLinkedWithAgent({ connectorId, }) {\n        const res = await fetch(`${CONNECTORS_API}/slack/channels/linked_with_agent?connector_id=${connectorId}`, {\n            method: \"GET\",\n            headers: this.getDefaultHeaders(),\n        });\n        return this._resultFromResponse(res);\n    }\n    getDefaultHeaders() {\n        return {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${DUST_CONNECTORS_SECRET}`,\n        };\n    }\n    async _resultFromResponse(response) {\n        if (!response.ok) {\n            if (response.headers.get(\"Content-Type\") === \"application/json\") {\n                const jsonError = await response.json();\n                this._logger.error({ jsonError }, \"Unexpected response from ConnectorAPI\");\n                return new Err(jsonError);\n            }\n            else {\n                const textError = await response.text();\n                try {\n                    const errorResponse = JSON.parse(textError);\n                    const errorMessage = errorResponse?.error?.message;\n                    const errorType = errorResponse?.error?.type;\n                    if (typeof errorMessage !== \"string\" ||\n                        typeof errorType !== \"string\") {\n                        throw new Error(\"Unexpected response from ConnectorAPI\");\n                    }\n                    return new Err({\n                        error: {\n                            message: errorMessage,\n                            type: errorType,\n                        },\n                    });\n                }\n                catch (error) {\n                    this._logger.error({\n                        statusCode: response.status,\n                        error,\n                        textError,\n                    }, \"Unexpected response from ConnectorAPI\");\n                    return new Err({\n                        error: {\n                            message: `Unexpected response status: ${response.status} ${response.statusText}`,\n                            type: \"unexpected_response\",\n                        },\n                    });\n                }\n            }\n        }\n        const jsonResponse = await response.json();\n        return new Ok(jsonResponse);\n    }\n}\n//# sourceMappingURL=connectors_api.js.map","references":["/Users/edouardwautier/Projects/dust/types/src/front/data_source.ts","/Users/edouardwautier/Projects/dust/types/src/front/lib/result.ts","/Users/edouardwautier/Projects/dust/types/src/shared/logger.ts"],"map":"{\"version\":3,\"file\":\"connectors_api.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/front/lib/connectors_api.ts\"],\"names\":[],\"mappings\":\"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\"}","dtsmap":{"name":"/Users/edouardwautier/Projects/dust/types/node_modules/.cache/rollup-plugin-typescript2/placeholder/front/lib/connectors_api.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"connectors_api.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/front/lib/connectors_api.ts\"],\"names\":[],\"mappings\":\"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\"}"},"dts":{"name":"/Users/edouardwautier/Projects/dust/types/node_modules/.cache/rollup-plugin-typescript2/placeholder/front/lib/connectors_api.d.ts","writeByteOrderMark":false,"text":"import { ConnectorProvider } from \"../../front/data_source\";\nimport { Result } from \"../../front/lib/result\";\nimport { LoggerInterface } from \"../../shared/logger\";\nexport type ConnectorsAPIErrorResponse = {\n    error: {\n        message: string;\n        type?: string;\n    };\n};\nexport type ConnectorsAPIResponse<T> = Result<T, ConnectorsAPIErrorResponse>;\nexport type ConnectorSyncStatus = \"succeeded\" | \"failed\";\nexport type ConnectorErrorType = \"oauth_token_revoked\";\nexport declare const CONNECTOR_PROVIDERS_USING_NANGO: readonly [\"slack\", \"notion\", \"google_drive\", \"intercom\"];\ntype ConnectorProviderUsingNango = (typeof CONNECTOR_PROVIDERS_USING_NANGO)[number];\nexport declare function connectorIsUsingNango(provider: string): provider is ConnectorProviderUsingNango;\nexport type ConnectorType = {\n    id: string;\n    type: ConnectorProvider;\n    lastSyncStatus?: ConnectorSyncStatus;\n    lastSyncStartTime?: number;\n    lastSyncFinishTime?: number;\n    lastSyncSuccessfulTime?: number;\n    firstSuccessfulSyncTime?: number;\n    firstSyncProgress?: string;\n    errorType?: ConnectorErrorType;\n};\nexport type ConnectorPermission = \"read\" | \"write\" | \"read_write\" | \"none\";\nexport type ConnectorResourceType = \"file\" | \"folder\" | \"database\" | \"channel\";\nexport type ConnectorResource = {\n    provider: ConnectorProvider;\n    internalId: string;\n    parentInternalId: string | null;\n    type: ConnectorResourceType;\n    title: string;\n    sourceUrl: string | null;\n    expandable: boolean;\n    permission: ConnectorPermission;\n    dustDocumentId: string | null;\n    lastUpdatedAt: number | null;\n};\nexport type GoogleDriveFolderType = {\n    id: string;\n    name: string;\n    parent: string | null;\n    children: string[];\n};\nexport type GoogleDriveSelectedFolderType = GoogleDriveFolderType & {\n    selected: boolean;\n};\nexport declare class ConnectorsAPI {\n    _logger: LoggerInterface;\n    constructor(logger: LoggerInterface);\n    createConnector(provider: ConnectorProvider, workspaceId: string, workspaceAPIKey: string, dataSourceName: string, connectionId: string): Promise<ConnectorsAPIResponse<ConnectorType>>;\n    updateConnector({ connectorId, params: { connectionId }, }: {\n        connectorId: string;\n        params: {\n            connectionId?: string | null;\n        };\n    }): Promise<ConnectorsAPIResponse<{\n        connectorId: string;\n    }>>;\n    pauseConnector(connectorId: string): Promise<ConnectorsAPIResponse<{\n        connectorId: string;\n    }>>;\n    resumeConnector(connectorId: string): Promise<ConnectorsAPIResponse<{\n        connectorId: string;\n    }>>;\n    syncConnector(connectorId: string): Promise<ConnectorsAPIResponse<{\n        connectorId: string;\n    }>>;\n    deleteConnector(connectorId: string, force?: boolean): Promise<ConnectorsAPIResponse<{\n        success: true;\n    }>>;\n    getConnectorPermissions({ connectorId, parentId, filterPermission, }: {\n        connectorId: string;\n        parentId?: string;\n        filterPermission?: ConnectorPermission;\n    }): Promise<ConnectorsAPIResponse<{\n        resources: ConnectorResource[];\n    }>>;\n    setConnectorPermissions({ connectorId, resources, }: {\n        connectorId: string;\n        resources: {\n            internalId: string;\n            permission: ConnectorPermission;\n        }[];\n    }): Promise<ConnectorsAPIResponse<void>>;\n    getConnector(connectorId: string): Promise<ConnectorsAPIResponse<ConnectorType>>;\n    getBotEnabled(connectorId: string): Promise<ConnectorsAPIResponse<{\n        botEnabled: boolean;\n    }>>;\n    setBotEnabled(connectorId: string, botEnabled: boolean): Promise<ConnectorsAPIResponse<{\n        botEnabled: boolean;\n    }>>;\n    setConnectorConfig(connectorId: string, configKey: string, configValue: string): Promise<ConnectorsAPIResponse<void>>;\n    getConnectorConfig(connectorId: string, configKey: string): Promise<ConnectorsAPIResponse<{\n        connectorId: number;\n        configKey: string;\n        configValue: string;\n    }>>;\n    getResourcesParents({ connectorId, resourceInternalIds, }: {\n        connectorId: string;\n        resourceInternalIds: string[];\n    }): Promise<ConnectorsAPIResponse<{\n        resources: {\n            internalId: string;\n            parents: string[];\n        }[];\n    }>>;\n    getResourcesTitles({ connectorId, resourceInternalIds, }: {\n        connectorId: string;\n        resourceInternalIds: string[];\n    }): Promise<ConnectorsAPIResponse<{\n        resources: {\n            internalId: string;\n            title: string;\n        }[];\n    }>>;\n    linkSlackChannelsWithAgent({ connectorId, slackChannelIds, agentConfigurationId, }: {\n        connectorId: string;\n        slackChannelIds: string[];\n        agentConfigurationId: string;\n    }): Promise<ConnectorsAPIResponse<{\n        success: true;\n    }>>;\n    getSlackChannelsLinkedWithAgent({ connectorId, }: {\n        connectorId: string;\n    }): Promise<ConnectorsAPIResponse<{\n        slackChannels: {\n            slackChannelId: string;\n            slackChannelName: string;\n            agentConfigurationId: string;\n        }[];\n    }>>;\n    getDefaultHeaders(): {\n        \"Content-Type\": string;\n        Authorization: string;\n    };\n    _resultFromResponse<T>(response: Response): Promise<ConnectorsAPIResponse<T>>;\n}\nexport {};\n//# sourceMappingURL=connectors_api.d.ts.map"}}
