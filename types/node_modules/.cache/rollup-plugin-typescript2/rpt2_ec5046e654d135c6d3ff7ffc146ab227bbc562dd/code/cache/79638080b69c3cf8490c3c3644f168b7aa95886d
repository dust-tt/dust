{"code":"import * as t from \"io-ts\";\nimport { NonEmptyString } from \"io-ts-types/lib/NonEmptyString\";\nimport { NumberFromString } from \"io-ts-types/lib/NumberFromString\";\nexport const SUBSCRIPTION_STATUSES = [\n    \"active\",\n    \"ended\",\n    \"ended_backend_only\", // Ended on the backend but not yet propagated to Stripe\n];\nexport const CreatePlanFormSchema = t.type({\n    code: NonEmptyString,\n    name: NonEmptyString,\n    isSlackbotAllowed: t.boolean,\n    isSlackAllowed: t.boolean,\n    isNotionAllowed: t.boolean,\n    isGoogleDriveAllowed: t.boolean,\n    isGithubAllowed: t.boolean,\n    isIntercomAllowed: t.boolean,\n    isConfluenceAllowed: t.boolean,\n    isWebCrawlerAllowed: t.boolean,\n    maxMessages: t.union([t.number, NumberFromString]),\n    maxMessagesTimeframe: t.keyof({\n        day: null,\n        lifetime: null,\n    }),\n    dataSourcesCount: t.union([t.number, NumberFromString]),\n    dataSourcesDocumentsCount: t.union([t.number, NumberFromString]),\n    dataSourcesDocumentsSizeMb: t.union([t.number, NumberFromString]),\n    maxUsers: t.union([t.number, NumberFromString]),\n});\nexport const EnterpriseUpgradeFormSchema = t.type({\n    stripeSubscriptionId: NonEmptyString,\n    planCode: NonEmptyString,\n});\n//# sourceMappingURL=plan.js.map","references":["/Users/edouardwautier/Projects/dust/types/node_modules/io-ts/lib/index.d.ts","/Users/edouardwautier/Projects/dust/types/node_modules/io-ts-types/lib/NonEmptyString.d.ts","/Users/edouardwautier/Projects/dust/types/node_modules/io-ts-types/lib/NumberFromString.d.ts"],"map":"{\"version\":3,\"file\":\"plan.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/front/plan.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,CAAC,MAAM,OAAO,CAAC;AAC3B,OAAO,EAAE,cAAc,EAAE,MAAM,gCAAgC,CAAC;AAChE,OAAO,EAAE,gBAAgB,EAAE,MAAM,kCAAkC,CAAC;AAqCpE,MAAM,CAAC,MAAM,qBAAqB,GAAG;IACnC,QAAQ;IACR,OAAO;IACP,oBAAoB,EAAE,wDAAwD;CACtE,CAAC;AAwBX,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAAC,CAAC,IAAI,CAAC;IACzC,IAAI,EAAE,cAAc;IACpB,IAAI,EAAE,cAAc;IACpB,iBAAiB,EAAE,CAAC,CAAC,OAAO;IAC5B,cAAc,EAAE,CAAC,CAAC,OAAO;IACzB,eAAe,EAAE,CAAC,CAAC,OAAO;IAC1B,oBAAoB,EAAE,CAAC,CAAC,OAAO;IAC/B,eAAe,EAAE,CAAC,CAAC,OAAO;IAC1B,iBAAiB,EAAE,CAAC,CAAC,OAAO;IAC5B,mBAAmB,EAAE,CAAC,CAAC,OAAO;IAC9B,mBAAmB,EAAE,CAAC,CAAC,OAAO;IAC9B,WAAW,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC;IAClD,oBAAoB,EAAE,CAAC,CAAC,KAAK,CAAC;QAC5B,GAAG,EAAE,IAAI;QACT,QAAQ,EAAE,IAAI;KACf,CAAC;IACF,gBAAgB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC;IACvD,yBAAyB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC;IAChE,0BAA0B,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC;IACjE,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC;CAChD,CAAC,CAAC;AAIH,MAAM,CAAC,MAAM,2BAA2B,GAAG,CAAC,CAAC,IAAI,CAAC;IAChD,oBAAoB,EAAE,cAAc;IACpC,QAAQ,EAAE,cAAc;CACzB,CAAC,CAAC\"}","dtsmap":{"name":"/Users/edouardwautier/Projects/dust/types/node_modules/.cache/rollup-plugin-typescript2/placeholder/front/plan.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"plan.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/front/plan.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,CAAC,MAAM,OAAO,CAAC;AAI3B,MAAM,MAAM,wBAAwB,GAAG,KAAK,GAAG,UAAU,CAAC;AAE1D;;;KAGK;AACL,MAAM,MAAM,2BAA2B,GAAG;IACxC,mBAAmB,EAAE,OAAO,CAAC;IAC7B,cAAc,EAAE,OAAO,CAAC;IACxB,eAAe,EAAE,OAAO,CAAC;IACzB,oBAAoB,EAAE,OAAO,CAAC;IAC9B,eAAe,EAAE,OAAO,CAAC;IACzB,iBAAiB,EAAE,OAAO,CAAC;IAC3B,mBAAmB,EAAE,OAAO,CAAC;CAC9B,CAAC;AACF,MAAM,MAAM,UAAU,GAAG;IACvB,SAAS,EAAE;QACT,iBAAiB,EAAE,OAAO,CAAC;QAC3B,WAAW,EAAE,MAAM,CAAC;QACpB,oBAAoB,EAAE,wBAAwB,CAAC;KAChD,CAAC;IACF,WAAW,EAAE,2BAA2B,CAAC;IACzC,WAAW,EAAE;QACX,KAAK,EAAE,MAAM,CAAC;QACd,SAAS,EAAE;YACT,KAAK,EAAE,MAAM,CAAC;YACd,MAAM,EAAE,MAAM,CAAC;SAChB,CAAC;KACH,CAAC;IACF,KAAK,EAAE;QACL,QAAQ,EAAE,MAAM,CAAC;KAClB,CAAC;IACF,aAAa,EAAE,OAAO,CAAC;CACxB,CAAC;AAEF,eAAO,MAAM,qBAAqB,oDAIxB,CAAC;AACX,MAAM,MAAM,sBAAsB,GAAG,CAAC,OAAO,qBAAqB,CAAC,CAAC,MAAM,CAAC,CAAC;AAE5E,MAAM,MAAM,QAAQ,GAAG;IACrB,IAAI,EAAE,MAAM,CAAC;IACb,IAAI,EAAE,MAAM,CAAC;IACb,MAAM,EAAE,UAAU,CAAC;IACnB,eAAe,EAAE,MAAM,CAAC;CACzB,CAAC;AAEF,MAAM,MAAM,gBAAgB,GAAG;IAG7B,GAAG,EAAE,MAAM,GAAG,IAAI,CAAC;IACnB,MAAM,EAAE,sBAAsB,CAAC;IAC/B,QAAQ,EAAE,OAAO,CAAC;IAElB,oBAAoB,EAAE,MAAM,GAAG,IAAI,CAAC;IACpC,SAAS,EAAE,MAAM,GAAG,IAAI,CAAC;IACzB,OAAO,EAAE,MAAM,GAAG,IAAI,CAAC;IACvB,mBAAmB,EAAE,MAAM,GAAG,IAAI,CAAC;IACnC,IAAI,EAAE,QAAQ,CAAC;CAChB,CAAC;AAEF,eAAO,MAAM,oBAAoB;;;;;;;;;;;;;;;;;;;;EAoB/B,CAAC;AAEH,MAAM,MAAM,kBAAkB,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,oBAAoB,CAAC,CAAC;AAEvE,eAAO,MAAM,2BAA2B;;;EAGtC,CAAC;AAEH,MAAM,MAAM,yBAAyB,GAAG,CAAC,CAAC,MAAM,CAC9C,OAAO,2BAA2B,CACnC,CAAC\"}"},"dts":{"name":"/Users/edouardwautier/Projects/dust/types/node_modules/.cache/rollup-plugin-typescript2/placeholder/front/plan.d.ts","writeByteOrderMark":false,"text":"import * as t from \"io-ts\";\nexport type MaxMessagesTimeframeType = \"day\" | \"lifetime\";\n/**\n *  Expresses limits for usage of the product\n * Any positive number enforces the limit, -1 means no limit.\n * */\nexport type ManageDataSourcesLimitsType = {\n    isConfluenceAllowed: boolean;\n    isSlackAllowed: boolean;\n    isNotionAllowed: boolean;\n    isGoogleDriveAllowed: boolean;\n    isGithubAllowed: boolean;\n    isIntercomAllowed: boolean;\n    isWebCrawlerAllowed: boolean;\n};\nexport type LimitsType = {\n    assistant: {\n        isSlackBotAllowed: boolean;\n        maxMessages: number;\n        maxMessagesTimeframe: MaxMessagesTimeframeType;\n    };\n    connections: ManageDataSourcesLimitsType;\n    dataSources: {\n        count: number;\n        documents: {\n            count: number;\n            sizeMb: number;\n        };\n    };\n    users: {\n        maxUsers: number;\n    };\n    canUseProduct: boolean;\n};\nexport declare const SUBSCRIPTION_STATUSES: readonly [\"active\", \"ended\", \"ended_backend_only\"];\nexport type SubscriptionStatusType = (typeof SUBSCRIPTION_STATUSES)[number];\nexport type PlanType = {\n    code: string;\n    name: string;\n    limits: LimitsType;\n    trialPeriodDays: number;\n};\nexport type SubscriptionType = {\n    sId: string | null;\n    status: SubscriptionStatusType;\n    trialing: boolean;\n    stripeSubscriptionId: string | null;\n    startDate: number | null;\n    endDate: number | null;\n    paymentFailingSince: number | null;\n    plan: PlanType;\n};\nexport declare const CreatePlanFormSchema: t.TypeC<{\n    code: import(\"io-ts-types/lib/NonEmptyString\").NonEmptyStringC;\n    name: import(\"io-ts-types/lib/NonEmptyString\").NonEmptyStringC;\n    isSlackbotAllowed: t.BooleanC;\n    isSlackAllowed: t.BooleanC;\n    isNotionAllowed: t.BooleanC;\n    isGoogleDriveAllowed: t.BooleanC;\n    isGithubAllowed: t.BooleanC;\n    isIntercomAllowed: t.BooleanC;\n    isConfluenceAllowed: t.BooleanC;\n    isWebCrawlerAllowed: t.BooleanC;\n    maxMessages: t.UnionC<[t.NumberC, import(\"io-ts-types/lib/NumberFromString\").NumberFromStringC]>;\n    maxMessagesTimeframe: t.KeyofC<{\n        day: null;\n        lifetime: null;\n    }>;\n    dataSourcesCount: t.UnionC<[t.NumberC, import(\"io-ts-types/lib/NumberFromString\").NumberFromStringC]>;\n    dataSourcesDocumentsCount: t.UnionC<[t.NumberC, import(\"io-ts-types/lib/NumberFromString\").NumberFromStringC]>;\n    dataSourcesDocumentsSizeMb: t.UnionC<[t.NumberC, import(\"io-ts-types/lib/NumberFromString\").NumberFromStringC]>;\n    maxUsers: t.UnionC<[t.NumberC, import(\"io-ts-types/lib/NumberFromString\").NumberFromStringC]>;\n}>;\nexport type CreatePlanFormType = t.TypeOf<typeof CreatePlanFormSchema>;\nexport declare const EnterpriseUpgradeFormSchema: t.TypeC<{\n    stripeSubscriptionId: import(\"io-ts-types/lib/NonEmptyString\").NonEmptyStringC;\n    planCode: import(\"io-ts-types/lib/NonEmptyString\").NonEmptyStringC;\n}>;\nexport type EnterpriseUpgradeFormType = t.TypeOf<typeof EnterpriseUpgradeFormSchema>;\n//# sourceMappingURL=plan.d.ts.map"}}
