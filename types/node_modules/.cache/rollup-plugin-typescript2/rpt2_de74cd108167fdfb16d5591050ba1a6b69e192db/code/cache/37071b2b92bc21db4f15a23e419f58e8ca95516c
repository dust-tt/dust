{"code":"import { v4 as uuidv4 } from \"uuid\";\nimport { redisClient } from \"../shared/redis_client\";\nimport { getStatsDClient } from \"./statsd\";\nexport class RateLimitError extends Error {\n}\nexport async function rateLimiter({ key, maxPerTimeframe, timeframeSeconds, logger, redisUri, }) {\n    const statsDClient = getStatsDClient();\n    if (!redisUri) {\n        const REDIS_URI = process.env.REDIS_URI;\n        if (!REDIS_URI) {\n            throw new Error(\"REDIS_CACHE_URI is not set\");\n        }\n        redisUri = REDIS_URI;\n    }\n    let redis = undefined;\n    const now = new Date();\n    const tags = [`rate_limiter:${key}`];\n    try {\n        redis = await redisClient(redisUri);\n        const redisKey = `rate_limiter:${key}`;\n        const zcountRes = await redis.zCount(redisKey, new Date().getTime() - timeframeSeconds * 1000, \"+inf\");\n        const remaining = maxPerTimeframe - zcountRes;\n        if (remaining > 0) {\n            await redis.zAdd(redisKey, {\n                score: new Date().getTime(),\n                value: uuidv4(),\n            });\n            await redis.expire(redisKey, timeframeSeconds * 2);\n        }\n        else {\n            statsDClient.increment(\"ratelimiter.exceeded.count\", 1, tags);\n        }\n        const totalTimeMs = new Date().getTime() - now.getTime();\n        statsDClient.distribution(\"ratelimiter.latency.distribution\", totalTimeMs, tags);\n        return remaining > 0 ? remaining : 0;\n    }\n    catch (e) {\n        statsDClient.increment(\"ratelimiter.error.count\", 1, tags);\n        logger.error({\n            key,\n            maxPerTimeframe,\n            timeframeSeconds,\n            error: e,\n        }, `RateLimiter error`);\n        // in case of error on our side, we allow the request.\n        return 1;\n    }\n    finally {\n        if (redis) {\n            await redis.quit();\n        }\n    }\n}\nexport function getTimeframeSecondsFromLiteral(timeframeLiteral) {\n    switch (timeframeLiteral) {\n        case \"day\":\n            return 60 * 60 * 24; // 1 day.\n        // Lifetime is intentionally mapped to a 30-day period.\n        case \"lifetime\":\n            return 60 * 60 * 24 * 30; // 30 days.\n        default:\n            return 0;\n    }\n}\n//# sourceMappingURL=rate_limiter.js.map","references":["/Users/edouardwautier/Projects/dust/types/node_modules/@types/uuid/index.d.ts","/Users/edouardwautier/Projects/dust/types/src/front/plan.ts","/Users/edouardwautier/Projects/dust/types/src/shared/logger.ts","/Users/edouardwautier/Projects/dust/types/src/shared/redis_client.ts","/Users/edouardwautier/Projects/dust/types/src/shared/statsd.ts"],"map":"{\"version\":3,\"file\":\"rate_limiter.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/shared/rate_limiter.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,EAAE,IAAI,MAAM,EAAE,MAAM,MAAM,CAAC;AAIpC,OAAO,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAC;AACrD,OAAO,EAAE,eAAe,EAAE,MAAM,UAAU,CAAC;AAE3C,MAAM,OAAO,cAAe,SAAQ,KAAK;CAAG;AAE5C,MAAM,CAAC,KAAK,UAAU,WAAW,CAAC,EAChC,GAAG,EACH,eAAe,EACf,gBAAgB,EAChB,MAAM,EACN,QAAQ,GAOT;IACC,MAAM,YAAY,GAAG,eAAe,EAAE,CAAC;IACvC,IAAI,CAAC,QAAQ,EAAE;QACb,MAAM,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;QACxC,IAAI,CAAC,SAAS,EAAE;YACd,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;SAC/C;QACD,QAAQ,GAAG,SAAS,CAAC;KACtB;IACD,IAAI,KAAK,GAAwD,SAAS,CAAC;IAC3E,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;IACvB,MAAM,IAAI,GAAG,CAAC,gBAAgB,GAAG,EAAE,CAAC,CAAC;IACrC,IAAI;QACF,KAAK,GAAG,MAAM,WAAW,CAAC,QAAQ,CAAC,CAAC;QACpC,MAAM,QAAQ,GAAG,gBAAgB,GAAG,EAAE,CAAC;QAEvC,MAAM,SAAS,GAAG,MAAM,KAAK,CAAC,MAAM,CAClC,QAAQ,EACR,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,gBAAgB,GAAG,IAAI,EAC9C,MAAM,CACP,CAAC;QACF,MAAM,SAAS,GAAG,eAAe,GAAG,SAAS,CAAC;QAC9C,IAAI,SAAS,GAAG,CAAC,EAAE;YACjB,MAAM,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE;gBACzB,KAAK,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE;gBAC3B,KAAK,EAAE,MAAM,EAAE;aAChB,CAAC,CAAC;YACH,MAAM,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,gBAAgB,GAAG,CAAC,CAAC,CAAC;SACpD;aAAM;YACL,YAAY,CAAC,SAAS,CAAC,4BAA4B,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;SAC/D;QACD,MAAM,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;QAEzD,YAAY,CAAC,YAAY,CACvB,kCAAkC,EAClC,WAAW,EACX,IAAI,CACL,CAAC;QAEF,OAAO,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;KACtC;IAAC,OAAO,CAAC,EAAE;QACV,YAAY,CAAC,SAAS,CAAC,yBAAyB,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAC3D,MAAM,CAAC,KAAK,CACV;YACE,GAAG;YACH,eAAe;YACf,gBAAgB;YAChB,KAAK,EAAE,CAAC;SACT,EACD,mBAAmB,CACpB,CAAC;QAEF,sDAAsD;QACtD,OAAO,CAAC,CAAC;KACV;YAAS;QACR,IAAI,KAAK,EAAE;YACT,MAAM,KAAK,CAAC,IAAI,EAAE,CAAC;SACpB;KACF;AACH,CAAC;AAED,MAAM,UAAU,8BAA8B,CAC5C,gBAA0C;IAE1C,QAAQ,gBAAgB,EAAE;QACxB,KAAK,KAAK;YACR,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,SAAS;QAEhC,uDAAuD;QACvD,KAAK,UAAU;YACb,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,WAAW;QAEvC;YACE,OAAO,CAAC,CAAC;KACZ;AACH,CAAC\"}","dtsmap":{"name":"/Users/edouardwautier/Projects/dust/types/node_modules/.cache/rollup-plugin-typescript2/placeholder/shared/rate_limiter.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"rate_limiter.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/shared/rate_limiter.ts\"],\"names\":[],\"mappings\":\"AAEA,OAAO,EAAE,wBAAwB,EAAE,MAAM,eAAe,CAAC;AACzD,OAAO,EAAE,eAAe,EAAE,MAAM,kBAAkB,CAAC;AAInD,qBAAa,cAAe,SAAQ,KAAK;CAAG;AAE5C,wBAAsB,WAAW,CAAC,EAChC,GAAG,EACH,eAAe,EACf,gBAAgB,EAChB,MAAM,EACN,QAAQ,GACT,EAAE;IACD,GAAG,EAAE,MAAM,CAAC;IACZ,eAAe,EAAE,MAAM,CAAC;IACxB,gBAAgB,EAAE,MAAM,CAAC;IACzB,MAAM,EAAE,eAAe,CAAC;IACxB,QAAQ,CAAC,EAAE,MAAM,CAAC;CACnB,GAAG,OAAO,CAAC,MAAM,CAAC,CA2DlB;AAED,wBAAgB,8BAA8B,CAC5C,gBAAgB,EAAE,wBAAwB,GACzC,MAAM,CAYR\"}"},"dts":{"name":"/Users/edouardwautier/Projects/dust/types/node_modules/.cache/rollup-plugin-typescript2/placeholder/shared/rate_limiter.d.ts","writeByteOrderMark":false,"text":"import { MaxMessagesTimeframeType } from \"../front/plan\";\nimport { LoggerInterface } from \"../shared/logger\";\nexport declare class RateLimitError extends Error {\n}\nexport declare function rateLimiter({ key, maxPerTimeframe, timeframeSeconds, logger, redisUri, }: {\n    key: string;\n    maxPerTimeframe: number;\n    timeframeSeconds: number;\n    logger: LoggerInterface;\n    redisUri?: string;\n}): Promise<number>;\nexport declare function getTimeframeSecondsFromLiteral(timeframeLiteral: MaxMessagesTimeframeType): number;\n//# sourceMappingURL=rate_limiter.d.ts.map"}}
