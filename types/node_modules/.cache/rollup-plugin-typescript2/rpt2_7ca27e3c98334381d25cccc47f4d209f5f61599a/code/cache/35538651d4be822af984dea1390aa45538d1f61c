{"code":"import * as t from \"io-ts\";\nexport function getNotionWorkflowId(dataSourceInfo, gargbageCollectionMode = \"auto\") {\n    let wfName = \"workflow-notion\";\n    if (gargbageCollectionMode === \"always\") {\n        wfName += \"-garbage-collector\";\n    }\n    return `${wfName}-${dataSourceInfo.workspaceId}-${dataSourceInfo.dataSourceName}`;\n}\nexport const ParsedNotionDatabaseSchema = t.type({\n    id: t.string,\n    url: t.string,\n    title: t.union([t.string, t.undefined]),\n    parentType: t.union([\n        t.literal(\"database\"),\n        t.literal(\"page\"),\n        t.literal(\"block\"),\n        t.literal(\"workspace\"),\n    ]),\n    parentId: t.string,\n});\n//# sourceMappingURL=notion.js.map","references":["/Users/edouardwautier/Projects/dust/types/node_modules/io-ts/lib/index.d.ts"],"map":"{\"version\":3,\"file\":\"notion.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/connectors/notion.ts\"],\"names\":[],\"mappings\":\"AAIA,OAAO,KAAK,CAAC,MAAM,OAAO,CAAC;AAQ3B,MAAM,UAAU,mBAAmB,CACjC,cAA+D,EAC/D,yBAAsD,MAAM;IAE5D,IAAI,MAAM,GAAG,iBAAiB,CAAC;IAC/B,IAAI,sBAAsB,KAAK,QAAQ,EAAE;QACvC,MAAM,IAAI,oBAAoB,CAAC;KAChC;IACD,OAAO,GAAG,MAAM,IAAI,cAAc,CAAC,WAAW,IAAI,cAAc,CAAC,cAAc,EAAE,CAAC;AACpF,CAAC;AAoCD,MAAM,CAAC,MAAM,0BAA0B,GAAG,CAAC,CAAC,IAAI,CAAC;IAC/C,EAAE,EAAE,CAAC,CAAC,MAAM;IACZ,GAAG,EAAE,CAAC,CAAC,MAAM;IACb,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC;IACvC,UAAU,EAAE,CAAC,CAAC,KAAK,CAAC;QAClB,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC;QACrB,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC;QACjB,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC;QAClB,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC;KACvB,CAAC;IACF,QAAQ,EAAE,CAAC,CAAC,MAAM;CACnB,CAAC,CAAC\"}","dtsmap":{"name":"/Users/edouardwautier/Projects/dust/types/node_modules/.cache/rollup-plugin-typescript2/placeholder/connectors/notion.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"notion.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/connectors/notion.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,EACV,mBAAmB,EACnB,kBAAkB,EACnB,MAAM,0CAA0C,CAAC;AAClD,OAAO,KAAK,CAAC,MAAM,OAAO,CAAC;AAG3B,MAAM,MAAM,oBAAoB,GAAG,kBAAkB,CAAC,YAAY,CAAC,CAAC;AACpE,MAAM,MAAM,YAAY,GAAG,MAAM,oBAAoB,CAAC;AACtD,MAAM,MAAM,aAAa,GAAG,oBAAoB,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,CAAC;AACvE,MAAM,MAAM,2BAA2B,GAAG,QAAQ,GAAG,MAAM,GAAG,OAAO,CAAC;AAEtE,wBAAgB,mBAAmB,CACjC,cAAc,EAAE;IAAE,WAAW,EAAE,MAAM,CAAC;IAAC,cAAc,EAAE,MAAM,CAAA;CAAE,EAC/D,sBAAsB,GAAE,2BAAoC,UAO7D;AAGD,MAAM,MAAM,gBAAgB,GAAG;IAC7B,EAAE,EAAE,MAAM,CAAC;IACX,GAAG,EAAE,MAAM,CAAC;IACZ,KAAK,CAAC,EAAE,MAAM,CAAC;IACf,UAAU,EAAE,wBAAwB,EAAE,CAAC;IACvC,MAAM,EAAE,iBAAiB,EAAE,CAAC;IAC5B,QAAQ,EAAE,MAAM,CAAC;IACjB,WAAW,EAAE,MAAM,CAAC;IACpB,WAAW,EAAE,MAAM,CAAC;IACpB,MAAM,EAAE,MAAM,CAAC;IACf,UAAU,EAAE,MAAM,CAAC;IACnB,OAAO,EAAE,OAAO,CAAC;IACjB,UAAU,EAAE,UAAU,GAAG,MAAM,GAAG,OAAO,GAAG,WAAW,CAAC;IACxD,QAAQ,EAAE,MAAM,CAAC;CAClB,CAAC;AAEF,MAAM,MAAM,wBAAwB,GAAG;IACrC,GAAG,EAAE,MAAM,CAAC;IACZ,EAAE,EAAE,MAAM,CAAC;IACX,IAAI,EAAE,aAAa,CAAC;IACpB,IAAI,EAAE,MAAM,GAAG,IAAI,CAAC;CACrB,CAAC;AAEF,MAAM,MAAM,eAAe,GAAG,mBAAmB,CAAC,MAAM,CAAC,CAAC;AAE1D,MAAM,MAAM,iBAAiB,GAAG;IAC9B,EAAE,EAAE,MAAM,CAAC;IACX,IAAI,EAAE,eAAe,CAAC;IACtB,IAAI,EAAE,MAAM,GAAG,IAAI,CAAC;IACpB,WAAW,EAAE,OAAO,CAAC;IACrB,kBAAkB,EAAE,MAAM,GAAG,IAAI,CAAC;CACnC,CAAC;AAEF,eAAO,MAAM,0BAA0B;;;;;;EAWrC,CAAC;AAEH,MAAM,MAAM,oBAAoB,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,0BAA0B,CAAC,CAAC\"}"},"dts":{"name":"/Users/edouardwautier/Projects/dust/types/node_modules/.cache/rollup-plugin-typescript2/placeholder/connectors/notion.d.ts","writeByteOrderMark":false,"text":"import type { BlockObjectResponse, PageObjectResponse } from \"@notionhq/client/build/src/api-endpoints\";\nimport * as t from \"io-ts\";\nexport type PageObjectProperties = PageObjectResponse[\"properties\"];\nexport type PropertyKeys = keyof PageObjectProperties;\nexport type PropertyTypes = PageObjectProperties[PropertyKeys][\"type\"];\nexport type NotionGarbageCollectionMode = \"always\" | \"auto\" | \"never\";\nexport declare function getNotionWorkflowId(dataSourceInfo: {\n    workspaceId: string;\n    dataSourceName: string;\n}, gargbageCollectionMode?: NotionGarbageCollectionMode): string;\nexport type ParsedNotionPage = {\n    id: string;\n    url: string;\n    title?: string;\n    properties: ParsedNotionPageProperty[];\n    blocks: ParsedNotionBlock[];\n    rendered: string;\n    createdTime: number;\n    updatedTime: number;\n    author: string;\n    lastEditor: string;\n    hasBody: boolean;\n    parentType: \"database\" | \"page\" | \"block\" | \"workspace\";\n    parentId: string;\n};\nexport type ParsedNotionPageProperty = {\n    key: string;\n    id: string;\n    type: PropertyTypes;\n    text: string | null;\n};\nexport type NotionBlockType = BlockObjectResponse[\"type\"];\nexport type ParsedNotionBlock = {\n    id: string;\n    type: NotionBlockType;\n    text: string | null;\n    hasChildren: boolean;\n    childDatabaseTitle: string | null;\n};\nexport declare const ParsedNotionDatabaseSchema: t.TypeC<{\n    id: t.StringC;\n    url: t.StringC;\n    title: t.UnionC<[t.StringC, t.UndefinedC]>;\n    parentType: t.UnionC<[t.LiteralC<\"database\">, t.LiteralC<\"page\">, t.LiteralC<\"block\">, t.LiteralC<\"workspace\">]>;\n    parentId: t.StringC;\n}>;\nexport type ParsedNotionDatabase = t.TypeOf<typeof ParsedNotionDatabaseSchema>;\n//# sourceMappingURL=notion.d.ts.map"}}
