{"code":"import { isConnectorsAPIError } from \"../../connectors/api\";\nimport { Err, Ok } from \"../../shared/result\";\nconst { CONNECTORS_API = \"http://127.0.0.1:3002\", DUST_CONNECTORS_SECRET = \"\", } = process.env;\nconst CONNECTORS_ERROR_TYPES = [\n    \"oauth_token_revoked\",\n    \"third_party_internal_error\",\n    \"webcrawling_error\",\n];\nexport function isConnectorError(val) {\n    return CONNECTORS_ERROR_TYPES.includes(val);\n}\nexport const CONNECTOR_PROVIDERS_USING_NANGO = [\n    \"confluence\",\n    \"google_drive\",\n    \"intercom\",\n    \"notion\",\n    \"slack\",\n];\nexport function connectorIsUsingNango(provider) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return CONNECTOR_PROVIDERS_USING_NANGO.includes(provider);\n}\nexport class ConnectorsAPI {\n    _logger;\n    constructor(logger) {\n        this._logger = logger;\n    }\n    async createConnector(provider, workspaceId, workspaceAPIKey, dataSourceName, connectorParams) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/create/${encodeURIComponent(provider)}`, {\n            method: \"POST\",\n            headers: this.getDefaultHeaders(),\n            body: JSON.stringify({\n                workspaceId,\n                workspaceAPIKey,\n                dataSourceName,\n                connectorParams,\n            }),\n        });\n        return this._resultFromResponse(res);\n    }\n    async updateConnector({ connectorId, params, }) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/update/${encodeURIComponent(connectorId)}`, {\n            method: \"POST\",\n            headers: this.getDefaultHeaders(),\n            body: JSON.stringify(params),\n        });\n        return this._resultFromResponse(res);\n    }\n    async deleteConnector(connectorId, force = false) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/delete/${encodeURIComponent(connectorId)}?force=${force ? \"true\" : \"false\"}`, {\n            method: \"DELETE\",\n            headers: this.getDefaultHeaders(),\n        });\n        return this._resultFromResponse(res);\n    }\n    async getConnectorPermissions({ connectorId, parentId, filterPermission, viewType = \"documents\", }) {\n        let url = `${CONNECTORS_API}/connectors/${encodeURIComponent(connectorId)}/permissions?viewType=${viewType}`;\n        if (parentId) {\n            url += `&parentId=${encodeURIComponent(parentId)}`;\n        }\n        if (filterPermission) {\n            url += `&filterPermission=${encodeURIComponent(filterPermission)}`;\n        }\n        const res = await fetch(url, {\n            method: \"GET\",\n            headers: this.getDefaultHeaders(),\n        });\n        return this._resultFromResponse(res);\n    }\n    async setConnectorPermissions({ connectorId, resources, }) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/${encodeURIComponent(connectorId)}/permissions`, {\n            method: \"POST\",\n            headers: this.getDefaultHeaders(),\n            body: JSON.stringify({\n                resources: resources.map(({ internalId, permission }) => ({\n                    internal_id: internalId,\n                    permission,\n                })),\n            }),\n        });\n        return this._resultFromResponse(res);\n    }\n    async getConnector(connectorId) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/${encodeURIComponent(connectorId)}`, {\n            method: \"GET\",\n            headers: this.getDefaultHeaders(),\n        });\n        return this._resultFromResponse(res);\n    }\n    async setConnectorConfig(connectorId, configKey, configValue) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/${encodeURIComponent(connectorId)}/config/${encodeURIComponent(configKey)}`, {\n            method: \"POST\",\n            headers: this.getDefaultHeaders(),\n            body: JSON.stringify({\n                configValue,\n            }),\n        });\n        return this._resultFromResponse(res);\n    }\n    async getConnectorConfig(connectorId, configKey) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/${encodeURIComponent(connectorId)}/config/${encodeURIComponent(configKey)}`, {\n            method: \"GET\",\n            headers: this.getDefaultHeaders(),\n        });\n        return this._resultFromResponse(res);\n    }\n    async getContentNodesParents({ connectorId, internalIds, }) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/${encodeURIComponent(connectorId)}/content_nodes/parents`, {\n            method: \"POST\",\n            headers: this.getDefaultHeaders(),\n            body: JSON.stringify({\n                internalIds,\n            }),\n        });\n        return this._resultFromResponse(res);\n    }\n    async getContentNodes({ connectorId, internalIds, viewType = \"documents\", }) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/${encodeURIComponent(connectorId)}/content_nodes`, {\n            method: \"POST\",\n            headers: this.getDefaultHeaders(),\n            body: JSON.stringify({\n                internalIds,\n                viewType,\n            }),\n        });\n        return this._resultFromResponse(res);\n    }\n    async linkSlackChannelsWithAgent({ connectorId, slackChannelIds, agentConfigurationId, }) {\n        const res = await fetch(`${CONNECTORS_API}/slack/channels/linked_with_agent`, {\n            method: \"PATCH\",\n            headers: this.getDefaultHeaders(),\n            body: JSON.stringify({\n                connector_id: connectorId,\n                agent_configuration_id: agentConfigurationId,\n                slack_channel_ids: slackChannelIds,\n            }),\n        });\n        return this._resultFromResponse(res);\n    }\n    async getSlackChannelsLinkedWithAgent({ connectorId, }) {\n        const res = await fetch(`${CONNECTORS_API}/slack/channels/linked_with_agent?connector_id=${encodeURIComponent(connectorId)}`, {\n            method: \"GET\",\n            headers: this.getDefaultHeaders(),\n        });\n        return this._resultFromResponse(res);\n    }\n    async getWebCrawlerConfiguration({ connectorId, }) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/webcrawler/${encodeURIComponent(connectorId)}/configuration`, {\n            method: \"GET\",\n            headers: this.getDefaultHeaders(),\n        });\n        return this._resultFromResponse(res);\n    }\n    async admin(adminCommand) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/admin`, {\n            method: \"POST\",\n            headers: this.getDefaultHeaders(),\n            body: JSON.stringify(adminCommand),\n        });\n        return this._resultFromResponse(res);\n    }\n    getDefaultHeaders() {\n        return {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${DUST_CONNECTORS_SECRET}`,\n        };\n    }\n    async _resultFromResponse(response) {\n        // We get the text and attempt to parse so that we can log the raw text in case of error (the\n        // body is already consumed by response.json() if used otherwise).\n        const text = await response.text();\n        let json = null;\n        try {\n            json = JSON.parse(text);\n        }\n        catch (e) {\n            const err = {\n                type: \"unexpected_response_format\",\n                message: `Unexpected response format from ConnectorsAPI: ${e}`,\n            };\n            this._logger.error({\n                connectorsError: err,\n                parseError: e,\n                rawText: text,\n                status: response.status,\n            }, \"ConnectorsAPI error\");\n            return new Err(err);\n        }\n        if (!response.ok) {\n            const err = json?.error;\n            if (isConnectorsAPIError(err)) {\n                this._logger.error({ connectorsError: err, status: response.status }, \"ConnectorsAPI error\");\n                return new Err(err);\n            }\n            else {\n                const err = {\n                    type: \"unexpected_error_format\",\n                    message: \"Unexpected error format from ConnectorAPI\",\n                };\n                this._logger.error({ connectorsError: err, json, status: response.status }, \"ConnectorsAPI error\");\n                return new Err(err);\n            }\n        }\n        else {\n            return new Ok(json);\n        }\n    }\n}\n//# sourceMappingURL=connectors_api.js.map","references":["/Users/edouardwautier/Projects/dust/types/src/connectors/admin/cli.ts","/Users/edouardwautier/Projects/dust/types/src/connectors/api.ts","/Users/edouardwautier/Projects/dust/types/src/connectors/api_handlers/create_connector.ts","/Users/edouardwautier/Projects/dust/types/src/connectors/api_handlers/update_connector.ts","/Users/edouardwautier/Projects/dust/types/src/connectors/content_nodes.ts","/Users/edouardwautier/Projects/dust/types/src/connectors/webcrawler.ts","/Users/edouardwautier/Projects/dust/types/src/front/data_source.ts","/Users/edouardwautier/Projects/dust/types/src/shared/logger.ts","/Users/edouardwautier/Projects/dust/types/src/shared/result.ts"],"map":"{\"version\":3,\"file\":\"connectors_api.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/front/lib/connectors_api.ts\"],\"names\":[],\"mappings\":\"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\"}","dtsmap":{"name":"/Users/edouardwautier/Projects/dust/types/node_modules/.cache/rollup-plugin-typescript2/placeholder/front/lib/connectors_api.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"connectors_api.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/front/lib/connectors_api.ts\"],\"names\":[],\"mappings\":\"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\"}"},"dts":{"name":"/Users/edouardwautier/Projects/dust/types/node_modules/.cache/rollup-plugin-typescript2/placeholder/front/lib/connectors_api.d.ts","writeByteOrderMark":false,"text":"import { AdminCommandType, AdminResponseType } from \"../../connectors/admin/cli\";\nimport { ConnectorsAPIError } from \"../../connectors/api\";\nimport { CreateConnectorOAuthRequestBody, CreateConnectorUrlRequestBody } from \"../../connectors/api_handlers/create_connector\";\nimport { UpdateConnectorRequestBody } from \"../../connectors/api_handlers/update_connector\";\nimport { ContentNodesViewType } from \"../../connectors/content_nodes\";\nimport { WebCrawlerConfigurationType } from \"../../connectors/webcrawler\";\nimport { ConnectorProvider } from \"../../front/data_source\";\nimport { LoggerInterface } from \"../../shared/logger\";\nimport { Result } from \"../../shared/result\";\nexport type ConnectorsAPIResponse<T> = Result<T, ConnectorsAPIError>;\nexport type ConnectorSyncStatus = \"succeeded\" | \"failed\";\ndeclare const CONNECTORS_ERROR_TYPES: readonly [\"oauth_token_revoked\", \"third_party_internal_error\", \"webcrawling_error\"];\nexport type ConnectorErrorType = (typeof CONNECTORS_ERROR_TYPES)[number];\nexport declare function isConnectorError(val: string): val is ConnectorErrorType;\nexport declare const CONNECTOR_PROVIDERS_USING_NANGO: readonly [\"confluence\", \"google_drive\", \"intercom\", \"notion\", \"slack\"];\ntype ConnectorProviderUsingNango = (typeof CONNECTOR_PROVIDERS_USING_NANGO)[number];\nexport declare function connectorIsUsingNango(provider: string): provider is ConnectorProviderUsingNango;\nexport type ConnectorType = {\n    id: string;\n    type: ConnectorProvider;\n    workspaceId: string;\n    dataSourceName: string;\n    lastSyncStatus?: ConnectorSyncStatus;\n    lastSyncStartTime?: number;\n    lastSyncFinishTime?: number;\n    lastSyncSuccessfulTime?: number;\n    firstSuccessfulSyncTime?: number;\n    firstSyncProgress?: string;\n    errorType?: ConnectorErrorType;\n};\n/**\n * This type represents the permission associated with a ContentNode. For now the only\n * permission we handle is read. but we could have more complex permissions in the future.\n */\nexport type ConnectorPermission = \"read\" | \"write\" | \"read_write\" | \"none\";\nexport type ContentNodeType = \"file\" | \"folder\" | \"database\" | \"channel\";\n/**\n * A ContentNode represents a connector related node. As an example:\n * - Notion: Top-level pages (possibly manually added lower level ones)\n * - Github: repositories\n * - Slack: channels\n * - GoogleDrive: shared drive or sub-folders of shared drives.\n *\n * `internalId` and `parentInternalId` are internal opaque identifiers that\n * should enable reconstructing the tree structure of the resources.\n *\n * Those ids must be aligned with those used in the \"parents\" field of data\n * sources documents, to enable search filter on documents based on their\n * parents, see the\n *\n * The convention to use for internal ids are to always use the externally\n * provided id when possible (e.g. Notion page id, Github repository id,\n * etc...). When not possible, such as for Github issues whose id is not\n * workspace-unique, a custom function to create a unique id is created, and\n * used both in the parents field management code and the connectors node\n * code.\n */\nexport type ContentNode = {\n    provider: ConnectorProvider;\n    internalId: string;\n    parentInternalId: string | null;\n    type: ContentNodeType;\n    title: string;\n    titleWithParentsContext?: string;\n    sourceUrl: string | null;\n    expandable: boolean;\n    preventSelection?: boolean;\n    permission: ConnectorPermission;\n    dustDocumentId: string | null;\n    lastUpdatedAt: number | null;\n};\nexport type GoogleDriveFolderType = {\n    id: string;\n    name: string;\n    parent: string | null;\n    children: string[];\n};\nexport type GoogleDriveSelectedFolderType = GoogleDriveFolderType & {\n    selected: boolean;\n};\nexport declare class ConnectorsAPI {\n    _logger: LoggerInterface;\n    constructor(logger: LoggerInterface);\n    createConnector(provider: ConnectorProvider, workspaceId: string, workspaceAPIKey: string, dataSourceName: string, connectorParams: CreateConnectorOAuthRequestBody | CreateConnectorUrlRequestBody): Promise<ConnectorsAPIResponse<ConnectorType>>;\n    updateConnector({ connectorId, params, }: {\n        connectorId: string;\n        params: UpdateConnectorRequestBody;\n    }): Promise<ConnectorsAPIResponse<{\n        connectorId: string;\n    }>>;\n    deleteConnector(connectorId: string, force?: boolean): Promise<ConnectorsAPIResponse<{\n        success: true;\n    }>>;\n    getConnectorPermissions({ connectorId, parentId, filterPermission, viewType, }: {\n        connectorId: string;\n        parentId?: string;\n        filterPermission?: ConnectorPermission;\n        viewType?: ContentNodesViewType;\n    }): Promise<ConnectorsAPIResponse<{\n        resources: ContentNode[];\n    }>>;\n    setConnectorPermissions({ connectorId, resources, }: {\n        connectorId: string;\n        resources: {\n            internalId: string;\n            permission: ConnectorPermission;\n        }[];\n    }): Promise<ConnectorsAPIResponse<void>>;\n    getConnector(connectorId: string): Promise<ConnectorsAPIResponse<ConnectorType>>;\n    setConnectorConfig(connectorId: string, configKey: string, configValue: string): Promise<ConnectorsAPIResponse<void>>;\n    getConnectorConfig(connectorId: string, configKey: string): Promise<ConnectorsAPIResponse<{\n        connectorId: number;\n        configKey: string;\n        configValue: string;\n    }>>;\n    getContentNodesParents({ connectorId, internalIds, }: {\n        connectorId: string;\n        internalIds: string[];\n    }): Promise<ConnectorsAPIResponse<{\n        nodes: {\n            internalId: string;\n            parents: string[];\n        }[];\n    }>>;\n    getContentNodes({ connectorId, internalIds, viewType, }: {\n        connectorId: string;\n        internalIds: string[];\n        viewType?: ContentNodesViewType;\n    }): Promise<ConnectorsAPIResponse<{\n        nodes: ContentNode[];\n    }>>;\n    linkSlackChannelsWithAgent({ connectorId, slackChannelIds, agentConfigurationId, }: {\n        connectorId: string;\n        slackChannelIds: string[];\n        agentConfigurationId: string;\n    }): Promise<ConnectorsAPIResponse<{\n        success: true;\n    }>>;\n    getSlackChannelsLinkedWithAgent({ connectorId, }: {\n        connectorId: string;\n    }): Promise<ConnectorsAPIResponse<{\n        slackChannels: {\n            slackChannelId: string;\n            slackChannelName: string;\n            agentConfigurationId: string;\n        }[];\n    }>>;\n    getWebCrawlerConfiguration({ connectorId, }: {\n        connectorId: string;\n    }): Promise<ConnectorsAPIResponse<WebCrawlerConfigurationType>>;\n    admin(adminCommand: AdminCommandType): Promise<ConnectorsAPIResponse<AdminResponseType>>;\n    getDefaultHeaders(): {\n        \"Content-Type\": string;\n        Authorization: string;\n    };\n    private _resultFromResponse;\n}\nexport {};\n//# sourceMappingURL=connectors_api.d.ts.map"}}
