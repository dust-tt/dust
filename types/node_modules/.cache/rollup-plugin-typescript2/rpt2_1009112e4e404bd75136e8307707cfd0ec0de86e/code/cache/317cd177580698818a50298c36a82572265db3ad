{"code":"export function formatUserFullName(user) {\n    return user\n        ? [user.firstName, user.lastName].filter(Boolean).join(\" \")\n        : null;\n}\n//# sourceMappingURL=user.js.map","references":["/Users/edouardwautier/Projects/dust/types/src/shared/model_id.ts"],"map":"{\"version\":3,\"file\":\"user.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/front/user.ts\"],\"names\":[],\"mappings\":\"AAkCA,MAAM,UAAU,kBAAkB,CAAC,IAGlC;IACC,OAAO,IAAI;QACT,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;QAC3D,CAAC,CAAC,IAAI,CAAC;AACX,CAAC\"}","dtsmap":{"name":"/Users/edouardwautier/Projects/dust/types/node_modules/.cache/rollup-plugin-typescript2/placeholder/front/user.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"user.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/front/user.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,oBAAoB,CAAC;AAE7C,MAAM,MAAM,yBAAyB,GAAG,aAAa,GAAG,IAAI,CAAC;AAC7D,MAAM,MAAM,QAAQ,GAAG,OAAO,GAAG,SAAS,GAAG,MAAM,GAAG,MAAM,CAAC;AAE7D,MAAM,MAAM,aAAa,GAAG;IAC1B,EAAE,EAAE,OAAO,CAAC;IACZ,GAAG,EAAE,MAAM,CAAC;IACZ,IAAI,EAAE,MAAM,CAAC;IACb,aAAa,EAAE,MAAM,GAAG,IAAI,CAAC;IAC7B,IAAI,EAAE,QAAQ,CAAC;IACf,YAAY,EAAE,yBAAyB,CAAC;CACzC,CAAC;AAEF,MAAM,MAAM,gBAAgB,GAAG,QAAQ,GAAG,QAAQ,CAAC;AAEnD,MAAM,MAAM,QAAQ,GAAG;IACrB,EAAE,EAAE,OAAO,CAAC;IACZ,QAAQ,EAAE,gBAAgB,CAAC;IAC3B,UAAU,EAAE,MAAM,CAAC;IACnB,QAAQ,EAAE,MAAM,CAAC;IACjB,KAAK,EAAE,MAAM,CAAC;IACd,SAAS,EAAE,MAAM,CAAC;IAClB,QAAQ,EAAE,MAAM,GAAG,IAAI,CAAC;IACxB,QAAQ,EAAE,MAAM,CAAC;IACjB,KAAK,EAAE,MAAM,GAAG,IAAI,CAAC;IACrB,UAAU,EAAE,aAAa,EAAE,CAAC;CAC7B,CAAC;AAEF,MAAM,MAAM,gBAAgB,GAAG;IAC7B,GAAG,EAAE,MAAM,CAAC;IACZ,KAAK,EAAE,MAAM,CAAC;CACf,CAAC;AAEF,wBAAgB,kBAAkB,CAAC,IAAI,CAAC,EAAE;IACxC,SAAS,CAAC,EAAE,MAAM,CAAC;IACnB,QAAQ,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;CAC1B,iBAIA\"}"},"dts":{"name":"/Users/edouardwautier/Projects/dust/types/node_modules/.cache/rollup-plugin-typescript2/placeholder/front/user.d.ts","writeByteOrderMark":false,"text":"import { ModelId } from \"../shared/model_id\";\nexport type WorkspaceSegmentationType = \"interesting\" | null;\nexport type RoleType = \"admin\" | \"builder\" | \"user\" | \"none\";\nexport type WorkspaceType = {\n    id: ModelId;\n    sId: string;\n    name: string;\n    allowedDomain: string | null;\n    role: RoleType;\n    segmentation: WorkspaceSegmentationType;\n};\nexport type UserProviderType = \"github\" | \"google\";\nexport type UserType = {\n    id: ModelId;\n    provider: UserProviderType;\n    providerId: string;\n    username: string;\n    email: string;\n    firstName: string;\n    lastName: string | null;\n    fullName: string;\n    image: string | null;\n    workspaces: WorkspaceType[];\n};\nexport type UserMetadataType = {\n    key: string;\n    value: string;\n};\nexport declare function formatUserFullName(user?: {\n    firstName?: string;\n    lastName?: string | null;\n}): string | null;\n//# sourceMappingURL=user.d.ts.map"}}
