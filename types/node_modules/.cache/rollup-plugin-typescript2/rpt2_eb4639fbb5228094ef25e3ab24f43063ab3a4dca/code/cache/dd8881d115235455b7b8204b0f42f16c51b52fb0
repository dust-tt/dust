{"code":"import { createParser } from \"eventsource-parser\";\nimport { dustManagedCredentials } from \"../../front/lib/api/credentials\";\nimport { Err, Ok } from \"../../shared/result\";\nconst { CORE_API = \"http://127.0.0.1:3001\" } = process.env;\nexport const EMBEDDING_CONFIG = {\n    model_id: \"text-embedding-ada-002\",\n    provider_id: \"openai\",\n    splitter_id: \"base_v0\",\n    max_chunk_size: 512,\n};\nexport function isCoreAPIError(obj) {\n    return (typeof obj === \"object\" &&\n        obj !== null &&\n        \"message\" in obj &&\n        typeof obj.message === \"string\" &&\n        \"code\" in obj &&\n        typeof obj.code === \"string\");\n}\nexport class CoreAPI {\n    constructor(logger) {\n        this._logger = logger;\n    }\n    async createProject() {\n        const response = await fetch(`${CORE_API}/projects`, {\n            method: \"POST\",\n        });\n        return this._resultFromResponse(response);\n    }\n    async deleteProject({ projectId, }) {\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}`, {\n            method: \"DELETE\",\n        });\n        return this._resultFromResponse(response);\n    }\n    async getDatasets({ projectId, }) {\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}/datasets`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        });\n        return this._resultFromResponse(response);\n    }\n    async getDataset({ projectId, datasetName, datasetHash, }) {\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}/datasets/${encodeURIComponent(datasetName)}/${encodeURIComponent(datasetHash)}`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        });\n        return this._resultFromResponse(response);\n    }\n    async createDataset({ projectId, datasetId, data, }) {\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}/datasets`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                dataset_id: datasetId,\n                data,\n            }),\n        });\n        return this._resultFromResponse(response);\n    }\n    async cloneProject({ projectId, }) {\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}/clone`, {\n            method: \"POST\",\n        });\n        return this._resultFromResponse(response);\n    }\n    async createRun({ projectId, runAsWorkspaceId, runType, specification, specificationHash, datasetId, inputs, config, credentials, }) {\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}/runs`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-Dust-Workspace-Id\": runAsWorkspaceId,\n            },\n            body: JSON.stringify({\n                run_type: runType,\n                specification: specification,\n                specification_hash: specificationHash,\n                dataset_id: datasetId,\n                inputs: inputs,\n                config: config,\n                credentials: credentials,\n            }),\n        });\n        return this._resultFromResponse(response);\n    }\n    async createRunStream({ projectId, runAsWorkspaceId, runType, specification, specificationHash, datasetId, inputs, config, credentials, }) {\n        const response = await fetch(`${CORE_API}/projects/${projectId}/runs/stream`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-Dust-Workspace-Id\": runAsWorkspaceId,\n            },\n            body: JSON.stringify({\n                run_type: runType,\n                specification: specification,\n                specification_hash: specificationHash,\n                dataset_id: datasetId,\n                inputs: inputs,\n                config: config,\n                credentials: credentials,\n            }),\n        });\n        if (!response.ok || !response.body) {\n            return this._resultFromResponse(response);\n        }\n        let hasRunId = false;\n        let rejectDustRunIdPromise;\n        let resolveDustRunIdPromise;\n        const dustRunIdPromise = new Promise((resolve, reject) => {\n            rejectDustRunIdPromise = reject;\n            resolveDustRunIdPromise = resolve;\n        });\n        const parser = createParser((event) => {\n            if (event.type === \"event\") {\n                if (event.data) {\n                    try {\n                        const data = JSON.parse(event.data);\n                        if (data.content?.run_id && !hasRunId) {\n                            hasRunId = true;\n                            resolveDustRunIdPromise(data.content.run_id);\n                        }\n                    }\n                    catch (err) {\n                        this._logger.error({ error: err }, \"Failed parsing chunk from Core API\");\n                    }\n                }\n            }\n        });\n        const reader = response.body.getReader();\n        const logger = this._logger;\n        const streamChunks = async function* () {\n            try {\n                while (true) {\n                    const { done, value } = await reader.read();\n                    if (done) {\n                        break;\n                    }\n                    parser.feed(new TextDecoder().decode(value));\n                    yield value;\n                }\n                if (!hasRunId) {\n                    // once the stream is entirely consumed, if we haven't received a run id, reject the promise\n                    setImmediate(() => {\n                        logger.error({}, \"No run id received\");\n                        rejectDustRunIdPromise(new Error(\"No run id received\"));\n                    });\n                }\n            }\n            catch (e) {\n                logger.error({\n                    error: e,\n                }, \"Error streaming chunks\");\n            }\n            finally {\n                reader.releaseLock();\n            }\n        };\n        return new Ok({ chunkStream: streamChunks(), dustRunId: dustRunIdPromise });\n    }\n    async deleteRun({ projectId, runId, }) {\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}/runs/${encodeURIComponent(runId)}`, {\n            method: \"DELETE\",\n        });\n        return this._resultFromResponse(response);\n    }\n    async getRunsBatch({ projectId, dustRunIds, }) {\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}/runs/batch`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                run_ids: dustRunIds,\n            }),\n        });\n        return this._resultFromResponse(response);\n    }\n    async getRun({ projectId, runId, }) {\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}/runs/${encodeURIComponent(runId)}`, {\n            method: \"GET\",\n        });\n        return this._resultFromResponse(response);\n    }\n    async getRunStatus({ projectId, runId, }) {\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}/runs/${encodeURIComponent(runId)}/status`, {\n            method: \"GET\",\n        });\n        return this._resultFromResponse(response);\n    }\n    async getSpecification({ projectId, specificationHash, }) {\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}/specifications/${encodeURIComponent(specificationHash)}`, {\n            method: \"GET\",\n        });\n        return this._resultFromResponse(response);\n    }\n    async getRunBlock({ projectId, runId, blockType, blockName, }) {\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}/runs/${encodeURIComponent(runId)}/blocks/${encodeURIComponent(blockType)}/${encodeURIComponent(blockName)}`, {\n            method: \"GET\",\n        });\n        return this._resultFromResponse(response);\n    }\n    async createDataSource({ projectId, dataSourceId, config, credentials, }) {\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}/data_sources`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                data_source_id: dataSourceId,\n                config: config,\n                credentials: credentials,\n            }),\n        });\n        return this._resultFromResponse(response);\n    }\n    async getDataSource({ projectId, dataSourceId, }) {\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}/data_sources/${encodeURIComponent(dataSourceId)}`, {\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        });\n        return this._resultFromResponse(response);\n    }\n    async deleteDataSource({ projectId, dataSourceName, }) {\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}/data_sources/${encodeURIComponent(dataSourceName)}`, {\n            method: \"DELETE\",\n        });\n        return this._resultFromResponse(response);\n    }\n    async searchDataSource(projectId, dataSourceName, payload) {\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}/data_sources/${encodeURIComponent(dataSourceName)}/search`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                query: payload.query,\n                top_k: payload.topK,\n                filter: payload.filter,\n                full_text: payload.fullText,\n                credentials: payload.credentials,\n                target_document_tokens: payload.target_document_tokens,\n            }),\n        });\n        return this._resultFromResponse(response);\n    }\n    async getDataSourceDocuments({ projectId, dataSourceName, limit, offset, }) {\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}/data_sources/${encodeURIComponent(dataSourceName)}/documents?limit=${limit}&offset=${offset}`, {\n            method: \"GET\",\n        });\n        return this._resultFromResponse(response);\n    }\n    async getDataSourceDocument({ projectId, dataSourceName, documentId, versionHash, }) {\n        const qs = versionHash ? `?version_hash=${versionHash}` : \"\";\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}/data_sources/${encodeURIComponent(dataSourceName)}/documents/${encodeURIComponent(documentId)}${qs}`, {\n            method: \"GET\",\n        });\n        return this._resultFromResponse(response);\n    }\n    async getDataSourceDocumentVersions({ projectId, dataSourceName, documentId, latest_hash, limit = 10, offset = 0, }) {\n        const params = new URLSearchParams({\n            limit: String(limit),\n            offset: String(offset),\n        });\n        if (latest_hash) {\n            params.append(\"latest_hash\", latest_hash);\n        }\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}/data_sources/${encodeURIComponent(dataSourceName)}/documents/${encodeURIComponent(documentId)}/versions?${params.toString()}`, {\n            method: \"GET\",\n        });\n        return this._resultFromResponse(response);\n    }\n    async upsertDataSourceDocument({ projectId, dataSourceName, documentId, timestamp, tags, parents, sourceUrl, section, credentials, lightDocumentOutput = false, }) {\n        const response = await fetch(`${CORE_API}/projects/${projectId}/data_sources/${encodeURIComponent(dataSourceName)}/documents`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                document_id: documentId,\n                timestamp,\n                section,\n                tags,\n                parents,\n                source_url: sourceUrl,\n                credentials,\n                light_document_output: lightDocumentOutput,\n            }),\n        });\n        return this._resultFromResponse(response);\n    }\n    async updateDataSourceDocumentTags({ projectId, dataSourceName, documentId, addTags, removeTags, }) {\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}/data_sources/${encodeURIComponent(dataSourceName)}/documents/${encodeURIComponent(documentId)}/tags`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                add_tags: addTags,\n                remove_tags: removeTags,\n            }),\n        });\n        return this._resultFromResponse(response);\n    }\n    async updateDataSourceDocumentParents({ projectId, dataSourceName, documentId, parents, }) {\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}/data_sources/${encodeURIComponent(dataSourceName)}/documents/${encodeURIComponent(documentId)}/parents`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                parents: parents,\n            }),\n        });\n        return this._resultFromResponse(response);\n    }\n    async deleteDataSourceDocument({ projectId, dataSourceName, documentId, }) {\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}/data_sources/${encodeURIComponent(dataSourceName)}/documents/${encodeURIComponent(documentId)}`, {\n            method: \"DELETE\",\n        });\n        return this._resultFromResponse(response);\n    }\n    async tokenize({ text, modelId, providerId, }) {\n        const credentials = dustManagedCredentials();\n        const response = await fetch(`${CORE_API}/tokenize`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                text,\n                model_id: modelId,\n                provider_id: providerId,\n                credentials,\n            }),\n        });\n        return this._resultFromResponse(response);\n    }\n    async dataSourceTokenize({ text, projectId, dataSourceName, }) {\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}/data_sources/${encodeURIComponent(dataSourceName)}/tokenize`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ text }),\n        });\n        return this._resultFromResponse(response);\n    }\n    async upsertTable({ projectId, dataSourceName, tableId, name, description, }) {\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}/data_sources/${encodeURIComponent(dataSourceName)}/tables`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                table_id: tableId,\n                name: name,\n                description: description,\n            }),\n        });\n        return this._resultFromResponse(response);\n    }\n    async getTable({ projectId, dataSourceName, tableId, }) {\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}/data_sources/${encodeURIComponent(dataSourceName)}/tables/${encodeURIComponent(tableId)}`, {\n            method: \"GET\",\n        });\n        return this._resultFromResponse(response);\n    }\n    async getTables({ projectId, dataSourceName, }) {\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}/data_sources/${encodeURIComponent(dataSourceName)}/tables`, {\n            method: \"GET\",\n        });\n        return this._resultFromResponse(response);\n    }\n    async deleteTable({ projectId, dataSourceName, tableId, }) {\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}/data_sources/${encodeURIComponent(dataSourceName)}/tables/${encodeURIComponent(tableId)}`, {\n            method: \"DELETE\",\n        });\n        return this._resultFromResponse(response);\n    }\n    async upsertTableRows({ projectId, dataSourceName, tableId, rows, truncate, }) {\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}/data_sources/${encodeURIComponent(dataSourceName)}/tables/${encodeURIComponent(tableId)}/rows`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                rows,\n                truncate: truncate || false,\n            }),\n        });\n        return this._resultFromResponse(response);\n    }\n    async getTableRow({ projectId, dataSourceName, tableId, rowId, }) {\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}/data_sources/${encodeURIComponent(dataSourceName)}/tables/${encodeURIComponent(tableId)}/rows/${encodeURIComponent(rowId)}`, {\n            method: \"GET\",\n        });\n        return this._resultFromResponse(response);\n    }\n    async getTableRows({ projectId, dataSourceName, tableId, limit, offset, }) {\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}/data_sources/${encodeURIComponent(dataSourceName)}/tables/${encodeURIComponent(tableId)}/rows?limit=${limit}&offset=${offset}`, {\n            method: \"GET\",\n        });\n        return this._resultFromResponse(response);\n    }\n    async deleteTableRow({ projectId, dataSourceName, tableId, rowId, }) {\n        const response = await fetch(`${CORE_API}/projects/${encodeURIComponent(projectId)}/data_sources/${encodeURIComponent(dataSourceName)}/tables/${encodeURIComponent(tableId)}/rows/${encodeURIComponent(rowId)}`, {\n            method: \"DELETE\",\n        });\n        return this._resultFromResponse(response);\n    }\n    async queryDatabase({ tables, query, }) {\n        const response = await fetch(`${CORE_API}/query_database`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                query: query,\n                tables: tables,\n            }),\n        });\n        return this._resultFromResponse(response);\n    }\n    async _resultFromResponse(response) {\n        // We get the text and attempt to parse so that we can log the raw text in case of error (the\n        // body is already consumed by response.json() if used otherwise).\n        const text = await response.text();\n        let json = null;\n        try {\n            json = JSON.parse(text);\n        }\n        catch (e) {\n            const err = {\n                code: \"unexpected_response_format\",\n                message: `Unexpected response format from CoreAPI: ${e}`,\n            };\n            this._logger.error({\n                connectorsError: err,\n                rawText: text,\n                parseError: e,\n                status: response.status,\n            }, \"CoreAPI error\");\n            return new Err(err);\n        }\n        if (!response.ok) {\n            const err = json?.error;\n            if (isCoreAPIError(err)) {\n                this._logger.error({ coreError: err, status: response.status }, \"CoreAPI error\");\n                return new Err(err);\n            }\n            else {\n                const err = {\n                    code: \"unexpected_error_format\",\n                    message: \"Unexpected error format from CoreAPI\",\n                };\n                this._logger.error({ coreError: err, json, status: response.status }, \"CoreAPI error\");\n                return new Err(err);\n            }\n        }\n        else {\n            const err = json?.error;\n            const res = json?.response;\n            if (err && isCoreAPIError(err)) {\n                this._logger.error({ coreError: err, json, status: response.status }, \"CoreAPI error\");\n                return new Err(err);\n            }\n            else if (res) {\n                return new Ok(res);\n            }\n            else {\n                const err = {\n                    code: \"unexpected_response_format\",\n                    message: \"Unexpected response format from CoreAPI\",\n                };\n                this._logger.error({ coreError: err, json, status: response.status }, \"CoreAPI error\");\n                return new Err(err);\n            }\n        }\n    }\n}\n//# sourceMappingURL=core_api.js.map","references":["/Users/edouardwautier/Projects/dust/types/node_modules/eventsource-parser/dist/index.d.ts","/Users/edouardwautier/Projects/dust/types/src/core/data_source.ts","/Users/edouardwautier/Projects/dust/types/src/front/lib/api/credentials.ts","/Users/edouardwautier/Projects/dust/types/src/front/project.ts","/Users/edouardwautier/Projects/dust/types/src/front/provider.ts","/Users/edouardwautier/Projects/dust/types/src/front/run.ts","/Users/edouardwautier/Projects/dust/types/src/shared/logger.ts","/Users/edouardwautier/Projects/dust/types/src/shared/result.ts"],"map":"{\"version\":3,\"file\":\"core_api.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/front/lib/core_api.ts\"],\"names\":[],\"mappings\":\"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\"}"}
