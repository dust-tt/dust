{"code":"export {};\n//# sourceMappingURL=run.js.map","references":["/Users/edouardwautier/Projects/dust/types/src/front/app.ts"],"map":"{\"version\":3,\"file\":\"run.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/front/run.ts\"],\"names\":[],\"mappings\":\"\"}","dtsmap":{"name":"/Users/edouardwautier/Projects/dust/types/node_modules/.cache/rollup-plugin-typescript2/placeholder/front/run.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"run.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/front/run.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,OAAO,CAAC;AAEvC,MAAM,MAAM,SAAS,GACjB,OAAO,GACP,MAAM,GACN,aAAa,GACb,MAAM,GACN,KAAK,GACL,MAAM,GACN,KAAK,GACL,QAAQ,GACR,OAAO,GACP,KAAK,GACL,QAAQ,GACR,MAAM,GACN,SAAS,GACT,iBAAiB,GACjB,UAAU,CAAC;AAEf,MAAM,MAAM,UAAU,GAAG,QAAQ,GAAG,OAAO,GAAG,SAAS,CAAC;AACxD,KAAK,MAAM,GAAG,SAAS,GAAG,WAAW,GAAG,SAAS,CAAC;AAElD,MAAM,MAAM,SAAS,GAAG;IACtB,MAAM,EAAE,cAAc,CAAC;CACxB,CAAC;AAEF,MAAM,MAAM,SAAS,GAAG;IACtB,GAAG,EAAE,MAAM,CAAC;IACZ,MAAM,EAAE,WAAW,EAAE,CAAC;CACvB,CAAC;AAEF,MAAM,MAAM,WAAW,GAAG;IACxB,UAAU,EAAE,SAAS,CAAC;IACtB,IAAI,EAAE,MAAM,CAAC;IACb,MAAM,EAAE,MAAM,CAAC;IACf,aAAa,EAAE,MAAM,CAAC;IACtB,WAAW,EAAE,MAAM,CAAC;CACrB,CAAC;AAEF,MAAM,MAAM,SAAS,GAAG;IACtB,KAAK,EAAE,OAAO,GAAG,IAAI,CAAC;IACtB,KAAK,EAAE,MAAM,GAAG,IAAI,CAAC;IACrB,IAAI,EAAE,OAAO,GAAG,IAAI,CAAC;CACtB,CAAC;AAEF,MAAM,MAAM,OAAO,GAAG;IACpB,MAAM,EAAE,MAAM,CAAC;IACf,OAAO,EAAE,MAAM,CAAC;IAChB,QAAQ,EAAE,UAAU,CAAC;IACrB,QAAQ,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IACzB,kBAAkB,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IACnC,MAAM,EAAE,SAAS,CAAC;IAClB,MAAM,EAAE,SAAS,CAAC;IAClB,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9D,OAAO,CAAC,EACJ;QACE,KAAK,CAAC,EAAE,OAAO,GAAG,IAAI,CAAC;QACvB,KAAK,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;KACvB,EAAE,EAAE,GACL,IAAI,CAAC;CACV,CAAC\"}"},"dts":{"name":"/Users/edouardwautier/Projects/dust/types/node_modules/.cache/rollup-plugin-typescript2/placeholder/front/run.d.ts","writeByteOrderMark":false,"text":"import { BlockRunConfig } from \"./app\";\nexport type BlockType = \"input\" | \"data\" | \"data_source\" | \"code\" | \"llm\" | \"chat\" | \"map\" | \"reduce\" | \"while\" | \"end\" | \"search\" | \"curl\" | \"browser\" | \"database_schema\" | \"database\";\nexport type RunRunType = \"deploy\" | \"local\" | \"execute\";\ntype Status = \"running\" | \"succeeded\" | \"errored\";\nexport type RunConfig = {\n    blocks: BlockRunConfig;\n};\nexport type RunStatus = {\n    run: Status;\n    blocks: BlockStatus[];\n};\nexport type BlockStatus = {\n    block_type: BlockType;\n    name: string;\n    status: Status;\n    success_count: number;\n    error_count: number;\n};\nexport type TraceType = {\n    value: unknown | null;\n    error: string | null;\n    meta: unknown | null;\n};\nexport type RunType = {\n    run_id: string;\n    created: number;\n    run_type: RunRunType;\n    app_hash?: string | null;\n    specification_hash?: string | null;\n    config: RunConfig;\n    status: RunStatus;\n    traces: Array<[[BlockType, string], Array<Array<TraceType>>]>;\n    results?: {\n        value?: unknown | null;\n        error?: string | null;\n    }[][] | null;\n};\nexport {};\n//# sourceMappingURL=run.d.ts.map"}}
