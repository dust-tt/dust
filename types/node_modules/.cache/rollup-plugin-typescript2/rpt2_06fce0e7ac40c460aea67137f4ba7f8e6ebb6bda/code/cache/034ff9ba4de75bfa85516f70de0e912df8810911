{"code":"export {};\n//# sourceMappingURL=agent.js.map","references":["/Users/edouardwautier/Projects/dust/types/src/front/assistant/actions/dust_app_run.ts","/Users/edouardwautier/Projects/dust/types/src/front/assistant/actions/process.ts","/Users/edouardwautier/Projects/dust/types/src/front/assistant/actions/retrieval.ts","/Users/edouardwautier/Projects/dust/types/src/front/assistant/actions/tables_query.ts","/Users/edouardwautier/Projects/dust/types/src/front/lib/assistant.ts","/Users/edouardwautier/Projects/dust/types/src/shared/model_id.ts"],"map":"{\"version\":3,\"file\":\"agent.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/front/assistant/agent.ts\"],\"names\":[],\"mappings\":\"\"}","dtsmap":{"name":"/Users/edouardwautier/Projects/dust/types/node_modules/.cache/rollup-plugin-typescript2/placeholder/front/assistant/agent.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"agent.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/front/assistant/agent.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,2BAA2B,EAAE,MAAM,4CAA4C,CAAC;AACzF,OAAO,EAAE,wBAAwB,EAAE,MAAM,uCAAuC,CAAC;AACjF,OAAO,EAAE,0BAA0B,EAAE,MAAM,yCAAyC,CAAC;AACrF,OAAO,EAAE,4BAA4B,EAAE,MAAM,4CAA4C,CAAC;AAC1F,OAAO,EAAE,cAAc,EAAE,MAAM,2BAA2B,CAAC;AAC3D,OAAO,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAC;AAEhD;;GAEG;AAKH,MAAM,MAAM,4BAA4B,GACpC,4BAA4B,GAC5B,0BAA0B,GAC1B,2BAA2B,GAC3B,wBAAwB,CAAC;AAE7B,MAAM,MAAM,WAAW,GAAG,4BAA4B,CAAC,MAAM,CAAC,CAAC;AAsB/D,MAAM,MAAM,wBAAwB,GAAG;IACrC,IAAI,EAAE,MAAM,CAAC;IACb,WAAW,EAAE,MAAM,CAAC;IACpB,MAAM,EAAE;QACN,IAAI,EAAE,MAAM,CAAC;QACb,WAAW,EAAE,MAAM,CAAC;QACpB,IAAI,EAAE,QAAQ,GAAG,QAAQ,GAAG,SAAS,CAAC;KACvC,EAAE,CAAC;CACL,CAAC;AAEF;;GAEG;AAEH,MAAM,MAAM,gCAAgC,GAAG;IAC7C,EAAE,EAAE,OAAO,CAAC;IACZ,KAAK,EAAE,cAAc,CAAC;IACtB,WAAW,EAAE,MAAM,CAAC;IACpB,mBAAmB,EAAE,MAAM,GAAG,IAAI,CAAC;CACpC,CAAC;AAEF;;GAEG;AAEH,MAAM,MAAM,iBAAiB,GACzB,QAAQ,GACR,mBAAmB,GACnB,6BAA6B,GAC7B,yBAAyB,CAAC;AAE9B;;;;;;;GAOG;AACH,MAAM,MAAM,WAAW,GAAG,QAAQ,GAAG,UAAU,GAAG,OAAO,CAAC;AAC1D,MAAM,MAAM,wBAAwB,GAAG,WAAW,GAAG,iBAAiB,CAAC;AAEvE;;;;;;;GAOG;AACH,MAAM,MAAM,uBAAuB,GAC/B,QAAQ,GACR,WAAW,GACX,WAAW,GACX,SAAS,CAAC;AAKd,MAAM,MAAM,mBAAmB,GAAG,SAAS,GAAG,aAAa,CAAC;AAE5D;;;;;;;;;;;;;;;;;;;;;;GAsBG;AACH,MAAM,MAAM,iBAAiB,GACzB;IAAE,OAAO,EAAE,MAAM,CAAC;IAAC,WAAW,CAAC,EAAE,OAAO,CAAA;CAAE,GAC1C,MAAM,GACN;IAAE,cAAc,EAAE,MAAM,CAAA;CAAE,GAC1B,KAAK,GACL,0BAA0B,GAC1B,WAAW,GACX,WAAW,GACX,QAAQ,GACR,gBAAgB,GAChB,UAAU,CAAC;AAEf,MAAM,MAAM,cAAc,GAAG;IAC3B,SAAS,EAAE,MAAM,CAAC;IAClB,YAAY,EAAE,MAAM,CAAC;IACrB,yBAAyB,EAAE,MAAM,CAAC;IAGlC,aAAa,EAAE,MAAM,CAAC;CACvB,CAAC;AAEF,MAAM,MAAM,kBAAkB,GAAG,SAAS,MAAM,EAAE,CAAC;AAEnD,MAAM,MAAM,2BAA2B,GAAG;IACxC,EAAE,EAAE,OAAO,CAAC;IAEZ,gBAAgB,EAAE,MAAM,GAAG,IAAI,CAAC;IAEhC,GAAG,EAAE,MAAM,CAAC;IACZ,OAAO,EAAE,MAAM,CAAC;IAEhB,eAAe,EAAE,OAAO,GAAG,IAAI,CAAC;IAEhC,YAAY,EAAE,MAAM,GAAG,IAAI,CAAC;IAG5B,UAAU,EAAE,gCAAgC,GAAG,IAAI,CAAC;IAEpD,MAAM,EAAE,wBAAwB,CAAC;IACjC,KAAK,EAAE,uBAAuB,CAAC;IAI/B,cAAc,EAAE,mBAAmB,GAAG,IAAI,CAAC;IAE3C,IAAI,EAAE,MAAM,CAAC;IACb,WAAW,EAAE,MAAM,CAAC;IACpB,UAAU,EAAE,MAAM,CAAC;IAGnB,WAAW,CAAC,EAAE,kBAAkB,CAAC;IAEjC,KAAK,CAAC,EAAE,cAAc,CAAC;CACxB,CAAC;AAEF,MAAM,MAAM,sBAAsB,GAAG,2BAA2B,GAAG;IAGjE,OAAO,EAAE,4BAA4B,EAAE,CAAC;CACzC,CAAC;AAEF,MAAM,WAAW,8BAA8B;IAE7C,UAAU,EAAE;QACV,KAAK,EAAE,cAAc,CAAC;QACtB,WAAW,EAAE,MAAM,CAAC;QACpB,mBAAmB,EAAE,MAAM,GAAG,IAAI,CAAC;KACpC,GAAG,IAAI,CAAC;IAET,IAAI,EAAE,MAAM,CAAC;IACb,KAAK,EAAE,uBAAuB,CAAC;IAC/B,WAAW,EAAE,MAAM,CAAC;IACpB,OAAO,EAAE,4BAA4B,EAAE,CAAC;IACxC,YAAY,EAAE,MAAM,GAAG,IAAI,CAAC;IAC5B,UAAU,EAAE,IAAI,CAAC;CAClB\"}"},"dts":{"name":"/Users/edouardwautier/Projects/dust/types/node_modules/.cache/rollup-plugin-typescript2/placeholder/front/assistant/agent.d.ts","writeByteOrderMark":false,"text":"import { DustAppRunConfigurationType } from \"../../front/assistant/actions/dust_app_run\";\nimport { ProcessConfigurationType } from \"../../front/assistant/actions/process\";\nimport { RetrievalConfigurationType } from \"../../front/assistant/actions/retrieval\";\nimport { TablesQueryConfigurationType } from \"../../front/assistant/actions/tables_query\";\nimport { SupportedModel } from \"../../front/lib/assistant\";\nimport { ModelId } from \"../../shared/model_id\";\n/**\n * Agent Action configuration\n */\nexport type AgentActionConfigurationType = TablesQueryConfigurationType | RetrievalConfigurationType | DustAppRunConfigurationType | ProcessConfigurationType;\nexport type AgentAction = AgentActionConfigurationType[\"type\"];\nexport type AgentActionSpecification = {\n    name: string;\n    description: string;\n    inputs: {\n        name: string;\n        description: string;\n        type: \"string\" | \"number\" | \"boolean\";\n    }[];\n};\n/**\n * Agent Message configuration\n */\nexport type AgentGenerationConfigurationType = {\n    id: ModelId;\n    model: SupportedModel;\n    temperature: number;\n    forceUseAtIteration: number | null;\n};\n/**\n * Agent configuration\n */\nexport type GlobalAgentStatus = \"active\" | \"disabled_by_admin\" | \"disabled_missing_datasource\" | \"disabled_free_workspace\";\n/**\n * Agent statuses:\n * - \"active\" means the agent can be used directly\n * - \"archived\" means the agent was either deleted, or that there is a newer\n *   version\n * - \"draft\" is used for the \"try\" button in builder, when the agent is not yet\n *   fully created / updated\n */\nexport type AgentStatus = \"active\" | \"archived\" | \"draft\";\nexport type AgentConfigurationStatus = AgentStatus | GlobalAgentStatus;\n/**\n * Agent configuration scope\n * - 'global' scope are Dust assistants, not editable, inside-list for all, cannot be overriden\n * - 'workspace' scope are editable by builders only,  inside-list by default but user can change it\n * - 'published' scope are editable by everybody, outside-list by default\n * - 'private' scope are editable by author only, inside-list for author, cannot be overriden (so no\n *   entry in the table\n */\nexport type AgentConfigurationScope = \"global\" | \"workspace\" | \"published\" | \"private\";\nexport type AgentUserListStatus = \"in-list\" | \"not-in-list\";\n/**\n * Defines strategies for fetching agent configurations based on various\n * 'views':\n * - 'list': Retrieves all agents within the user's list, including their\n *   private agents, agents from the workspace and global scope, plus any\n *   published agents they've added to their list (refer to\n *   AgentUserRelationTable).\n * - {agentId: string}: Retrieves a single agent by its ID.\n * - {conversationId: string}: all agent from the user's list view, plus the\n *   agents mentioned in the conversation with the provided Id.\n * - 'all': Combines workspace and published agents, excluding private agents.\n *   Typically used in agent galleries.\n * - 'manage-assistants-search': specific to the manage-assistants page,\n *   retrieves all global agents including inactive ones, all workspace, all\n *   published and the user's private agents.\n * - 'workspace': Retrieves all agents exclusively with a 'workspace' scope.\n * - 'published': Retrieves all agents exclusively with a 'published' scope.\n * - 'global': Retrieves all agents exclusively with a 'global' scope.\n * - 'admin_internal': Grants access to all agents, including private ones.\n * - 'archived': Retrieves all agents that are archived. Only available to super users.\n *   Intended strictly for internal use with necessary superuser or admin\n *   authorization.\n */\nexport type AgentsGetViewType = {\n    agentId: string;\n    allVersions?: boolean;\n} | \"list\" | {\n    conversationId: string;\n} | \"all\" | \"manage-assistants-search\" | \"workspace\" | \"published\" | \"global\" | \"admin_internal\" | \"archived\";\nexport type AgentUsageType = {\n    userCount: number;\n    messageCount: number;\n    usersWithAgentInListCount: number;\n    timePeriodSec: number;\n};\nexport type AgentRecentAuthors = readonly string[];\nexport type LightAgentConfigurationType = {\n    id: ModelId;\n    versionCreatedAt: string | null;\n    sId: string;\n    version: number;\n    versionAuthorId: ModelId | null;\n    instructions: string | null;\n    generation: AgentGenerationConfigurationType | null;\n    status: AgentConfigurationStatus;\n    scope: AgentConfigurationScope;\n    userListStatus: AgentUserListStatus | null;\n    name: string;\n    description: string;\n    pictureUrl: string;\n    lastAuthors?: AgentRecentAuthors;\n    usage?: AgentUsageType;\n};\nexport type AgentConfigurationType = LightAgentConfigurationType & {\n    actions: AgentActionConfigurationType[];\n};\nexport interface TemplateAgentConfigurationType {\n    generation: {\n        model: SupportedModel;\n        temperature: number;\n        forceUseAtIteration: number | null;\n    } | null;\n    name: string;\n    scope: AgentConfigurationScope;\n    description: string;\n    actions: AgentActionConfigurationType[];\n    instructions: string | null;\n    isTemplate: true;\n}\n//# sourceMappingURL=agent.d.ts.map"}}
