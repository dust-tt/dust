{"code":"import { isConnectorsAPIError } from \"../../connectors/api\";\nimport { Err, Ok } from \"../../front/lib/result\";\nconst { CONNECTORS_API = \"http://127.0.0.1:3002\", DUST_CONNECTORS_SECRET = \"\", } = process.env;\nexport const CONNECTOR_PROVIDERS_USING_NANGO = [\n    \"confluence\",\n    \"google_drive\",\n    \"intercom\",\n    \"notion\",\n    \"slack\",\n];\nexport function connectorIsUsingNango(provider) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return CONNECTOR_PROVIDERS_USING_NANGO.includes(provider);\n}\nexport class ConnectorsAPI {\n    _logger;\n    constructor(logger) {\n        this._logger = logger;\n    }\n    async createConnector(provider, workspaceId, workspaceAPIKey, dataSourceName, connectorParams) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/create/${provider}`, {\n            method: \"POST\",\n            headers: this.getDefaultHeaders(),\n            body: JSON.stringify({\n                workspaceId,\n                workspaceAPIKey,\n                dataSourceName,\n                connectorParams,\n            }),\n        });\n        return this._resultFromResponse(res);\n    }\n    async updateConnector({ connectorId, params: { connectionId }, }) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/update/${connectorId}`, {\n            method: \"POST\",\n            headers: this.getDefaultHeaders(),\n            body: JSON.stringify({\n                connectionId,\n            }),\n        });\n        return this._resultFromResponse(res);\n    }\n    async pauseConnector(connectorId) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/pause/${connectorId}`, {\n            method: \"POST\",\n            headers: this.getDefaultHeaders(),\n        });\n        return this._resultFromResponse(res);\n    }\n    async resumeConnector(connectorId) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/resume/${connectorId}`, {\n            method: \"POST\",\n            headers: this.getDefaultHeaders(),\n        });\n        return this._resultFromResponse(res);\n    }\n    async syncConnector(connectorId) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/sync/${connectorId}`, {\n            method: \"POST\",\n            headers: this.getDefaultHeaders(),\n        });\n        return this._resultFromResponse(res);\n    }\n    async deleteConnector(connectorId, force = false) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/delete/${connectorId}?force=${force ? \"true\" : \"false\"}`, {\n            method: \"DELETE\",\n            headers: this.getDefaultHeaders(),\n        });\n        return this._resultFromResponse(res);\n    }\n    async getConnectorPermissions({ connectorId, parentId, filterPermission, }) {\n        let url = `${CONNECTORS_API}/connectors/${connectorId}/permissions?`;\n        if (parentId) {\n            url += `&parentId=${parentId}`;\n        }\n        if (filterPermission) {\n            url += `&filterPermission=${filterPermission}`;\n        }\n        const res = await fetch(url, {\n            method: \"GET\",\n            headers: this.getDefaultHeaders(),\n        });\n        return this._resultFromResponse(res);\n    }\n    async setConnectorPermissions({ connectorId, resources, }) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/${connectorId}/permissions`, {\n            method: \"POST\",\n            headers: this.getDefaultHeaders(),\n            body: JSON.stringify({\n                resources: resources.map(({ internalId, permission }) => ({\n                    internal_id: internalId,\n                    permission,\n                })),\n            }),\n        });\n        return this._resultFromResponse(res);\n    }\n    async getConnector(connectorId) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/${connectorId}`, {\n            method: \"GET\",\n            headers: this.getDefaultHeaders(),\n        });\n        return this._resultFromResponse(res);\n    }\n    async setConnectorConfig(connectorId, configKey, configValue) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/${connectorId}/config/${configKey}`, {\n            method: \"POST\",\n            headers: this.getDefaultHeaders(),\n            body: JSON.stringify({\n                configValue,\n            }),\n        });\n        return this._resultFromResponse(res);\n    }\n    async getConnectorConfig(connectorId, configKey) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/${connectorId}/config/${configKey}`, {\n            method: \"GET\",\n            headers: this.getDefaultHeaders(),\n        });\n        return this._resultFromResponse(res);\n    }\n    async getResourcesParents({ connectorId, resourceInternalIds, }) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/${connectorId}/resources/parents`, {\n            method: \"POST\",\n            headers: this.getDefaultHeaders(),\n            body: JSON.stringify({\n                resourceInternalIds,\n            }),\n        });\n        return this._resultFromResponse(res);\n    }\n    async getResourcesTitles({ connectorId, resourceInternalIds, }) {\n        const res = await fetch(`${CONNECTORS_API}/connectors/${connectorId}/resources/titles`, {\n            method: \"POST\",\n            headers: this.getDefaultHeaders(),\n            body: JSON.stringify({\n                resourceInternalIds,\n            }),\n        });\n        return this._resultFromResponse(res);\n    }\n    async linkSlackChannelsWithAgent({ connectorId, slackChannelIds, agentConfigurationId, }) {\n        const res = await fetch(`${CONNECTORS_API}/slack/channels/linked_with_agent`, {\n            method: \"PATCH\",\n            headers: this.getDefaultHeaders(),\n            body: JSON.stringify({\n                connector_id: connectorId,\n                agent_configuration_id: agentConfigurationId,\n                slack_channel_ids: slackChannelIds,\n            }),\n        });\n        return this._resultFromResponse(res);\n    }\n    async getSlackChannelsLinkedWithAgent({ connectorId, }) {\n        const res = await fetch(`${CONNECTORS_API}/slack/channels/linked_with_agent?connector_id=${connectorId}`, {\n            method: \"GET\",\n            headers: this.getDefaultHeaders(),\n        });\n        return this._resultFromResponse(res);\n    }\n    getDefaultHeaders() {\n        return {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${DUST_CONNECTORS_SECRET}`,\n        };\n    }\n    async _resultFromResponse(response) {\n        // We get the text and attempt to parse so that we can log the raw text in case of error (the\n        // body is already consumed by response.json() if used otherwise).\n        const text = await response.text();\n        let json = null;\n        try {\n            json = JSON.parse(text);\n        }\n        catch (e) {\n            const err = {\n                type: \"unexpected_response_format\",\n                message: `Unexpected response format from ConnectorsAPI: ${e}`,\n            };\n            this._logger.error({\n                connectorsError: err,\n                parseError: e,\n                rawText: text,\n                status: response.status,\n            }, \"ConnectorsAPI error\");\n            return new Err(err);\n        }\n        if (!response.ok) {\n            const err = json?.error;\n            if (isConnectorsAPIError(err)) {\n                this._logger.error({ connectorsError: err, status: response.status }, \"ConnectorsAPI error\");\n                return new Err(err);\n            }\n            else {\n                const err = {\n                    type: \"unexpected_error_format\",\n                    message: \"Unexpected error format from ConnectorAPI\",\n                };\n                this._logger.error({ connectorsError: err, json, status: response.status }, \"ConnectorsAPI error\");\n                return new Err(err);\n            }\n        }\n        else {\n            return new Ok(json);\n        }\n    }\n}\n//# sourceMappingURL=connectors_api.js.map","references":["/Users/edouardwautier/Projects/dust/types/src/connectors/api.ts","/Users/edouardwautier/Projects/dust/types/src/front/data_source.ts","/Users/edouardwautier/Projects/dust/types/src/front/lib/result.ts","/Users/edouardwautier/Projects/dust/types/src/shared/logger.ts"],"map":"{\"version\":3,\"file\":\"connectors_api.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/front/lib/connectors_api.ts\"],\"names\":[],\"mappings\":\"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\"}"}
