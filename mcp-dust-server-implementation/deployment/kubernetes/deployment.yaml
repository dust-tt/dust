apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-dust-server
  namespace: mcp-dust-server
  labels:
    app: mcp-dust-server
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mcp-dust-server
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: mcp-dust-server
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5001"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: mcp-dust-server
          image: ${DOCKER_REGISTRY}/mcp-dust-server:${IMAGE_TAG}
          imagePullPolicy: Always
          ports:
            - containerPort: 5001
              name: http
          resources:
            requests:
              cpu: "500m"
              memory: "512Mi"
            limits:
              cpu: "1000m"
              memory: "1Gi"
          livenessProbe:
            httpGet:
              path: /health
              port: 5001
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: 5001
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          envFrom:
            - configMapRef:
                name: mcp-dust-server-config
            - secretRef:
                name: mcp-dust-server-secrets
          env:
            - name: NODE_ENV
              value: "production"
          volumeMounts:
            - name: logs
              mountPath: /app/logs
      volumes:
        - name: logs
          emptyDir: {}
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      terminationGracePeriodSeconds: 30
