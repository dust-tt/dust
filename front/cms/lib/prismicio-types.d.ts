// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type PickContentRelationshipFieldData<
  TRelationship extends
    | prismic.CustomTypeModelFetchCustomTypeLevel1
    | prismic.CustomTypeModelFetchCustomTypeLevel2
    | prismic.CustomTypeModelFetchGroupLevel1
    | prismic.CustomTypeModelFetchGroupLevel2,
  TData extends Record<
    string,
    | prismic.AnyRegularField
    | prismic.GroupField
    | prismic.NestedGroupField
    | prismic.SliceZone
  >,
  TLang extends string,
> =
  // Content relationship fields
  {
    [TSubRelationship in Extract<
      TRelationship["fields"][number],
      prismic.CustomTypeModelFetchContentRelationshipLevel1
    > as TSubRelationship["id"]]: ContentRelationshipFieldWithData<
      TSubRelationship["customtypes"],
      TLang
    >;
  } & // Group
  {
    [TGroup in Extract<
      TRelationship["fields"][number],
      | prismic.CustomTypeModelFetchGroupLevel1
      | prismic.CustomTypeModelFetchGroupLevel2
    > as TGroup["id"]]: TData[TGroup["id"]] extends prismic.GroupField<
      infer TGroupData
    >
      ? prismic.GroupField<
          PickContentRelationshipFieldData<TGroup, TGroupData, TLang>
        >
      : never;
  } & // Other fields
  {
    [TFieldKey in Extract<
      TRelationship["fields"][number],
      string
    >]: TFieldKey extends keyof TData ? TData[TFieldKey] : never;
  };

type ContentRelationshipFieldWithData<
  TCustomType extends
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel1 | string)[]
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel2 | string)[],
  TLang extends string = string,
> = {
  [ID in Exclude<
    TCustomType[number],
    string
  >["id"]]: prismic.ContentRelationshipField<
    ID,
    TLang,
    PickContentRelationshipFieldData<
      Extract<TCustomType[number], { id: ID }>,
      Extract<prismic.Content.AllDocumentTypes, { type: ID }>["data"],
      TLang
    >
  >;
}[Exclude<TCustomType[number], string>["id"]];

type BlogPostDocumentDataSlicesSlice =
  | RichTextSlice
  | CallToActionSlice
  | FeaturedArticleHeroSlice
  | FeaturedCardListSlice;

/**
 * Content for Blog post documents
 */
interface BlogPostDocumentData {
  /**
   * Slice Zone field in *Blog post*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: blog_post.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/slices
   */
  slices: prismic.SliceZone<BlogPostDocumentDataSlicesSlice> /**
   * Meta Title field in *Blog post*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: blog_post.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Blog post*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: blog_post.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Blog post*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: blog_post.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Blog post document from Prismic
 *
 * - **API ID**: `blog_post`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type BlogPostDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<BlogPostDocumentData>,
    "blog_post",
    Lang
  >;

export type AllDocumentTypes = BlogPostDocument;

/**
 * Primary content in *CallToAction → Default → Primary*
 */
export interface CallToActionSliceDefaultPrimary {
  /**
   * Image field in *CallToAction → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: call_to_action.default.primary.image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  image: prismic.ImageField<never>;

  /**
   * title field in *CallToAction → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: call_to_action.default.primary.title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title: prismic.RichTextField;

  /**
   * paragraph field in *CallToAction → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: call_to_action.default.primary.paragraph
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  paragraph: prismic.RichTextField;

  /**
   * buttonLink field in *CallToAction → Default → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: Redirect URL for CTA button
   * - **API ID Path**: call_to_action.default.primary.buttonLink
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  buttonLink: prismic.LinkField<
    string,
    string,
    unknown,
    prismic.FieldState,
    never
  >;
}

/**
 * Default variation for CallToAction Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CallToActionSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<CallToActionSliceDefaultPrimary>,
  never
>;

/**
 * Primary content in *CallToAction → AlignLeft → Primary*
 */
export interface CallToActionSliceAlignLeftPrimary {
  /**
   * Image field in *CallToAction → AlignLeft → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: call_to_action.alignLeft.primary.image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  image: prismic.ImageField<never>;

  /**
   * title field in *CallToAction → AlignLeft → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: call_to_action.alignLeft.primary.title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title: prismic.RichTextField;

  /**
   * paragraph field in *CallToAction → AlignLeft → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: call_to_action.alignLeft.primary.paragraph
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  paragraph: prismic.RichTextField;

  /**
   * buttonLink field in *CallToAction → AlignLeft → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: Redirect URL for CTA button
   * - **API ID Path**: call_to_action.alignLeft.primary.buttonLink
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  buttonLink: prismic.LinkField<
    string,
    string,
    unknown,
    prismic.FieldState,
    never
  >;
}

/**
 * AlignLeft variation for CallToAction Slice
 *
 * - **API ID**: `alignLeft`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CallToActionSliceAlignLeft = prismic.SharedSliceVariation<
  "alignLeft",
  Simplify<CallToActionSliceAlignLeftPrimary>,
  never
>;

/**
 * Slice variation for *CallToAction*
 */
type CallToActionSliceVariation =
  | CallToActionSliceDefault
  | CallToActionSliceAlignLeft;

/**
 * CallToAction Shared Slice
 *
 * - **API ID**: `call_to_action`
 * - **Description**: CallToAction
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CallToActionSlice = prismic.SharedSlice<
  "call_to_action",
  CallToActionSliceVariation
>;

/**
 * Item in *CardGrid → 3 Columns → Primary → Cards*
 */
export interface CardGridSliceThreeColumnPrimaryItemsItem {
  /**
   * Card Image field in *CardGrid → 3 Columns → Primary → Cards*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: card_grid.three_column.primary.items[].image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  image: prismic.ImageField<never>;

  /**
   * Category field in *CardGrid → 3 Columns → Primary → Cards*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: card_grid.three_column.primary.items[].category
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  category: prismic.KeyTextField;

  /**
   * Title field in *CardGrid → 3 Columns → Primary → Cards*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: card_grid.three_column.primary.items[].title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title: prismic.RichTextField;

  /**
   * Date field in *CardGrid → 3 Columns → Primary → Cards*
   *
   * - **Field Type**: Date
   * - **Placeholder**: *None*
   * - **API ID Path**: card_grid.three_column.primary.items[].date
   * - **Documentation**: https://prismic.io/docs/fields/date
   */
  date: prismic.DateField;

  /**
   * Link to Details field in *CardGrid → 3 Columns → Primary → Cards*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: card_grid.three_column.primary.items[].link
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  link: prismic.LinkField<string, string, unknown, prismic.FieldState, never>;
}

/**
 * Primary content in *CardGrid → 3 Columns → Primary*
 */
export interface CardGridSliceThreeColumnPrimary {
  /**
   * Cards field in *CardGrid → 3 Columns → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: card_grid.three_column.primary.items[]
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  items: prismic.GroupField<Simplify<CardGridSliceThreeColumnPrimaryItemsItem>>;
}

/**
 * 3 Columns variation for CardGrid Slice
 *
 * - **API ID**: `three_column`
 * - **Description**: A three-column grid of cards, useful for blog or news summaries.
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CardGridSliceThreeColumn = prismic.SharedSliceVariation<
  "three_column",
  Simplify<CardGridSliceThreeColumnPrimary>,
  never
>;

/**
 * Slice variation for *CardGrid*
 */
type CardGridSliceVariation = CardGridSliceThreeColumn;

/**
 * CardGrid Shared Slice
 *
 * - **API ID**: `card_grid`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CardGridSlice = prismic.SharedSlice<
  "card_grid",
  CardGridSliceVariation
>;

/**
 * Item in *FeaturedArticleHero → With Large Image → Primary → Author Details*
 */
export interface FeaturedArticleHeroSliceWithLargeImagePrimaryAuthorDetailsItem {
  /**
   * Avatar field in *FeaturedArticleHero → With Large Image → Primary → Author Details*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: featured_article_hero.with_large_image.primary.author_details[].avatar
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  avatar: prismic.ImageField<never>;

  /**
   * Name field in *FeaturedArticleHero → With Large Image → Primary → Author Details*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: featured_article_hero.with_large_image.primary.author_details[].name
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  name: prismic.KeyTextField;

  /**
   * Publication Date field in *FeaturedArticleHero → With Large Image → Primary → Author Details*
   *
   * - **Field Type**: Date
   * - **Placeholder**: *None*
   * - **API ID Path**: featured_article_hero.with_large_image.primary.author_details[].publication_date
   * - **Documentation**: https://prismic.io/docs/fields/date
   */
  publication_date: prismic.DateField;

  /**
   * Reading Time field in *FeaturedArticleHero → With Large Image → Primary → Author Details*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: featured_article_hero.with_large_image.primary.author_details[].reading_time
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  reading_time: prismic.KeyTextField;
}

/**
 * Primary content in *FeaturedArticleHero → With Large Image → Primary*
 */
export interface FeaturedArticleHeroSliceWithLargeImagePrimary {
  /**
   * Title field in *FeaturedArticleHero → With Large Image → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: featured_article_hero.with_large_image.primary.title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title: prismic.RichTextField;

  /**
   * Author Details field in *FeaturedArticleHero → With Large Image → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: featured_article_hero.with_large_image.primary.author_details[]
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  author_details: prismic.GroupField<
    Simplify<FeaturedArticleHeroSliceWithLargeImagePrimaryAuthorDetailsItem>
  >;

  /**
   * Featured Image field in *FeaturedArticleHero → With Large Image → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: featured_article_hero.with_large_image.primary.featured_image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  featured_image: prismic.ImageField<never>;
}

/**
 * With Large Image variation for FeaturedArticleHero Slice
 *
 * - **API ID**: `with_large_image`
 * - **Description**: Displays the hero with an article heading, author details, metadata, and a large main image or feature graphic.
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type FeaturedArticleHeroSliceWithLargeImage =
  prismic.SharedSliceVariation<
    "with_large_image",
    Simplify<FeaturedArticleHeroSliceWithLargeImagePrimary>,
    never
  >;

/**
 * Slice variation for *FeaturedArticleHero*
 */
type FeaturedArticleHeroSliceVariation = FeaturedArticleHeroSliceWithLargeImage;

/**
 * FeaturedArticleHero Shared Slice
 *
 * - **API ID**: `featured_article_hero`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type FeaturedArticleHeroSlice = prismic.SharedSlice<
  "featured_article_hero",
  FeaturedArticleHeroSliceVariation
>;

/**
 * Item in *FeaturedCardList → Default → Primary → Cards*
 */
export interface FeaturedCardListSliceDefaultPrimaryItemsItem {
  /**
   * Card image field in *FeaturedCardList → Default → Primary → Cards*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: featured_card_list.default.primary.items[].media
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  media: prismic.ImageField<never>;

  /**
   * Title field in *FeaturedCardList → Default → Primary → Cards*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: featured_card_list.default.primary.items[].title
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  title: prismic.RichTextField;

  /**
   * Meta (date or author) field in *FeaturedCardList → Default → Primary → Cards*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: featured_card_list.default.primary.items[].meta
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  meta: prismic.KeyTextField;

  /**
   * Card link field in *FeaturedCardList → Default → Primary → Cards*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: featured_card_list.default.primary.items[].link
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  link: prismic.LinkField<string, string, unknown, prismic.FieldState, never>;
}

/**
 * Primary content in *FeaturedCardList → Default → Primary*
 */
export interface FeaturedCardListSliceDefaultPrimary {
  /**
   * Cards field in *FeaturedCardList → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: featured_card_list.default.primary.items[]
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  items: prismic.GroupField<
    Simplify<FeaturedCardListSliceDefaultPrimaryItemsItem>
  >;
}

/**
 * Default variation for FeaturedCardList Slice
 *
 * - **API ID**: `default`
 * - **Description**: Standard horizontal featured card grid with image, title, and meta (date/author).
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type FeaturedCardListSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<FeaturedCardListSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *FeaturedCardList*
 */
type FeaturedCardListSliceVariation = FeaturedCardListSliceDefault;

/**
 * FeaturedCardList Shared Slice
 *
 * - **API ID**: `featured_card_list`
 * - **Description**: *None*
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type FeaturedCardListSlice = prismic.SharedSlice<
  "featured_card_list",
  FeaturedCardListSliceVariation
>;

/**
 * Primary content in *RichText → Default → Primary*
 */
export interface RichTextSliceDefaultPrimary {
  /**
   * Blog post field in *RichText → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: rich_text.default.primary.blog_post
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  blog_post: prismic.RichTextField;
}

/**
 * Default variation for RichText Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type RichTextSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<RichTextSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *RichText*
 */
type RichTextSliceVariation = RichTextSliceDefault;

/**
 * RichText Shared Slice
 *
 * - **API ID**: `rich_text`
 * - **Description**: RichText
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type RichTextSlice = prismic.SharedSlice<
  "rich_text",
  RichTextSliceVariation
>;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig
    ): prismic.Client<AllDocumentTypes>;
  }

  interface CreateWriteClient {
    (
      repositoryNameOrEndpoint: string,
      options: prismic.WriteClientConfig
    ): prismic.WriteClient<AllDocumentTypes>;
  }

  interface CreateMigration {
    (): prismic.Migration<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      BlogPostDocument,
      BlogPostDocumentData,
      BlogPostDocumentDataSlicesSlice,
      AllDocumentTypes,
      CallToActionSlice,
      CallToActionSliceDefaultPrimary,
      CallToActionSliceAlignLeftPrimary,
      CallToActionSliceVariation,
      CallToActionSliceDefault,
      CallToActionSliceAlignLeft,
      CardGridSlice,
      CardGridSliceThreeColumnPrimaryItemsItem,
      CardGridSliceThreeColumnPrimary,
      CardGridSliceVariation,
      CardGridSliceThreeColumn,
      FeaturedArticleHeroSlice,
      FeaturedArticleHeroSliceWithLargeImagePrimaryAuthorDetailsItem,
      FeaturedArticleHeroSliceWithLargeImagePrimary,
      FeaturedArticleHeroSliceVariation,
      FeaturedArticleHeroSliceWithLargeImage,
      FeaturedCardListSlice,
      FeaturedCardListSliceDefaultPrimaryItemsItem,
      FeaturedCardListSliceDefaultPrimary,
      FeaturedCardListSliceVariation,
      FeaturedCardListSliceDefault,
      RichTextSlice,
      RichTextSliceDefaultPrimary,
      RichTextSliceVariation,
      RichTextSliceDefault,
    };
  }
}
