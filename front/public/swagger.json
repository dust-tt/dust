{
  "openapi": "3.0.0",
  "info": {
    "title": "Dust.tt API Documentation",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://dust.tt",
      "description": "Dust.tt API"
    }
  ],
  "paths": {
    "/api/v1/w/{wId}/apps/{aId}/runs/{runId}": {
      "get": {
        "summary": "Retrieve an app run",
        "description": "Retrieve a run for an app in the workspace identified by {wId}.",
        "tags": ["Apps"],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "aId",
            "required": true,
            "description": "ID of the app",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "runId",
            "required": true,
            "description": "ID of the run",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The run",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "run": {
                      "type": "object",
                      "properties": {
                        "run_id": {
                          "type": "string",
                          "description": "The ID of the run",
                          "example": 1234
                        },
                        "app_id": {
                          "type": "string",
                          "description": "The ID of the app",
                          "example": 1234
                        },
                        "status": {
                          "type": "object",
                          "properties": {
                            "run": {
                              "type": "string",
                              "description": "The status of the run",
                              "example": "succeeded"
                            },
                            "build": {
                              "type": "string",
                              "description": "The status of the build",
                              "example": "succeeded"
                            }
                          }
                        },
                        "results": {
                          "type": "object",
                          "description": "The results of the run",
                          "example": {}
                        },
                        "specification_hash": {
                          "type": "string",
                          "description": "The hash of the app specification",
                          "example": 1234
                        },
                        "traces": {
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "timestamp": {
                                  "type": "number",
                                  "description": "The timestamp of the trace",
                                  "example": 1234567890
                                },
                                "trace": {
                                  "type": "object",
                                  "description": "The trace",
                                  "example": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/w/{wId}/apps/{appId}/run": {
      "post": {
        "summary": "Run an app",
        "description": "Run an app of a workspace.",
        "tags": ["Apps"],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "description": "ID of the app",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "App run"
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "404": {
            "description": "Workspace or app not found."
          },
          "405": {
            "description": "Method not supported."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/w/{wId}/apps": {
      "get": {
        "summary": "List apps",
        "description": "Get all apps of a workspace.",
        "tags": ["Apps"],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Apps of the workspace"
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "404": {
            "description": "Workspace not found."
          },
          "405": {
            "description": "Method not supported."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/w/{wId}/assistant/agent_configurations": {
      "get": {
        "summary": "Get the list of assistants",
        "description": "Get the agent configurations for the workspace identified by {wId}.",
        "tags": ["Workspace"],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Agent configurations for the workspace"
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "404": {
            "description": "Workspace not found."
          },
          "405": {
            "description": "Method not supported. Only GET is expected."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/w/{wId}/assistant/conversations/{cId}/content_fragments": {
      "post": {
        "summary": "Create a content fragment",
        "description": "Create a new content fragment in the workspace identified by {wId}.",
        "tags": ["Conversations"],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "cId",
            "required": true,
            "description": "ID of the conversation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the content fragment",
                    "example": "My content fragment"
                  },
                  "content": {
                    "type": "string",
                    "description": "The content of the content fragment",
                    "example": "This is my content fragment"
                  },
                  "url": {
                    "type": "string",
                    "description": "The URL of the content fragment",
                    "example": "https://example.com/content"
                  },
                  "contentType": {
                    "type": "string",
                    "description": "The content type of the content fragment",
                    "example": "text/plain"
                  },
                  "context": {
                    "type": "object",
                    "properties": {
                      "username": {
                        "type": "string",
                        "description": "The username of the user who created the content fragment",
                        "example": "johndoe"
                      },
                      "fullName": {
                        "type": "string",
                        "description": "The full name of the user who created the content fragment",
                        "example": "John Doe"
                      },
                      "email": {
                        "type": "string",
                        "description": "The email of the user who created the content fragment",
                        "example": "johndoe@example.com"
                      },
                      "profilePictureUrl": {
                        "type": "string",
                        "description": "The profile picture URL of the user who created the content fragment",
                        "example": "https://example.com/profile_picture.jpg"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Content fragment created successfully."
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/w/{wId}/assistant/conversations/{cId}/events": {
      "get": {
        "summary": "Get the events for a conversation",
        "description": "Get the events for a conversation in the workspace identified by {wId}.",
        "tags": ["Conversations"],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "cId",
            "required": true,
            "description": "ID of the conversation",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Events for the conversation"
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "404": {
            "description": "Conversation not found."
          },
          "405": {
            "description": "Method not supported. Only GET is expected."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/w/{wId}/assistant/conversations/{cId}": {
      "get": {
        "summary": "Get a conversation",
        "description": "Get a conversation in the workspace identified by {wId}.",
        "tags": ["Conversations"],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "cId",
            "required": true,
            "description": "ID of the conversation",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Conversation retrieved successfully."
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "404": {
            "description": "Conversation not found."
          },
          "405": {
            "description": "Method not supported. Only GET is expected."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/w/{wId}/assistant/conversations/{cId}/messages/{mId}/events": {
      "get": {
        "summary": "Get events for a message",
        "description": "Get events for a message in the workspace identified by {wId}.",
        "tags": ["Conversations"],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "cId",
            "required": true,
            "description": "ID of the conversation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "mId",
            "required": true,
            "description": "ID of the message",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "lastEventId",
            "description": "ID of the last event received",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "events": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID of the event"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the event"
                          },
                          "data": {
                            "type": "object",
                            "description": "Data of the event"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/w/{wId}/assistant/conversations/{cId}/messages": {
      "post": {
        "summary": "Create a message",
        "description": "Create a message in the workspace identified by {wId}.",
        "tags": ["Conversations"],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "cId",
            "required": true,
            "description": "ID of the conversation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "description": "The content of the message",
                    "example": "This is my message"
                  },
                  "context": {
                    "type": "object",
                    "properties": {
                      "timezone": {
                        "type": "string",
                        "description": "The timezone of the user who created the message",
                        "example": "Europe/Paris"
                      },
                      "username": {
                        "type": "string",
                        "description": "The username of the user who created the message",
                        "example": "johndoe"
                      },
                      "fullName": {
                        "type": "string",
                        "description": "The full name of the user who created the message",
                        "example": "John Doe"
                      },
                      "email": {
                        "type": "string",
                        "description": "The email of the user who created the message",
                        "example": "johndoe@example.com"
                      },
                      "profilePictureUrl": {
                        "type": "string",
                        "description": "The profile picture URL of the user who created the message",
                        "example": "https://example.com/profile_picture.jpg"
                      },
                      "origin": {
                        "type": "string",
                        "description": "The origin of the message",
                        "enum": ["api", "web", "slack", null],
                        "default": "api",
                        "example": "api"
                      },
                      "content": {
                        "type": "string",
                        "description": "The content of the message",
                        "example": "This is my message"
                      },
                      "mentions": {
                        "type": "array",
                        "items": {
                          "type": "array",
                          "description": "The mentions of the message, where configurationId is the ID of the assistant mentioned.",
                          "example": [
                            {
                              "configurationId": "dust"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message created successfully."
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/w/{wId}/assistant/conversations": {
      "post": {
        "summary": "Create a new conversation",
        "description": "Create a new conversation in the workspace identified by {wId}.",
        "tags": ["Conversations"],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "object",
                    "properties": {
                      "content": {
                        "type": "string",
                        "description": "The content of the message"
                      },
                      "mentions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "configurationId": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "context": {
                        "type": "object",
                        "properties": {
                          "timezone": {
                            "type": "string"
                          },
                          "username": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string",
                            "nullable": true
                          },
                          "fullName": {
                            "type": "string"
                          },
                          "profilePictureUrl": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "description": "The initial message of the conversation"
                  },
                  "contentFragment": {
                    "type": "string",
                    "description": "The initial content fragment of the conversation"
                  },
                  "blocking": {
                    "type": "boolean",
                    "description": "Whether to wait for the agent to generate the initial message",
                    "default": false,
                    "example": true
                  },
                  "title": {
                    "type": "string",
                    "description": "The title of the conversation",
                    "example": "My conversation"
                  },
                  "visibility": {
                    "type": "string",
                    "description": "The visibility of the conversation",
                    "enum": ["public", "private", "unlisted"],
                    "default": "public",
                    "example": "private"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Conversation created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "conversationId": {
                      "type": "string",
                      "description": "ID of the created conversation"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/w/{wId}/feature_flags": {
      "get": {
        "summary": "Get the feature flags for the workspace",
        "description": "Get the feature flags for the workspace identified by {wId}.",
        "tags": ["Workspace"],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Feature flags for the workspace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "feature_flags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {},
  "tags": []
}
