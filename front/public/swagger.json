{
  "openapi": "3.0.0",
  "info": {
    "title": "API Documentation",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://dust.tt",
      "description": "Dust.tt API"
    }
  ],
  "paths": {
    "/api/v1/w/{wId}/apps/{aId}/runs/{runId}": {
      "get": {
        "summary": "Get an app run",
        "description": "Retrieve a run for an app in the workspace identified by {wId}.",
        "tags": [
          "Apps"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "aId",
            "required": true,
            "description": "ID of the app",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "runId",
            "required": true,
            "description": "ID of the run",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The run",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "run": {
                      "type": "object",
                      "properties": {
                        "run_id": {
                          "type": "string",
                          "description": "The ID of the run",
                          "example": 1234
                        },
                        "app_id": {
                          "type": "string",
                          "description": "The ID of the app",
                          "example": 1234
                        },
                        "status": {
                          "type": "object",
                          "properties": {
                            "run": {
                              "type": "string",
                              "description": "The status of the run",
                              "example": "succeeded"
                            },
                            "build": {
                              "type": "string",
                              "description": "The status of the build",
                              "example": "succeeded"
                            }
                          }
                        },
                        "results": {
                          "type": "object",
                          "description": "The results of the run",
                          "example": {}
                        },
                        "specification_hash": {
                          "type": "string",
                          "description": "The hash of the app specification",
                          "example": 1234
                        },
                        "traces": {
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "timestamp": {
                                  "type": "number",
                                  "description": "The timestamp of the trace",
                                  "example": 1234567890
                                },
                                "trace": {
                                  "type": "object",
                                  "description": "The trace",
                                  "example": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/w/{wId}/apps/{appId}/run": {
      "post": {
        "summary": "Create an app run",
        "description": "Create a run for an app in the workspace identified by {wId}.",
        "tags": [
          "Apps"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "appId",
            "required": true,
            "description": "ID of the app",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "specification_hash": {
                    "type": "string",
                    "description": "The hash of the specification to use. If you change your app specifiction, make sure to update the hash. This guarantees that you won't break an existing API integration by iterating on your app design."
                  },
                  "config": {
                    "type": "object",
                    "properties": {
                      "model": {
                        "type": "object",
                        "description": "Configuration for the model",
                        "properties": {
                          "provider_id": {
                            "type": "string",
                            "description": "The ID of the model provider"
                          },
                          "model_id": {
                            "type": "string",
                            "description": "The ID of the model"
                          },
                          "use_cache": {
                            "type": "boolean",
                            "description": "Indicates if caching is used"
                          },
                          "use_stream": {
                            "type": "boolean",
                            "description": "Indicates if streaming is used"
                          }
                        }
                      }
                    }
                  },
                  "inputs": {
                    "type": "array",
                    "description": "The inputs of the app",
                    "items": {
                      "type": "object",
                      "description": "An individual input for the app",
                      "additionalProperties": true
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "App run"
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "404": {
            "description": "Workspace or app not found."
          },
          "405": {
            "description": "Method not supported."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/w/{wId}/apps": {
      "get": {
        "summary": "List apps",
        "description": "Get all apps of a workspace.",
        "tags": [
          "Apps"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Apps of the workspace"
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "404": {
            "description": "Workspace not found."
          },
          "405": {
            "description": "Method not supported."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/w/{wId}/assistant/agent_configurations": {
      "get": {
        "summary": "List assistants",
        "description": "Get the agent configurations for the workspace identified by {wId}.",
        "tags": [
          "Workspace"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Agent configurations for the workspace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "sId": {
                        "type": "string"
                      },
                      "version": {
                        "type": "integer"
                      },
                      "versionCreatedAt": {
                        "type": "string",
                        "nullable": true
                      },
                      "versionAuthorId": {
                        "type": "string",
                        "nullable": true
                      },
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "instructions": {
                        "type": "string"
                      },
                      "pictureUrl": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "userListStatus": {
                        "type": "string"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "model": {
                        "type": "object",
                        "properties": {
                          "providerId": {
                            "type": "string"
                          },
                          "modelId": {
                            "type": "string"
                          },
                          "temperature": {
                            "type": "number"
                          }
                        }
                      },
                      "actions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "sId": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string",
                              "nullable": true
                            }
                          }
                        }
                      },
                      "maxToolsUsePerRun": {
                        "type": "integer"
                      },
                      "templateId": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "404": {
            "description": "Workspace not found."
          },
          "405": {
            "description": "Method not supported. Only GET is expected."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/w/{wId}/assistant/conversations/{cId}/content_fragments": {
      "post": {
        "summary": "Create a content fragment",
        "description": "Create a new content fragment in the workspace identified by {wId}.",
        "tags": [
          "Conversations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "cId",
            "required": true,
            "description": "ID of the conversation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the content fragment",
                    "example": "My content fragment"
                  },
                  "content": {
                    "type": "string",
                    "description": "The content of the content fragment",
                    "example": "This is my content fragment"
                  },
                  "url": {
                    "type": "string",
                    "description": "The URL of the content fragment",
                    "example": "https://example.com/content"
                  },
                  "contentType": {
                    "type": "string",
                    "description": "The content type of the content fragment",
                    "example": "text/plain"
                  },
                  "context": {
                    "type": "object",
                    "properties": {
                      "username": {
                        "type": "string",
                        "description": "The username of the user who created the content fragment",
                        "example": "johndoe"
                      },
                      "fullName": {
                        "type": "string",
                        "description": "The full name of the user who created the content fragment",
                        "example": "John Doe"
                      },
                      "email": {
                        "type": "string",
                        "description": "The email of the user who created the content fragment",
                        "example": "johndoe@example.com"
                      },
                      "profilePictureUrl": {
                        "type": "string",
                        "description": "The profile picture URL of the user who created the content fragment",
                        "example": "https://example.com/profile_picture.jpg"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Content fragment created successfully."
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/w/{wId}/assistant/conversations/{cId}/events": {
      "get": {
        "summary": "Get the events for a conversation",
        "description": "Get the events for a conversation in the workspace identified by {wId}.",
        "tags": [
          "Conversations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "cId",
            "required": true,
            "description": "ID of the conversation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Events for the conversation"
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "404": {
            "description": "Conversation not found."
          },
          "405": {
            "description": "Method not supported. Only GET is expected."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/w/{wId}/assistant/conversations/{cId}": {
      "get": {
        "summary": "Get a conversation",
        "description": "Get a conversation in the workspace identified by {wId}.",
        "tags": [
          "Conversations"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "cId",
            "required": true,
            "description": "ID of the conversation",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Conversation retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conversation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "404": {
            "description": "Conversation not found."
          },
          "405": {
            "description": "Method not supported. Only GET is expected."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/w/{wId}/assistant/conversations/{cId}/messages/{mId}/events": {
      "get": {
        "summary": "Get events for a message",
        "description": "Get events for a message in the workspace identified by {wId}.",
        "tags": [
          "Conversations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "cId",
            "required": true,
            "description": "ID of the conversation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "mId",
            "required": true,
            "description": "ID of the message",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "lastEventId",
            "description": "ID of the last event received",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "events": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID of the event"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the event"
                          },
                          "data": {
                            "type": "object",
                            "description": "Data of the event"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/w/{wId}/assistant/conversations/{cId}/messages": {
      "post": {
        "summary": "Create a message",
        "description": "Create a message in the workspace identified by {wId}.",
        "tags": [
          "Conversations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "cId",
            "required": true,
            "description": "ID of the conversation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "description": "The content of the message",
                    "example": "This is my message"
                  },
                  "mentions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "The mentions of the message, where configurationId is the ID of the assistant mentioned.",
                      "properties": {
                        "configurationId": {
                          "type": "string",
                          "example": [
                            {
                              "configurationId": "dust"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "context": {
                    "type": "object",
                    "properties": {
                      "timezone": {
                        "type": "string",
                        "description": "The timezone of the user who created the message",
                        "example": "Europe/Paris"
                      },
                      "username": {
                        "type": "string",
                        "description": "The username of the user who created the message",
                        "example": "johndoe"
                      },
                      "fullName": {
                        "type": "string",
                        "description": "The full name of the user who created the message",
                        "example": "John Doe",
                        "nullable": true
                      },
                      "email": {
                        "type": "string",
                        "description": "The email of the user who created the message",
                        "example": "johndoe@example.com",
                        "nullable": true
                      },
                      "profilePictureUrl": {
                        "type": "string",
                        "nullable": true,
                        "description": "The profile picture URL of the user who created the message",
                        "example": "https://example.com/profile_picture.jpg"
                      },
                      "origin": {
                        "type": "string",
                        "nullable": true,
                        "description": "The origin of the message",
                        "enum": [
                          "api",
                          "web",
                          "slack",
                          "null"
                        ],
                        "default": "api",
                        "example": "api"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message created successfully."
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/w/{wId}/assistant/conversations": {
      "post": {
        "summary": "Create a new conversation",
        "description": "Create a new conversation in the workspace identified by {wId}.",
        "tags": [
          "Conversations"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "object",
                    "properties": {
                      "content": {
                        "type": "string",
                        "description": "The content of the message",
                        "example": "This is my message"
                      },
                      "mentions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "The mentions of the message, where configurationId is the ID of the assistant mentioned.",
                          "properties": {
                            "configurationId": {
                              "type": "string",
                              "example": "dust"
                            }
                          }
                        }
                      },
                      "context": {
                        "$ref": "#/components/schemas/Context"
                      }
                    }
                  },
                  "contentFragment": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "The title of the content fragment",
                        "example": "My content fragment"
                      },
                      "content": {
                        "type": "string",
                        "description": "The content of the content fragment",
                        "example": "This is my content fragment"
                      },
                      "url": {
                        "type": "string",
                        "description": "The URL of the content fragment",
                        "example": "https://example.com/content"
                      },
                      "contentType": {
                        "type": "string",
                        "description": "The content type of the content fragment",
                        "example": "text/plain"
                      },
                      "context": {
                        "$ref": "#/components/schemas/Context"
                      }
                    }
                  },
                  "blocking": {
                    "type": "boolean",
                    "description": "Whether to wait for the agent to generate the initial message",
                    "default": false,
                    "example": true
                  },
                  "title": {
                    "type": "string",
                    "description": "The title of the conversation",
                    "nullable": true,
                    "example": "My conversation"
                  },
                  "visibility": {
                    "type": "string",
                    "description": "The visibility of the conversation",
                    "enum": [
                      "public",
                      "private",
                      "unlisted"
                    ],
                    "default": "public",
                    "example": "private"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Conversation created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conversation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/w/{wId}/data_sources/{name}/documents/{documentId}": {
      "get": {
        "summary": "Retrieve a document from a data source",
        "description": "Retrieve a document from a data source in the workspace identified by {wId}.",
        "tags": [
          "Datasources"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "description": "Name of the data source",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "documentId",
            "required": true,
            "description": "ID of the document",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The document"
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "404": {
            "description": "Data source or document not found."
          },
          "405": {
            "description": "Method not supported."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      },
      "post": {
        "summary": "Upsert a document in a data source",
        "description": "Upsert a document in a data source in the workspace identified by {wId}.",
        "tags": [
          "Datasources"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "description": "Name of the data source",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "documentId",
            "required": true,
            "description": "ID of the document",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "The text content of the document to upsert."
                  },
                  "source_url": {
                    "type": "string",
                    "description": "The source URL for the document to upsert."
                  },
                  "light_document_output": {
                    "type": "boolean",
                    "description": "If true, a lightweight version of the document will be returned in the response (excluding the text, chunks and vectors). Defaults to false."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The document"
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "403": {
            "description": "Forbidden. The data source is managed."
          },
          "404": {
            "description": "Data source or document not found."
          },
          "405": {
            "description": "Method not supported."
          }
        }
      },
      "delete": {
        "summary": "Delete a document from a data source",
        "description": "Delete a document from a data source in the workspace identified by {wId}.",
        "tags": [
          "Datasources"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "description": "Name of the data source",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "documentId",
            "required": true,
            "description": "ID of the document",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The document"
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "403": {
            "description": "Forbidden. The data source is managed."
          },
          "404": {
            "description": "Data source or document not found."
          },
          "405": {
            "description": "Method not supported."
          }
        }
      }
    },
    "/api/v1/w/{wId}/data_sources/{name}/documents/{documentId}/parents": {
      "post": {
        "summary": "Update the parents of a document",
        "description": "Update the parents of a document in the data source identified by {name} in the workspace identified by {wId}.",
        "tags": [
          "Datasources"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "description": "Name of the data source",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "documentId",
            "required": true,
            "description": "ID of the document",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "parents": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The parents were updated"
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "404": {
            "description": "Data source or workspace not found."
          },
          "405": {
            "description": "Method not supported."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/w/{wId}/data_sources/{name}/documents": {
      "get": {
        "summary": "Get documents",
        "description": "Get documents in the data source identified by {name} in the workspace identified by {wId}.",
        "tags": [
          "Datasources"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "description": "Name of the data source",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limit the number of documents returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Offset the returned documents",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The documents"
          },
          "404": {
            "description": "The data source was not found"
          },
          "405": {
            "description": "Method not supported"
          }
        }
      }
    },
    "/api/v1/w/{wId}/data_sources/{name}/search": {
      "get": {
        "summary": "Search the data source",
        "description": "Search the data source identified by {name} in the workspace identified by {wId}.",
        "tags": [
          "Datasources"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "description": "Name of the data source",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "query",
            "required": true,
            "description": "The search query",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "top_k",
            "required": true,
            "description": "The number of results to return",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "full_text",
            "required": true,
            "description": "Whether to perform a full text search",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "target_document_tokens",
            "required": false,
            "description": "The number of tokens in the target document",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "timestamp_gt",
            "required": false,
            "description": "The timestamp to filter by",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "timestamp_lt",
            "required": false,
            "description": "The timestamp to filter by",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "tags_in",
            "required": false,
            "description": "The tags to filter by",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tags_not",
            "required": false,
            "description": "The tags to filter by",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "parents_in",
            "required": false,
            "description": "The parents to filter by",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "parents_not",
            "required": false,
            "description": "The parents to filter by",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The documents",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "documents": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID of the document"
                          },
                          "title": {
                            "type": "string",
                            "description": "Title of the document"
                          },
                          "content": {
                            "type": "string",
                            "description": "Content of the document"
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Tags of the document"
                          },
                          "parents": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Parents of the document"
                          },
                          "timestamp": {
                            "type": "number",
                            "description": "Timestamp of the document"
                          },
                          "data": {
                            "type": "object",
                            "description": "Data of the document"
                          },
                          "score": {
                            "type": "number",
                            "description": "Score of the document"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request error"
          },
          "405": {
            "description": "Method not supported error"
          }
        }
      }
    },
    "/api/v1/w/{wId}/data_sources/{name}/tables/{tId}": {
      "get": {
        "summary": "Get a table",
        "description": "Get a table in the data source identified by {name} in the workspace identified by {wId}.",
        "tags": [
          "Datasources"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "description": "Name of the data source",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "tId",
            "required": true,
            "description": "ID of the table",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The table"
          },
          "404": {
            "description": "The table was not found"
          },
          "405": {
            "description": "Method not supported"
          }
        }
      },
      "delete": {
        "summary": "Delete a table",
        "description": "Delete a table in the data source identified by {name} in the workspace identified by {wId}.",
        "tags": [
          "Datasources"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "description": "Name of the data source",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "tId",
            "required": true,
            "description": "ID of the table",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The table was deleted"
          },
          "404": {
            "description": "The table was not found"
          },
          "405": {
            "description": "Method not supported"
          }
        }
      }
    },
    "/api/v1/w/{wId}/data_sources/{name}/tables/{tId}/rows/{rId}": {
      "get": {
        "summary": "Get a row",
        "description": "Get a row in the table identified by {tId} in the data source identified by {name} in the workspace identified by {wId}.",
        "tags": [
          "Datasources"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "description": "Name of the data source",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "tId",
            "required": true,
            "description": "ID of the table",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "rId",
            "required": true,
            "description": "ID of the row",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The row"
          },
          "404": {
            "description": "The row was not found"
          },
          "405": {
            "description": "Method not supported"
          }
        }
      },
      "delete": {
        "summary": "Delete a row",
        "description": "Delete a row in the table identified by {tId} in the data source identified by {name} in the workspace identified by {wId}.",
        "tags": [
          "Datasources"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "description": "Name of the data source",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "tId",
            "required": true,
            "description": "ID of the table",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "rId",
            "required": true,
            "description": "ID of the row",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The row was deleted"
          },
          "404": {
            "description": "The row was not found"
          },
          "405": {
            "description": "Method not supported"
          }
        }
      }
    },
    "/api/v1/w/{wId}/data_sources/{name}/tables/{tId}/rows": {
      "get": {
        "summary": "List rows",
        "description": "List rows in the table identified by {tId} in the data source identified by {name} in the workspace identified by {wId}.",
        "tags": [
          "Datasources"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "description": "Name of the data source",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "tId",
            "required": true,
            "description": "ID of the table",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limit the number of rows returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Offset the returned rows",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The rows"
          },
          "405": {
            "description": "Method not supported"
          }
        }
      },
      "post": {
        "summary": "Upsert rows",
        "description": "Upsert rows in the table identified by {tId} in the data source identified by {name} in the workspace identified by {wId}.",
        "tags": [
          "Datasources"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "description": "Name of the data source",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "tId",
            "required": true,
            "description": "ID of the table",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rows": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "row_id": {
                          "type": "string"
                        },
                        "value": {
                          "type": "object",
                          "additionalProperties": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "boolean"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "datetime"
                                    ]
                                  },
                                  "epoch": {
                                    "type": "number"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "truncate": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The table"
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "404": {
            "description": "Data source or workspace not found."
          },
          "405": {
            "description": "Method not supported."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/w/{wId}/data_sources/{name}/tables/csv": {
      "post": {
        "summary": "Upsert CSV to table",
        "description": "Upsert CSV data to a table in the data source identified by {name} in the workspace identified by {wId}.",
        "tags": [
          "Datasources"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "description": "Name of the data source",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "table_id",
            "description": "ID of the table",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The table"
          },
          "404": {
            "description": "The table was not found"
          },
          "405": {
            "description": "Method not supported"
          }
        }
      }
    },
    "/api/v1/w/{wId}/data_sources/{name}/tables": {
      "get": {
        "summary": "Get tables",
        "description": "Get tables in the data source identified by {name} in the workspace identified by {wId}.",
        "tags": [
          "Datasources"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "description": "Name of the data source",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The tables"
          }
        }
      },
      "post": {
        "summary": "Upsert a table",
        "description": "Upsert a table in the data source identified by {name} in the workspace identified by {wId}.",
        "tags": [
          "Datasources"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "description": "Name of the data source",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "table_id": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The table"
          },
          "400": {
            "description": "Invalid request"
          },
          "405": {
            "description": "Method not supported"
          }
        }
      }
    },
    "/api/v1/w/{wId}/data_sources/{name}/tokenize": {
      "post": {
        "summary": "Tokenize text",
        "description": "Tokenize text for the data source identified by {name} in the workspace identified by {wId}.",
        "tags": [
          "Datasources"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "description": "Name of the data source",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The tokens"
          },
          "404": {
            "description": "The data source was not found"
          },
          "405": {
            "description": "Method not supported"
          }
        }
      }
    },
    "/api/v1/w/{wId}/data_sources": {
      "get": {
        "summary": "Get data sources",
        "description": "Get data sources in the workspace identified by {wId}.",
        "tags": [
          "Datasources"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The data sources"
          },
          "404": {
            "description": "The workspace was not found"
          },
          "405": {
            "description": "Method not supported"
          }
        }
      }
    },
    "/api/v1/w/{wId}/feature_flags": {
      "get": {
        "summary": "List feature flags",
        "description": "Get the feature flags for the workspace identified by {wId}.",
        "tags": [
          "Workspace"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Feature flags for the workspace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "feature_flags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/w/{wId}/members/emails": {
      "get": {
        "summary": "List member emails",
        "description": "List the emails of all members in the workspace identified by {wId}.",
        "tags": [
          "Workspace"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "activeOnly",
            "required": false,
            "description": "Whether to list only active members",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The emails",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "emails": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/w/{wId}/usage": {
      "get": {
        "summary": "Get workspace usage data",
        "description": "Get usage data for the workspace identified by {wId}.",
        "tags": [
          "Workspace"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "start_date",
            "required": true,
            "description": "The start date in YYYY-MM-DD format",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "end_date",
            "required": false,
            "description": "The end date in YYYY-MM-DD format",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The usage data"
          },
          "404": {
            "description": "The workspace was not found"
          },
          "405": {
            "description": "Method not supported"
          }
        }
      }
    },
    "/api/v1/w/{wId}/verified_domains": {
      "get": {
        "summary": "Get verified domains",
        "description": "Get the verified domain for the workspace identified by {wId}.",
        "tags": [
          "Workspace"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "Bearer token for authentication",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The verified domain"
          },
          "404": {
            "description": "The workspace was not found"
          },
          "405": {
            "description": "Method not supported"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "Your DUST API key prefixed by `Bearer sk-...`"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "sId": {
            "type": "string",
            "description": "Unique string identifier for the user"
          },
          "id": {
            "type": "integer"
          },
          "createdAt": {
            "type": "integer"
          },
          "username": {
            "type": "string",
            "description": "User's chosen username"
          },
          "email": {
            "type": "string",
            "description": "User's email address"
          },
          "firstName": {
            "type": "string",
            "description": "User's first name"
          },
          "lastName": {
            "type": "string",
            "description": "User's last name"
          },
          "fullName": {
            "type": "string",
            "description": "User's full name"
          },
          "provider": {
            "type": "string",
            "description": "Authentication provider used by the user"
          },
          "image": {
            "type": "string",
            "description": "URL of the user's profile image"
          }
        }
      },
      "Workspace": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "sId": {
            "type": "string",
            "description": "Unique string identifier for the workspace"
          },
          "name": {
            "type": "string",
            "description": "Name of the workspace"
          },
          "role": {
            "type": "string",
            "description": "User's role in the workspace"
          },
          "segmentation": {
            "type": "string",
            "nullable": true,
            "description": "Segmentation information for the workspace"
          },
          "flags": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Feature flags enabled for the workspace"
            }
          },
          "ssoEnforced": {
            "type": "boolean"
          },
          "whiteListedProviders": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "List of allowed authentication providers"
            }
          },
          "defaultEmbeddingProvider": {
            "type": "string",
            "nullable": true,
            "description": "Default provider for embeddings in the workspace"
          }
        }
      },
      "Context": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Username in the current context"
          },
          "timezone": {
            "type": "string",
            "description": "User's timezone"
          },
          "fullName": {
            "type": "string",
            "description": "User's full name in the current context"
          },
          "email": {
            "type": "string",
            "description": "User's email in the current context"
          },
          "profilePictureUrl": {
            "type": "string",
            "description": "URL of the user's profile picture"
          },
          "origin": {
            "type": "string",
            "description": "Origin of the context (e.g., 'slack', 'web')"
          }
        }
      },
      "AgentConfiguration": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "sId": {
            "type": "string",
            "description": "Unique string identifier for the agent configuration"
          },
          "version": {
            "type": "integer"
          },
          "versionCreatedAt": {
            "type": "string",
            "nullable": true,
            "description": "Timestamp of when the version was created"
          },
          "versionAuthorId": {
            "type": "string",
            "nullable": true,
            "description": "ID of the user who created this version"
          },
          "name": {
            "type": "string",
            "description": "Name of the agent configuration"
          },
          "description": {
            "type": "string",
            "description": "Description of the agent configuration"
          },
          "instructions": {
            "type": "string",
            "nullable": true,
            "description": "Instructions for the agent"
          },
          "pictureUrl": {
            "type": "string",
            "description": "URL of the agent's picture"
          },
          "status": {
            "type": "string",
            "description": "Current status of the agent configuration"
          },
          "scope": {
            "type": "string",
            "description": "Scope of the agent configuration"
          },
          "userListStatus": {
            "type": "string",
            "description": "Status of the user list for this configuration"
          },
          "model": {
            "type": "object",
            "properties": {
              "providerId": {
                "type": "string",
                "description": "ID of the model provider"
              },
              "modelId": {
                "type": "string",
                "description": "ID of the specific model"
              },
              "temperature": {
                "type": "number"
              }
            }
          },
          "actions": {
            "type": "array"
          },
          "maxToolsUsePerRun": {
            "type": "integer"
          },
          "templateId": {
            "type": "string",
            "nullable": true,
            "description": "ID of the template used for this configuration"
          }
        }
      },
      "Conversation": {
        "type": "object",
        "properties": {
          "conversation": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "created": {
                "type": "integer"
              },
              "sId": {
                "type": "string",
                "description": "Unique string identifier for the conversation"
              },
              "owner": {
                "$ref": "#/components/schemas/Workspace"
              },
              "title": {
                "type": "string",
                "description": "Title of the conversation"
              },
              "visibility": {
                "type": "string",
                "description": "Visibility setting of the conversation"
              },
              "content": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "sId": {
                        "type": "string",
                        "description": "Unique string identifier for the message"
                      },
                      "type": {
                        "type": "string",
                        "description": "Type of the message"
                      },
                      "visibility": {
                        "type": "string",
                        "description": "Visibility setting of the message"
                      },
                      "version": {
                        "type": "integer"
                      },
                      "created": {
                        "type": "integer"
                      },
                      "user": {
                        "$ref": "#/components/schemas/User"
                      },
                      "mentions": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Mention"
                        }
                      },
                      "content": {
                        "type": "string",
                        "description": "Content of the message"
                      },
                      "context": {
                        "$ref": "#/components/schemas/Context"
                      },
                      "agentMessageId": {
                        "type": "integer"
                      },
                      "parentMessageId": {
                        "type": "string",
                        "description": "ID of the parent message"
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the message"
                      },
                      "actions": {
                        "type": "array"
                      },
                      "chainOfThought": {
                        "type": "string",
                        "nullable": true,
                        "description": "Chain of thought for the message"
                      },
                      "rawContents": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "step": {
                              "type": "integer"
                            },
                            "content": {
                              "type": "string",
                              "description": "Content for each step"
                            }
                          }
                        }
                      },
                      "error": {
                        "type": "string",
                        "nullable": true,
                        "description": "Error message, if any"
                      },
                      "configuration": {
                        "$ref": "#/components/schemas/AgentConfiguration"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Mention": {
        "type": "object",
        "properties": {
          "configurationId": {
            "type": "string",
            "description": "ID of the mentioned agent configuration",
            "example": "dust"
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "The content of the message",
            "example": "This is my message"
          },
          "mentions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Mention"
            }
          },
          "context": {
            "$ref": "#/components/schemas/Context"
          }
        }
      },
      "ContentFragment": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the content fragment",
            "example": "My content fragment"
          },
          "content": {
            "type": "string",
            "description": "The content of the content fragment",
            "example": "This is my content fragment"
          },
          "url": {
            "type": "string",
            "description": "The URL of the content fragment",
            "example": "https://example.com/content"
          },
          "contentType": {
            "type": "string",
            "description": "The content type of the content fragment",
            "example": "text/plain"
          },
          "context": {
            "$ref": "#/components/schemas/Context"
          }
        }
      }
    }
  },
  "tags": []
}