{
  "openapi": "3.0.0",
  "info": {
    "title": "DUST API Documentation",
    "version": "1.0.2",
    "description": "The OpenAPI specification for the Dust.tt API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://dust.tt",
      "description": "Dust.tt API"
    }
  ],
  "paths": {
    "/api/v1/w/{wId}/assistant/agent_configurations": {
      "get": {
        "summary": "List assistants",
        "description": "Get the agent configurations for the workspace identified by {wId}.",
        "tags": ["Assistants"],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Agent configurations for the workspace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgentConfiguration"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "404": {
            "description": "Workspace not found."
          },
          "405": {
            "description": "Method not supported. Only GET is expected."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/w/{wId}/assistant/agent_configurations/search": {
      "get": {
        "summary": "Search assistants by name",
        "description": "Search for agent configurations by name in the workspace identified by {wId}.",
        "tags": ["Assistants"],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "q",
            "required": true,
            "description": "Search query for agent configuration names",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved agent configurations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "agentConfigurations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AgentConfiguration"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Invalid or missing parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "404": {
            "description": "Workspace not found."
          },
          "405": {
            "description": "Method not supported. Only GET is expected."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/w/{wId}/assistant/conversations/{cId}/content_fragments": {
      "post": {
        "summary": "Create a content fragment",
        "description": "Create a new content fragment in the workspace identified by {wId}.",
        "tags": ["Conversations"],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "cId",
            "required": true,
            "description": "ID of the conversation",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentFragment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Content fragment created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentFragment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/w/{wId}/assistant/conversations/{cId}/events": {
      "get": {
        "summary": "Get the events for a conversation",
        "description": "Get the events for a conversation in the workspace identified by {wId}.",
        "tags": ["Conversations"],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "cId",
            "required": true,
            "description": "ID of the conversation",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Events for the conversation, view the \"Events\" page from this documentation for more information."
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "404": {
            "description": "Conversation not found."
          },
          "405": {
            "description": "Method not supported. Only GET is expected."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/w/{wId}/assistant/conversations/{cId}": {
      "get": {
        "summary": "Get a conversation",
        "description": "Get a conversation in the workspace identified by {wId}.",
        "tags": ["Conversations"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "cId",
            "required": true,
            "description": "ID of the conversation",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Conversation retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conversation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "404": {
            "description": "Conversation not found."
          },
          "405": {
            "description": "Method not supported. Only GET is expected."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/w/{wId}/assistant/conversations/{cId}/messages/{mId}/events": {
      "get": {
        "summary": "Get events for a message",
        "description": "Get events for a message in the workspace identified by {wId}.",
        "tags": ["Conversations"],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "cId",
            "required": true,
            "description": "ID of the conversation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "mId",
            "required": true,
            "description": "ID of the message",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "lastEventId",
            "description": "ID of the last event received",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "The events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "events": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID of the event"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the event"
                          },
                          "data": {
                            "$ref": "#/components/schemas/Message"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/w/{wId}/assistant/conversations/{cId}/messages": {
      "post": {
        "summary": "Create a message",
        "description": "Create a message in the workspace identified by {wId} in the conversation identified by {cId}.",
        "tags": ["Conversations"],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "cId",
            "required": true,
            "description": "ID of the conversation",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Message"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/w/{wId}/assistant/conversations": {
      "post": {
        "summary": "Create a new conversation",
        "description": "Create a new conversation in the workspace identified by {wId}.",
        "tags": ["Conversations"],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "$ref": "#/components/schemas/Message"
                  },
                  "contentFragment": {
                    "$ref": "#/components/schemas/ContentFragment",
                    "description": "The text content of an attached file (optional)"
                  },
                  "blocking": {
                    "type": "boolean",
                    "description": "Whether to wait for the agent to generate the initial message (if blocking = false, you will need to use streaming events to get the messages)",
                    "example": true
                  },
                  "title": {
                    "type": "string",
                    "description": "The title of the conversation",
                    "nullable": true,
                    "example": "My conversation"
                  },
                  "visibility": {
                    "type": "string",
                    "description": "The visibility of the conversation (The API only accepts `unlisted`)",
                    "enum": ["workspace", "unlisted"],
                    "example": "unlisted"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Conversation created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conversation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/w/{wId}/vaults/{vId}/apps/{aId}/runs/{runId}": {
      "get": {
        "summary": "Get an app run",
        "description": "Retrieve a run for an app in the vault identified by {vId}.",
        "tags": ["Apps"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "Unique string identifier for the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "vId",
            "required": true,
            "description": "ID of the vault",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "aId",
            "required": true,
            "description": "ID of the app",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "runId",
            "required": true,
            "description": "ID of the run",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The run",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "run": {
                      "$ref": "#/components/schemas/Run"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          }
        }
      }
    },
    "/api/v1/w/{wId}/vaults/{vId}/apps/{aId}/runs": {
      "post": {
        "summary": "Create an app run",
        "description": "Create and execute a run for an app in the vault specified by {vId}.",
        "tags": ["Apps"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "Unique string identifier for the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "vId",
            "required": true,
            "description": "ID of the vault",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "aId",
            "required": true,
            "description": "Unique identifier of the app",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["specification_hash", "config", "inputs"],
                "properties": {
                  "specification_hash": {
                    "type": "string",
                    "description": "Hash of the app specification. Ensures API compatibility across app iterations."
                  },
                  "config": {
                    "type": "object",
                    "description": "Configuration for the app run",
                    "properties": {
                      "model": {
                        "type": "object",
                        "description": "Model configuration",
                        "properties": {
                          "provider_id": {
                            "type": "string",
                            "description": "ID of the model provider"
                          },
                          "model_id": {
                            "type": "string",
                            "description": "ID of the model"
                          },
                          "use_cache": {
                            "type": "boolean",
                            "description": "Whether to use caching"
                          },
                          "use_stream": {
                            "type": "boolean",
                            "description": "Whether to use streaming"
                          }
                        }
                      }
                    }
                  },
                  "inputs": {
                    "type": "array",
                    "description": "Array of input objects for the app",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "stream": {
                    "type": "boolean",
                    "description": "If true, the response will be streamed"
                  },
                  "blocking": {
                    "type": "boolean",
                    "description": "If true, the request will block until the run is complete"
                  },
                  "block_filter": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Array of block names to filter the response"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "App run created and executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "run": {
                      "$ref": "#/components/schemas/Run"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "404": {
            "description": "Workspace or app not found."
          },
          "405": {
            "description": "Method not supported."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/w/{wId}/vaults/{vId}/apps": {
      "get": {
        "summary": "List apps",
        "description": "Get all apps in the vault identified by {vId}.",
        "tags": ["Apps"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "Unique string identifier for the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "vId",
            "required": true,
            "description": "ID of the vault",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Apps of the workspace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "apps": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "Unique identifier for the app"
                          },
                          "sId": {
                            "type": "string",
                            "description": "Unique string identifier for the app"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the app"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the app"
                          },
                          "savedSpecification": {
                            "type": "string",
                            "description": "Saved specification of the app"
                          },
                          "savedConfig": {
                            "type": "string",
                            "description": "Saved configuration of the app"
                          },
                          "savedRun": {
                            "type": "string",
                            "description": "Saved run identifier of the app"
                          },
                          "dustAPIProjectId": {
                            "type": "string",
                            "description": "ID of the associated Dust API project"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "404": {
            "description": "Workspace not found."
          },
          "405": {
            "description": "Method not supported."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/w/{wId}/vaults/{vId}/data_source_views/{dsvId}/search": {
      "get": {
        "summary": "Search the data source view",
        "description": "Search the data source view identified by {dsvId} in the workspace identified by {wId}.",
        "tags": ["DatasourceViews"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "vId",
            "required": true,
            "description": "ID of the vault",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "dsvId",
            "required": true,
            "description": "ID of the data source view",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "query",
            "required": true,
            "description": "The search query",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "top_k",
            "required": true,
            "description": "The number of results to return",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "full_text",
            "required": true,
            "description": "Whether to perform a full text search",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "target_document_tokens",
            "required": false,
            "description": "The number of tokens in the target document",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "timestamp_gt",
            "required": false,
            "description": "The timestamp to filter by",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "timestamp_lt",
            "required": false,
            "description": "The timestamp to filter by",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "tags_in",
            "required": false,
            "description": "The tags to filter by",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tags_not",
            "required": false,
            "description": "The tags to filter by",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "parents_in",
            "required": false,
            "description": "The parents to filter by",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "parents_not",
            "required": false,
            "description": "The parents to filter by",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The documents",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "documents": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID of the document"
                          },
                          "title": {
                            "type": "string",
                            "description": "Title of the document"
                          },
                          "content": {
                            "type": "string",
                            "description": "Content of the document"
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Tags of the document"
                          },
                          "parents": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Parents of the document"
                          },
                          "timestamp": {
                            "type": "number",
                            "description": "Timestamp of the document"
                          },
                          "data": {
                            "type": "object",
                            "description": "Data of the document"
                          },
                          "score": {
                            "type": "number",
                            "description": "Score of the document"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request error"
          },
          "405": {
            "description": "Method not supported error"
          }
        }
      }
    },
    "/api/v1/w/{wId}/vaults/{vId}/data_source_views": {
      "get": {
        "summary": "List Data Source Views",
        "description": "Retrieves a list of data source views for the specified vault",
        "tags": ["DatasourceViews"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "Unique string identifier for the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "vId",
            "required": true,
            "description": "ID of the vault",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of data source views in the vault",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "dataSourceViews": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DatasourceView"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "404": {
            "description": "Workspace not found."
          },
          "405": {
            "description": "Method not supported."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/w/{wId}/vaults/{vId}/data_sources/{dsId}/documents/{documentId}": {
      "get": {
        "summary": "Retrieve a document from a data source",
        "description": "Retrieve a document from a data source identified by {dsId} in the workspace identified by {wId}.",
        "tags": ["Datasources"],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "vId",
            "required": true,
            "description": "ID of the vault",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "dsId",
            "required": true,
            "description": "ID of the data source",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "documentId",
            "required": true,
            "description": "ID of the document",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "The document",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "document": {
                      "$ref": "#/components/schemas/Document"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "404": {
            "description": "Data source or document not found."
          },
          "405": {
            "description": "Method not supported."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      },
      "post": {
        "summary": "Upsert a document in a data source",
        "description": "Upsert a document in a data source in the workspace identified by {wId}.",
        "tags": ["Datasources"],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "vId",
            "required": true,
            "description": "ID of the vault",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "dsId",
            "required": true,
            "description": "ID of the data source",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "documentId",
            "required": true,
            "description": "ID of the document",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "The text content of the document to upsert."
                  },
                  "source_url": {
                    "type": "string",
                    "description": "The source URL for the document to upsert."
                  },
                  "light_document_output": {
                    "type": "boolean",
                    "description": "If true, a lightweight version of the document will be returned in the response (excluding the text, chunks and vectors). Defaults to false."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The document",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "document": {
                      "$ref": "#/components/schemas/Document"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "403": {
            "description": "Forbidden. The data source is managed."
          },
          "404": {
            "description": "Data source or document not found."
          },
          "405": {
            "description": "Method not supported."
          }
        }
      },
      "delete": {
        "summary": "Delete a document from a data source",
        "description": "Delete a document from a data source in the workspace identified by {wId}.",
        "tags": ["Datasources"],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "vId",
            "required": true,
            "description": "ID of the vault",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "dsId",
            "required": true,
            "description": "ID of the data source",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "documentId",
            "required": true,
            "description": "ID of the document",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "The document"
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "403": {
            "description": "Forbidden. The data source is managed."
          },
          "404": {
            "description": "Data source or document not found."
          },
          "405": {
            "description": "Method not supported."
          }
        }
      }
    },
    "/api/v1/w/{wId}/vaults/{vId}/data_sources/{dsId}/documents/{documentId}/parents": {
      "post": {
        "summary": "Update the parents of a document",
        "description": "Update the parents of a document in the data source identified by {dsId} in the workspace identified by {wId}.",
        "tags": ["Datasources"],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "Unique string identifier for the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "vId",
            "required": true,
            "description": "ID of the vault",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "dsId",
            "required": true,
            "description": "ID of the data source",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "documentId",
            "required": true,
            "description": "ID of the document",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "parents": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Array of parent document IDs"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The parents were updated"
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "404": {
            "description": "Data source or workspace not found."
          },
          "405": {
            "description": "Method not supported."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/w/{wId}/vaults/{vId}/data_sources/{dsId}/documents": {
      "get": {
        "summary": "Get documents",
        "description": "Get documents in the data source identified by {dsId} in the workspace identified by {wId}.",
        "tags": ["Datasources"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "vId",
            "required": true,
            "description": "ID of the vault",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "dsId",
            "required": true,
            "description": "ID of the data source",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limit the number of documents returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Offset the returned documents",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The documents",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "documents": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Document"
                      }
                    },
                    "total": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The data source was not found"
          },
          "405": {
            "description": "Method not supported"
          }
        }
      }
    },
    "/api/v1/w/{wId}/vaults/{vId}/data_sources/{dsId}/search": {
      "get": {
        "summary": "Search the data source",
        "description": "Search the data source identified by {dsId} in the workspace identified by {wId}.",
        "tags": ["Datasources"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "vId",
            "required": true,
            "description": "ID of the vault",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "dsId",
            "required": true,
            "description": "ID of the data source",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "query",
            "required": true,
            "description": "The search query",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "top_k",
            "required": true,
            "description": "The number of results to return",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "full_text",
            "required": true,
            "description": "Whether to perform a full text search",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "target_document_tokens",
            "required": false,
            "description": "The number of tokens in the target document",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "timestamp_gt",
            "required": false,
            "description": "The timestamp to filter by",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "timestamp_lt",
            "required": false,
            "description": "The timestamp to filter by",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "tags_in",
            "required": false,
            "description": "The tags to filter by",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tags_not",
            "required": false,
            "description": "The tags to filter by",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "parents_in",
            "required": false,
            "description": "The parents to filter by",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "parents_not",
            "required": false,
            "description": "The parents to filter by",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The documents",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "documents": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID of the document"
                          },
                          "title": {
                            "type": "string",
                            "description": "Title of the document"
                          },
                          "content": {
                            "type": "string",
                            "description": "Content of the document"
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Tags of the document"
                          },
                          "parents": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Parents of the document"
                          },
                          "timestamp": {
                            "type": "number",
                            "description": "Timestamp of the document"
                          },
                          "data": {
                            "type": "object",
                            "description": "Data of the document"
                          },
                          "score": {
                            "type": "number",
                            "description": "Score of the document"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request error"
          },
          "405": {
            "description": "Method not supported error"
          }
        }
      }
    },
    "/api/v1/w/{wId}/vaults/{vId}/data_sources/{dsId}/tables/{tId}": {
      "get": {
        "summary": "Get a table",
        "description": "Get a table in the data source identified by {dsId} in the workspace identified by {wId}.",
        "tags": ["Datasources"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "Unique string identifier for the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "vId",
            "required": true,
            "description": "ID of the vault",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "dsId",
            "required": true,
            "description": "ID of the data source",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "tId",
            "required": true,
            "description": "ID of the table",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The table",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Datasource"
                }
              }
            }
          },
          "404": {
            "description": "The table was not found"
          },
          "405": {
            "description": "Method not supported"
          }
        }
      },
      "delete": {
        "summary": "Delete a table",
        "description": "Delete a table in the data source identified by {dsId} in the workspace identified by {wId}.",
        "tags": ["Datasources"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "Unique string identifier for the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "vId",
            "required": true,
            "description": "ID of the vault",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "dsId",
            "required": true,
            "description": "ID of the data source",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "tId",
            "required": true,
            "description": "ID of the table",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The table was deleted"
          },
          "404": {
            "description": "The table was not found"
          },
          "405": {
            "description": "Method not supported"
          }
        }
      }
    },
    "/api/v1/w/{wId}/vaults/{vId}/data_sources/{dsId}/tables/{tId}/rows/{rId}": {
      "get": {
        "summary": "Get a row",
        "description": "Get a row in the table identified by {tId} in the data source identified by {dsId} in the workspace identified by {wId}.",
        "tags": ["Datasources"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "Unique string identifier for the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "vId",
            "required": true,
            "description": "ID of the vault",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "dsId",
            "required": true,
            "description": "ID of the data source",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "tId",
            "required": true,
            "description": "ID of the table",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "rId",
            "required": true,
            "description": "ID of the row",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The row",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Datasource"
                }
              }
            }
          },
          "404": {
            "description": "The row was not found"
          },
          "405": {
            "description": "Method not supported"
          }
        }
      },
      "delete": {
        "summary": "Delete a row",
        "description": "Delete a row in the table identified by {tId} in the data source identified by {dsId} in the workspace identified by {wId}.",
        "tags": ["Datasources"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "Unique string identifier for the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "vId",
            "required": true,
            "description": "ID of the vault",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "dsId",
            "required": true,
            "description": "ID of the data source",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "tId",
            "required": true,
            "description": "ID of the table",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "rId",
            "required": true,
            "description": "ID of the row",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The row was deleted"
          },
          "404": {
            "description": "The row was not found"
          },
          "405": {
            "description": "Method not supported"
          }
        }
      }
    },
    "/api/v1/w/{wId}/vaults/{vId}/data_sources/{dsId}/tables/{tId}/rows": {
      "get": {
        "summary": "List rows",
        "description": "List rows in the table identified by {tId} in the data source identified by {dsId} in the workspace identified by {wId}.",
        "tags": ["Datasources"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "Unique string identifier for the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "vId",
            "required": true,
            "description": "ID of the vault",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "dsId",
            "required": true,
            "description": "ID of the data source",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "tId",
            "required": true,
            "description": "ID of the table",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limit the number of rows returned",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Offset the returned rows",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The rows",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Datasource"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Method not supported"
          }
        }
      },
      "post": {
        "summary": "Upsert rows",
        "description": "Upsert rows in the table identified by {tId} in the data source identified by {dsId} in the workspace identified by {wId}.",
        "tags": ["Datasources"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "Unique string identifier for the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "vId",
            "required": true,
            "description": "ID of the vault",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "dsId",
            "required": true,
            "description": "ID of the data source",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "tId",
            "required": true,
            "description": "ID of the table",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rows": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "row_id": {
                          "type": "string",
                          "description": "Unique identifier for the row"
                        },
                        "value": {
                          "type": "object",
                          "additionalProperties": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "boolean"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": ["datetime"]
                                  },
                                  "epoch": {
                                    "type": "number"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "truncate": {
                    "type": "boolean",
                    "description": "Whether to truncate existing rows"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The table",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Datasource"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "404": {
            "description": "Data source or workspace not found."
          },
          "405": {
            "description": "Method not supported."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/w/{wId}/vaults/{vId}/data_sources/{dsId}/tables": {
      "get": {
        "summary": "Get tables",
        "description": "Get tables in the data source identified by {dsId} in the workspace identified by {wId}.",
        "tags": ["Datasources"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "Unique string identifier for the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "vId",
            "required": true,
            "description": "ID of the vault",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "dsId",
            "required": true,
            "description": "ID of the data source",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The tables",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Datasource"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        }
      },
      "post": {
        "summary": "Upsert a table",
        "description": "Upsert a table in the data source identified by {dsId} in the workspace identified by {wId}.",
        "tags": ["Datasources"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "Unique string identifier for the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "vId",
            "required": true,
            "description": "ID of the vault",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "dsId",
            "required": true,
            "description": "ID of the data source",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the table"
                  },
                  "table_id": {
                    "type": "string",
                    "description": "Unique identifier for the table"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the table"
                  },
                  "timestamp": {
                    "type": "number",
                    "description": "Timestamp of the table"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Tags associated with the table"
                  },
                  "parents": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Parent tables of this table"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The table",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Datasource"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "405": {
            "description": "Method not supported"
          }
        }
      }
    },
    "/api/v1/w/{wId}/vaults/{vId}/data_sources": {
      "get": {
        "summary": "Get data sources",
        "description": "Get data sources in the workspace identified by {wId}.",
        "tags": ["Datasources"],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "ID of the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "vId",
            "required": true,
            "description": "ID of the vault",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "The data sources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data_sources": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Datasource"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The workspace was not found"
          },
          "405": {
            "description": "Method not supported"
          }
        }
      }
    },
    "/api/v1/w/{wId}/vaults": {
      "get": {
        "summary": "List Workspace Vaults",
        "description": "Retrieves a list of vaults for the authenticated workspace.",
        "tags": ["Vaults"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "Unique string identifier for the workspace",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vaults of the workspace",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "vaults": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Vault"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Missing or invalid parameters."
          },
          "401": {
            "description": "Unauthorized. Invalid or missing authentication token."
          },
          "404": {
            "description": "Workspace not found."
          },
          "405": {
            "description": "Method not supported."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/w/{wId}/workspace-usage": {
      "get": {
        "summary": "Get workspace usage data",
        "description": "Get usage data for the workspace identified by {wId} in CSV format.",
        "tags": ["Workspace"],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wId",
            "required": true,
            "description": "Unique string identifier for the workspace",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "start",
            "required": true,
            "description": "The start date in YYYY-MM format",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "end",
            "required": false,
            "description": "The end date in YYYY-MM format (required when mode is 'range')",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mode",
            "required": true,
            "description": "The mode of date range selection ('month' or 'range')",
            "schema": {
              "type": "string",
              "enum": ["month", "range"]
            }
          },
          {
            "in": "query",
            "name": "table",
            "required": true,
            "description": "The name of the usage table to retrieve:\n- \"users\": The list of users categorized by their activity level.\n- \"assistant_messages\": The list of messages sent by users including the mentioned assistants.\n- \"builders\": The list of builders categorized by their activity level.\n- \"assistants\": The list of workspace assistants and their corresponding usage.\n- \"all\": A concatenation of all the above tables.\n",
            "schema": {
              "type": "string",
              "enum": [
                "users",
                "assistant_messages",
                "builders",
                "assistants",
                "all"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The usage data in CSV format or a ZIP of multiple CSVs if table is equal to \"all\"",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string"
                }
              },
              "application/zip": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request query"
          },
          "403": {
            "description": "The workspace does not have access to the usage data API"
          },
          "404": {
            "description": "The workspace was not found"
          },
          "405": {
            "description": "Method not supported"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "Your DUST API key is a Bearer token."
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "sId": {
            "type": "string",
            "description": "Unique string identifier for the user",
            "example": "0ec9852c2f"
          },
          "id": {
            "type": "integer",
            "example": 12345
          },
          "createdAt": {
            "type": "integer",
            "example": 1625097600
          },
          "username": {
            "type": "string",
            "description": "User's chosen username",
            "example": "johndoe"
          },
          "email": {
            "type": "string",
            "description": "User's email address",
            "example": "john.doe@example.com"
          },
          "firstName": {
            "type": "string",
            "description": "User's first name",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "description": "User's last name",
            "example": "Doe"
          },
          "fullName": {
            "type": "string",
            "description": "User's full name",
            "example": "John Doe"
          },
          "provider": {
            "type": "string",
            "description": "Authentication provider used by the user",
            "example": "google"
          },
          "image": {
            "type": "string",
            "description": "URL of the user's profile image",
            "example": "https://example.com/profile/johndoe.jpg"
          }
        }
      },
      "Workspace": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 67890
          },
          "sId": {
            "type": "string",
            "description": "Unique string identifier for the workspace",
            "example": "dQFf9l5FQY"
          },
          "name": {
            "type": "string",
            "description": "Name of the workspace",
            "example": "My Awesome Workspace"
          },
          "role": {
            "type": "string",
            "description": "User's role in the workspace",
            "example": "admin"
          },
          "segmentation": {
            "type": "string",
            "nullable": true,
            "description": "Segmentation information for the workspace",
            "example": "enterprise"
          },
          "flags": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Feature flags enabled for the workspace"
            },
            "example": ["advanced_analytics", "beta_features"]
          },
          "ssoEnforced": {
            "type": "boolean",
            "example": true
          },
          "whiteListedProviders": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "List of allowed authentication providers"
            },
            "example": ["google", "github"]
          },
          "defaultEmbeddingProvider": {
            "type": "string",
            "nullable": true,
            "description": "Default provider for embeddings in the workspace",
            "example": "openai"
          }
        }
      },
      "Context": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Username in the current context",
            "example": "johndoe123"
          },
          "timezone": {
            "type": "string",
            "description": "User's timezone",
            "example": "America/New_York"
          },
          "fullName": {
            "type": "string",
            "description": "User's full name in the current context",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "description": "User's email in the current context",
            "example": "john.doe@example.com"
          },
          "profilePictureUrl": {
            "type": "string",
            "description": "URL of the user's profile picture",
            "example": "https://example.com/profiles/johndoe123.jpg"
          },
          "origin": {
            "type": "string",
            "description": "Origin of the context (contact us to add more at support@dust.tt)",
            "enum": [
              "api",
              "slack",
              "gsheet",
              "zapier",
              "make",
              "zendesk",
              "raycast"
            ]
          }
        }
      },
      "AgentConfiguration": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 12345
          },
          "sId": {
            "type": "string",
            "description": "Unique string identifier for the agent configuration",
            "example": "7f3a9c2b1e"
          },
          "version": {
            "type": "integer",
            "example": 2
          },
          "versionCreatedAt": {
            "type": "string",
            "nullable": true,
            "description": "Timestamp of when the version was created",
            "example": "2023-06-15T14:30:00Z"
          },
          "versionAuthorId": {
            "type": "string",
            "nullable": true,
            "description": "ID of the user who created this version",
            "example": "0ec9852c2f"
          },
          "name": {
            "type": "string",
            "description": "Name of the agent configuration",
            "example": "Customer Support Agent"
          },
          "description": {
            "type": "string",
            "description": "Description of the agent configuration",
            "example": "An AI agent designed to handle customer support inquiries"
          },
          "instructions": {
            "type": "string",
            "nullable": true,
            "description": "Instructions for the agent",
            "example": "Always greet the customer politely and try to resolve their issue efficiently."
          },
          "pictureUrl": {
            "type": "string",
            "description": "URL of the agent's picture",
            "example": "https://example.com/agent-images/support-agent.png"
          },
          "status": {
            "type": "string",
            "description": "Current status of the agent configuration",
            "example": "active"
          },
          "scope": {
            "type": "string",
            "description": "Scope of the agent configuration",
            "example": "workspace"
          },
          "userListStatus": {
            "type": "string",
            "description": "Status of the user list for this configuration",
            "example": "all_users"
          },
          "model": {
            "type": "object",
            "properties": {
              "providerId": {
                "type": "string",
                "description": "ID of the model provider",
                "example": "openai"
              },
              "modelId": {
                "type": "string",
                "description": "ID of the specific model",
                "example": "gpt-4"
              },
              "temperature": {
                "type": "number",
                "example": 0.7
              }
            }
          },
          "actions": {
            "type": "array",
            "example": []
          },
          "maxStepsPerRun": {
            "type": "integer",
            "example": 10
          },
          "templateId": {
            "type": "string",
            "nullable": true,
            "description": "ID of the template used for this configuration",
            "example": "b4e2f1a9c7"
          }
        }
      },
      "Conversation": {
        "type": "object",
        "properties": {
          "conversation": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 67890
              },
              "created": {
                "type": "integer",
                "example": 1625097600
              },
              "sId": {
                "type": "string",
                "description": "Unique string identifier for the conversation",
                "example": "3d8f6a2c1b"
              },
              "owner": {
                "$ref": "#/components/schemas/Workspace"
              },
              "title": {
                "type": "string",
                "description": "Title of the conversation",
                "example": "Customer Inquiry #1234"
              },
              "visibility": {
                "type": "string",
                "description": "Visibility setting of the conversation",
                "example": "private"
              },
              "content": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "sId": {
                        "type": "string",
                        "description": "Unique string identifier for the message",
                        "example": "9e7d5c3a1f"
                      },
                      "type": {
                        "type": "string",
                        "description": "Type of the message",
                        "example": "human"
                      },
                      "visibility": {
                        "type": "string",
                        "description": "Visibility setting of the message",
                        "example": "visible"
                      },
                      "version": {
                        "type": "integer",
                        "example": 1
                      },
                      "created": {
                        "type": "integer",
                        "example": 1625097700
                      },
                      "user": {
                        "$ref": "#/components/schemas/User"
                      },
                      "mentions": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Mention"
                        }
                      },
                      "content": {
                        "type": "string",
                        "description": "Content of the message",
                        "example": "Hello, I need help with my order."
                      },
                      "context": {
                        "$ref": "#/components/schemas/Context"
                      },
                      "agentMessageId": {
                        "type": "integer",
                        "example": 1
                      },
                      "parentMessageId": {
                        "type": "string",
                        "description": "ID of the parent message",
                        "example": "2b8e4f6a0c"
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the message",
                        "example": "completed"
                      },
                      "actions": {
                        "type": "array",
                        "example": []
                      },
                      "chainOfThought": {
                        "type": "string",
                        "nullable": true,
                        "description": "Chain of thought for the message",
                        "example": "The user is asking about their order. I should first greet them and then ask for their order number."
                      },
                      "rawContents": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "step": {
                              "type": "integer",
                              "example": 1
                            },
                            "content": {
                              "type": "string",
                              "description": "Content for each step",
                              "example": "Hello! I'd be happy to help you with your order. Could you please provide your order number?"
                            }
                          }
                        }
                      },
                      "error": {
                        "type": "string",
                        "nullable": true,
                        "description": "Error message, if any",
                        "example": null
                      },
                      "configuration": {
                        "$ref": "#/components/schemas/AgentConfiguration"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Mention": {
        "type": "object",
        "properties": {
          "configurationId": {
            "type": "string",
            "description": "ID of the mentioned agent configuration",
            "example": "7f3a9c2b1e"
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "The content of the message",
            "example": "This is my message"
          },
          "mentions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Mention"
            }
          },
          "context": {
            "$ref": "#/components/schemas/Context"
          }
        }
      },
      "ContentFragment": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the content fragment",
            "example": "My content fragment"
          },
          "content": {
            "type": "string",
            "description": "The content of the content fragment",
            "example": "This is my content fragment extracted text"
          },
          "url": {
            "type": "string",
            "description": "The URL of the content fragment",
            "example": "https://example.com/content"
          },
          "contentType": {
            "type": "string",
            "description": "The content type of the content fragment",
            "example": "text/plain"
          },
          "context": {
            "$ref": "#/components/schemas/Context"
          }
        }
      },
      "Vault": {
        "type": "object",
        "properties": {
          "sId": {
            "type": "string",
            "description": "Unique string identifier for the vault"
          },
          "name": {
            "type": "string",
            "description": "Name of the vault"
          },
          "kind": {
            "type": "string",
            "enum": ["regular", "global", "system", "public"],
            "description": "The kind of the vault"
          },
          "groupIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of group IDs that have access to the vault"
          }
        }
      },
      "Datasource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the datasource",
            "example": 12345
          },
          "createdAt": {
            "type": "integer",
            "description": "Timestamp of when the datasource was created",
            "example": 1625097600
          },
          "name": {
            "type": "string",
            "description": "Name of the datasource",
            "example": "Customer Knowledge Base"
          },
          "description": {
            "type": "string",
            "description": "Description of the datasource",
            "example": "Contains all customer-related information and FAQs"
          },
          "dustAPIProjectId": {
            "type": "string",
            "description": "ID of the associated Dust API project",
            "example": "5e9d8c7b6a"
          },
          "connectorId": {
            "type": "string",
            "description": "ID of the connector used for this datasource",
            "example": "1f3e5d7c9b"
          },
          "connectorProvider": {
            "type": "string",
            "description": "Provider of the connector (e.g., 'webcrawler')",
            "example": "webcrawler"
          },
          "assistantDefaultSelected": {
            "type": "boolean",
            "description": "Whether this datasource is selected by default for assistants",
            "example": true
          }
        }
      },
      "DatasourceView": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "enum": ["managed", "folder", "website", "apps"],
            "description": "The category of the data source view"
          },
          "createdAt": {
            "type": "number",
            "description": "Timestamp of when the data source view was created"
          },
          "dataSource": {
            "$ref": "#/components/schemas/Datasource"
          },
          "editedByUser": {
            "type": "object",
            "description": "The user who last edited the data source view",
            "properties": {
              "fullName": {
                "type": "string",
                "description": "Full name of the user"
              },
              "editedAt": {
                "type": "number",
                "description": "Timestamp of when the data source view was last edited by the user"
              }
            }
          },
          "id": {
            "type": "number",
            "description": "Unique identifier for the data source view"
          },
          "kind": {
            "type": "string",
            "enum": ["default", "custom"],
            "description": "The kind of the data source view"
          },
          "parentsIn": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of IDs included in this view, null if complete data source is taken",
            "nullable": true
          },
          "sId": {
            "type": "string",
            "description": "Unique string identifier for the data source view"
          },
          "updatedAt": {
            "type": "number",
            "description": "Timestamp of when the data source view was last updated"
          },
          "vaultId": {
            "type": "string",
            "description": "ID of the vault containing the data source view"
          }
        }
      },
      "Run": {
        "type": "object",
        "properties": {
          "run_id": {
            "type": "string",
            "description": "The ID of the run",
            "example": "4a2c6e8b0d"
          },
          "app_id": {
            "type": "string",
            "description": "The ID of the app",
            "example": "9f1d3b5a7c"
          },
          "status": {
            "type": "object",
            "properties": {
              "run": {
                "type": "string",
                "description": "The status of the run",
                "example": "succeeded"
              },
              "build": {
                "type": "string",
                "description": "The status of the build",
                "example": "succeeded"
              }
            }
          },
          "results": {
            "type": "object",
            "description": "The results of the run",
            "example": {}
          },
          "specification_hash": {
            "type": "string",
            "description": "The hash of the app specification",
            "example": "8c0a4e6d2f"
          },
          "traces": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "timestamp": {
                    "type": "number",
                    "description": "The timestamp of the trace",
                    "example": 1234567890
                  },
                  "trace": {
                    "type": "object",
                    "description": "The trace",
                    "example": {}
                  }
                }
              }
            }
          }
        }
      },
      "Document": {
        "type": "object",
        "properties": {
          "data_source_id": {
            "type": "string",
            "example": "3b7d9f1e5a"
          },
          "created": {
            "type": "number",
            "example": 1625097600
          },
          "document_id": {
            "type": "string",
            "example": "2c4a6e8d0f"
          },
          "timestamp": {
            "type": "number",
            "example": 1625097600
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["customer_support", "faq"]
          },
          "parents": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["7b9d1f3e5a", "2c4a6e8d0f"]
          },
          "source_url": {
            "type": "string",
            "nullable": true,
            "example": "https://example.com/support/article1"
          },
          "hash": {
            "type": "string",
            "example": "a1b2c3d4e5"
          },
          "text_size": {
            "type": "number",
            "example": 1024
          },
          "chunk_count": {
            "type": "number",
            "example": 5
          },
          "chunks": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "example": [
              {
                "chunk_id": "9f1d3b5a7c",
                "text": "This is the first chunk of the document.",
                "embedding": [0.1, 0.2, 0.3, 0.4]
              },
              {
                "chunk_id": "4a2c6e8b0d",
                "text": "This is the second chunk of the document.",
                "embedding": [0.5, 0.6, 0.7, 0.8]
              }
            ]
          },
          "text": {
            "type": "string",
            "example": "This is the full text content of the document. It contains multiple paragraphs and covers various topics related to customer support."
          },
          "token_count": {
            "type": "number",
            "nullable": true,
            "example": 150
          }
        }
      }
    }
  },
  "tags": []
}
